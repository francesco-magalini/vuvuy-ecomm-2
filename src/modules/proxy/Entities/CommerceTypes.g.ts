module Commerce.Proxy.Entities {
    
    /**
     * AutoExitMethodType enum type.
     */
    export enum AutoExitMethodType {
      
        /**
         * The Logoff member.
         */
        Logoff = 0,
        
        /**
         * The Lock member.
         */
        Lock = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * CardType enum type.
     */
    export enum CardType {
      
        /**
         * The InternationalCreditCard member.
         */
        InternationalCreditCard = 0,
        
        /**
         * The InternationalDebitCard member.
         */
        InternationalDebitCard = 1,
        
        /**
         * The LoyaltyCard member.
         */
        LoyaltyCard = 2,
        
        /**
         * The CorporateCard member.
         */
        CorporateCard = 3,
        
        /**
         * The CustomerCard member.
         */
        CustomerCard = 4,
        
        /**
         * The EmployeeCard member.
         */
        EmployeeCard = 5,
        
        /**
         * The SalespersonCard member.
         */
        SalespersonCard = 6,
        
        /**
         * The GiftCard member.
         */
        GiftCard = 7,
        
        /**
         * The Unknown member.
         */
        Unknown = -1
    }
    
    /**
     * PublishingAction enum type.
     */
    export enum PublishingAction {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Publish member.
         */
        Publish = 1,
        
        /**
         * The Delete member.
         */
        Delete = 2,
        
        /**
         * The Expire member.
         */
        Expire = 3
    }
    
    /**
     * ListingPublishingActionStatus enum type.
     */
    export enum ListingPublishingActionStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Ready member.
         */
        Ready = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Done member.
         */
        Done = 3,
        
        /**
         * The Failed member.
         */
        Failed = 4
    }
    
    /**
     * OnlineChannelPublishStatusType enum type.
     */
    export enum OnlineChannelPublishStatusType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Draft member.
         */
        Draft = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Published member.
         */
        Published = 3,
        
        /**
         * The Failed member.
         */
        Failed = 4
    }
    
    /**
     * ReceiptTransactionType enum type.
     */
    export enum ReceiptTransactionType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Sale member.
         */
        Sale = 1,
        
        /**
         * The Return member.
         */
        Return = 2,
        
        /**
         * The Payment member.
         */
        Payment = 5,
        
        /**
         * The SalesOrder member.
         */
        SalesOrder = 6,
        
        /**
         * The Quote member.
         */
        Quote = 7,
        
        /**
         * The SuspendedTransaction member.
         */
        SuspendedTransaction = 9
    }
    
    /**
     * EmployeePriceOverrideType enum type.
     */
    export enum EmployeePriceOverrideType {
      
        /**
         * The HigherAndLower member.
         */
        HigherAndLower = 0,
        
        /**
         * The HigherOnly member.
         */
        HigherOnly = 1,
        
        /**
         * The LowerOnly member.
         */
        LowerOnly = 2,
        
        /**
         * The NotAllowed member.
         */
        NotAllowed = 3
    }
    
    /**
     * KeyInPriceRestriction enum type.
     */
    export enum KeyInPriceRestriction {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NewPrice member.
         */
        NewPrice = 1,
        
        /**
         * The HigherOrEqualPrice member.
         */
        HigherOrEqualPrice = 2,
        
        /**
         * The LowerOrEqualPrice member.
         */
        LowerOrEqualPrice = 3,
        
        /**
         * The NotAllowed member.
         */
        NotAllowed = 4
    }
    
    /**
     * KeyInQuantityRestriction enum type.
     */
    export enum KeyInQuantityRestriction {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Required member.
         */
        Required = 1,
        
        /**
         * The NotAllowed member.
         */
        NotAllowed = 2
    }
    
    /**
     * ProductDimensionType enum type.
     */
    export enum ProductDimensionType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Color member.
         */
        Color = 1,
        
        /**
         * The Configuration member.
         */
        Configuration = 2,
        
        /**
         * The Size member.
         */
        Size = 3,
        
        /**
         * The Style member.
         */
        Style = 4
    }
    
    /**
     * ProductType enum type.
     */
    export enum ProductType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The KitMaster member.
         */
        KitMaster = 1,
        
        /**
         * The KitVariant member.
         */
        KitVariant = 2,
        
        /**
         * The Master member.
         */
        Master = 3,
        
        /**
         * The Standalone member.
         */
        Standalone = 4,
        
        /**
         * The Variant member.
         */
        Variant = 5
    }
    
    /**
     * NumberSequenceSeedType enum type.
     */
    export enum NumberSequenceSeedType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ReceiptDefault member.
         */
        ReceiptDefault = 1,
        
        /**
         * The ReceiptSale member.
         */
        ReceiptSale = 2,
        
        /**
         * The ReceiptReturn member.
         */
        ReceiptReturn = 3,
        
        /**
         * The ReceiptSalesOrder member.
         */
        ReceiptSalesOrder = 4,
        
        /**
         * The ReceiptSalesInvoice member.
         */
        ReceiptSalesInvoice = 5,
        
        /**
         * The ReceiptPayment member.
         */
        ReceiptPayment = 6,
        
        /**
         * The BatchId member.
         */
        BatchId = 7,
        
        /**
         * The TransactionId member.
         */
        TransactionId = 8,
        
        /**
         * The ReceiptCustomerSalesOrder member.
         */
        ReceiptCustomerSalesOrder = 10,
        
        /**
         * The ReceiptCustomerQuote member.
         */
        ReceiptCustomerQuote = 11,
        
        /**
         * The ReceiptSuspendedTransaction member.
         */
        ReceiptSuspendedTransaction = 22
    }
    
    /**
     * ReasonCodeSourceType enum type.
     */
    export enum ReasonCodeSourceType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The AddSalesperson member.
         */
        AddSalesperson = 1,
        
        /**
         * The EndOfTransaction member.
         */
        EndOfTransaction = 2,
        
        /**
         * The ItemDiscount member.
         */
        ItemDiscount = 3,
        
        /**
         * The ItemNotOnFile member.
         */
        ItemNotOnFile = 4,
        
        /**
         * The LineItemTaxChange member.
         */
        LineItemTaxChange = 5,
        
        /**
         * The Markup member.
         */
        Markup = 6,
        
        /**
         * The NegativeAdjustment member.
         */
        NegativeAdjustment = 7,
        
        /**
         * The NfcEContingencyModeEnabled member.
         */
        NfcEContingencyModeEnabled = 8,
        
        /**
         * The NfcEVoided member.
         */
        NfcEVoided = 9,
        
        /**
         * The OpenDrawer member.
         */
        OpenDrawer = 10,
        
        /**
         * The OverridePrice member.
         */
        OverridePrice = 11,
        
        /**
         * The ReturnItem member.
         */
        ReturnItem = 12,
        
        /**
         * The ReturnTransaction member.
         */
        ReturnTransaction = 13,
        
        /**
         * The SerialNumber member.
         */
        SerialNumber = 14,
        
        /**
         * The StartOfTransaction member.
         */
        StartOfTransaction = 15,
        
        /**
         * The TenderDeclaration member.
         */
        TenderDeclaration = 16,
        
        /**
         * The TotalDiscount member.
         */
        TotalDiscount = 17,
        
        /**
         * The TransactionTaxChange member.
         */
        TransactionTaxChange = 18,
        
        /**
         * The VoidItem member.
         */
        VoidItem = 19,
        
        /**
         * The VoidPayment member.
         */
        VoidPayment = 20,
        
        /**
         * The VoidTransaction member.
         */
        VoidTransaction = 21,
        
        /**
         * The OrderFulfillment member.
         */
        OrderFulfillment = 22,
        
        /**
         * The ManualCharge member.
         */
        ManualCharge = 23
    }
    
    /**
     * TriggerFunctionType enum type.
     */
    export enum TriggerFunctionType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Item member.
         */
        Item = 1,
        
        /**
         * The InfoCode member.
         */
        InfoCode = 2
    }
    
    /**
     * QueryType enum type.
     */
    export enum QueryType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NameAndDescription member.
         */
        NameAndDescription = 1,
        
        /**
         * The AotObject member.
         */
        AotObject = 2
    }
    
    /**
     * ChangeAction enum type.
     */
    export enum ChangeAction {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Insert member.
         */
        Insert = 1,
        
        /**
         * The Update member.
         */
        Update = 2,
        
        /**
         * The Delete member.
         */
        Delete = 3
    }
    
    /**
     * PeriodicDiscountOfferType enum type.
     */
    export enum PeriodicDiscountOfferType {
      
        /**
         * The MultipleBuy member.
         */
        MultipleBuy = 0,
        
        /**
         * The MixAndMatch member.
         */
        MixAndMatch = 1,
        
        /**
         * The Offer member.
         */
        Offer = 2,
        
        /**
         * The Promotion member.
         */
        Promotion = 3,
        
        /**
         * The Threshold member.
         */
        Threshold = 4,
        
        /**
         * The LeastExpensiveFavorRetailer member.
         */
        LeastExpensiveFavorRetailer = 5,
        
        /**
         * The OfferLineQuantityLimit member.
         */
        OfferLineQuantityLimit = 6,
        
        /**
         * The ShippingThreshold member.
         */
        ShippingThreshold = 7
    }
    
    /**
     * SearchFilterType enum type.
     */
    export enum SearchFilterType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Text member.
         */
        Text = 1
    }
    
    /**
     * InfoCodeActivity enum type.
     */
    export enum InfoCodeActivity {
      
        /**
         * The Transaction member.
         */
        Transaction = 0,
        
        /**
         * The OrderFulfillment member.
         */
        OrderFulfillment = 1
    }
    
    /**
     * SrsReportFileFormat enum type.
     */
    export enum SrsReportFileFormat {
      
        /**
         * The CSV member.
         */
        CSV = 0,
        
        /**
         * The Excel member.
         */
        Excel = 1,
        
        /**
         * The HTML4_0 member.
         */
        HTML4_0 = 2,
        
        /**
         * The Image member.
         */
        Image = 3,
        
        /**
         * The MHTML member.
         */
        MHTML = 4,
        
        /**
         * The PDF member.
         */
        PDF = 5,
        
        /**
         * The XML member.
         */
        XML = 6
    }
    
    /**
     * ShiftReconciliationLineStatus enum type.
     */
    export enum ShiftReconciliationLineStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Pending member.
         */
        Pending = 1,
        
        /**
         * The Reconciled member.
         */
        Reconciled = 2,
        
        /**
         * The Closed member.
         */
        Closed = 3
    }
    
    /**
     * ProductSearchServiceType enum type.
     */
    export enum ProductSearchServiceType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ChannelDatabase member.
         */
        ChannelDatabase = 1,
        
        /**
         * The CommerceAzureSearchService member.
         */
        CommerceAzureSearchService = 2
    }
    
    /**
     * SearchSuggestionType enum type.
     */
    export enum SearchSuggestionType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Keyword member.
         */
        Keyword = 1,
        
        /**
         * The Product member.
         */
        Product = 2,
        
        /**
         * The ScopedCategory member.
         */
        ScopedCategory = 4,
        
        /**
         * The Category member.
         */
        Category = 8
    }
    
    /**
     * SalesStatus enum type.
     */
    export enum SalesStatus {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The Created member.
         */
        Created = 1,
        
        /**
         * The Processing member.
         */
        Processing = 2,
        
        /**
         * The Delivered member.
         */
        Delivered = 3,
        
        /**
         * The Invoiced member.
         */
        Invoiced = 4,
        
        /**
         * The Confirmed member.
         */
        Confirmed = 5,
        
        /**
         * The Sent member.
         */
        Sent = 6,
        
        /**
         * The Canceled member.
         */
        Canceled = 7,
        
        /**
         * The Lost member.
         */
        Lost = 8
    }
    
    /**
     * EFTType enum type.
     */
    export enum EFTType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The External member.
         */
        External = 1,
        
        /**
         * The PaymentSDK member.
         */
        PaymentSDK = 2,
        
        /**
         * The DynamicsOnline member.
         */
        DynamicsOnline = 3
    }
    
    /**
     * FilterDeliveryModeOption enum type.
     */
    export enum FilterDeliveryModeOption {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The FilterOutNonCarrierDeliveryMode member.
         */
        FilterOutNonCarrierDeliveryMode = 1,
        
        /**
         * The DoNotFilterByChannel member.
         */
        DoNotFilterByChannel = 2
    }
    
    /**
     * InventoryDocumentLineOperationResultMode enum type.
     */
    export enum InventoryDocumentLineOperationResultMode {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NoLines member.
         */
        NoLines = 1,
        
        /**
         * The AllLines member.
         */
        AllLines = 2
    }
    
    /**
     * InventoryDocumentStatus enum type.
     */
    export enum InventoryDocumentStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Paused member.
         */
        Paused = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Committed member.
         */
        Committed = 3,
        
        /**
         * The ProcessSucceeded member.
         */
        ProcessSucceeded = 4,
        
        /**
         * The ProcessFailed member.
         */
        ProcessFailed = 5
    }
    
    /**
     * InventoryDocumentUpdateLinesActionType enum type.
     */
    export enum InventoryDocumentUpdateLinesActionType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ApplyQuantity member.
         */
        ApplyQuantity = 1,
        
        /**
         * The ApplyMaximumQuantity member.
         */
        ApplyMaximumQuantity = 2
    }
    
    /**
     * InventoryInboundOutboundDocumentOperationType enum type.
     */
    export enum InventoryInboundOutboundDocumentOperationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ReceivePurchaseOrder member.
         */
        ReceivePurchaseOrder = 1,
        
        /**
         * The ReceiveTransferOrder member.
         */
        ReceiveTransferOrder = 2,
        
        /**
         * The ShipTransferOrder member.
         */
        ShipTransferOrder = 3,
        
        /**
         * The CreateTransferOrder member.
         */
        CreateTransferOrder = 4
    }
    
    /**
     * InventoryInboundOutboundSourceDocumentStatus enum type.
     */
    export enum InventoryInboundOutboundSourceDocumentStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Requested member.
         */
        Requested = 1,
        
        /**
         * The Shipped member.
         */
        Shipped = 2,
        
        /**
         * The PartiallyShipped member.
         */
        PartiallyShipped = 3,
        
        /**
         * The Received member.
         */
        Received = 4,
        
        /**
         * The PartiallyReceived member.
         */
        PartiallyReceived = 5,
        
        /**
         * The Cancelled member.
         */
        Cancelled = 6
    }
    
    /**
     * InventorySourceDocumentType enum type.
     */
    export enum InventorySourceDocumentType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The PurchaseOrder member.
         */
        PurchaseOrder = 1,
        
        /**
         * The TransferOrder member.
         */
        TransferOrder = 2
    }
    
    /**
     * InventoryInboundOutboundDocumentState enum type.
     */
    export enum InventoryInboundOutboundDocumentState {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Active member.
         */
        Active = 1,
        
        /**
         * The Complete member.
         */
        Complete = 2,
        
        /**
         * The Draft member.
         */
        Draft = 3
    }
    
    /**
     * ReceiptNumberResetType enum type.
     */
    export enum ReceiptNumberResetType {
      
        /**
         * The SingleTime member.
         */
        SingleTime = 0,
        
        /**
         * The YearlyRecurrence member.
         */
        YearlyRecurrence = 1
    }
    
    /**
     * PeriodUnit enum type.
     */
    export enum PeriodUnit {
      
        /**
         * The Day member.
         */
        Day = 0,
        
        /**
         * The Week member.
         */
        Week = 1,
        
        /**
         * The Month member.
         */
        Month = 2,
        
        /**
         * The Year member.
         */
        Year = 3,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * WarrantyPriceRangeBaseType enum type.
     */
    export enum WarrantyPriceRangeBaseType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The BasePrice member.
         */
        BasePrice = 1,
        
        /**
         * The SellingPrice member.
         */
        SellingPrice = 2
    }
    
    /**
     * LogOnKeyboardType enum type.
     */
    export enum LogOnKeyboardType {
      
        /**
         * The OSKeyboard member.
         */
        OSKeyboard = 0,
        
        /**
         * The Numpad member.
         */
        Numpad = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * LogOnLayoutType enum type.
     */
    export enum LogOnLayoutType {
      
        /**
         * The Centered member.
         */
        Centered = 0,
        
        /**
         * The Right member.
         */
        Right = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * DeliveryModeTypeFilter enum type.
     */
    export enum DeliveryModeTypeFilter {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Shipping member.
         */
        Shipping = 1,
        
        /**
         * The Pickup member.
         */
        Pickup = 2
    }
    
    /**
     * InventoryDocumentValidationResultSeverity enum type.
     */
    export enum InventoryDocumentValidationResultSeverity {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Informational member.
         */
        Informational = 1,
        
        /**
         * The Warning member.
         */
        Warning = 2,
        
        /**
         * The Error member.
         */
        Error = 3
    }
    
    /**
     * InventoryDocumentOverreceivingErrors enum type.
     */
    export enum InventoryDocumentOverreceivingErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The QuantityExceededAllowed member.
         */
        QuantityExceededAllowed,
        
        /**
         * The QuantityExceededAllowedWithinOverreceivingTolerance member.
         */
        QuantityExceededAllowedWithinOverreceivingTolerance,
        
        /**
         * The QuantityExceededOverreceivingTolerance member.
         */
        QuantityExceededOverreceivingTolerance
    }
    
    /**
     * InventoryDocumentSerialNumberErrors enum type.
     */
    export enum InventoryDocumentSerialNumberErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The RequiredSerialNumberNotProvided member.
         */
        RequiredSerialNumberNotProvided,
        
        /**
         * The DuplicateSerialNumberIsNotAllowed member.
         */
        DuplicateSerialNumberIsNotAllowed,
        
        /**
         * The RequiredSerialNumberValidationNotProvided member.
         */
        RequiredSerialNumberValidationNotProvided
    }
    
    /**
     * AddressType enum type.
     */
    export enum AddressType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Invoice member.
         */
        Invoice = 1,
        
        /**
         * The Delivery member.
         */
        Delivery = 2,
        
        /**
         * The AltDlv member.
         */
        AltDlv = 3,
        
        /**
         * The SWIFT member.
         */
        SWIFT = 4,
        
        /**
         * The Payment member.
         */
        Payment = 5,
        
        /**
         * The Service member.
         */
        Service = 6,
        
        /**
         * The Home member.
         */
        Home = 7,
        
        /**
         * The Other member.
         */
        Other = 8,
        
        /**
         * The Business member.
         */
        Business = 9,
        
        /**
         * The RemitTo member.
         */
        RemitTo = 10,
        
        /**
         * The ShipCarrierThirdPartyShipping member.
         */
        ShipCarrierThirdPartyShipping = 11,
        
        /**
         * The Statement member.
         */
        Statement = 12,
        
        /**
         * The FixedAsset member.
         */
        FixedAsset = 15,
        
        /**
         * The Onetime member.
         */
        Onetime = 16,
        
        /**
         * The Recruit member.
         */
        Recruit = 17,
        
        /**
         * The SMS member.
         */
        SMS = 18,
        
        /**
         * The Lading_W member.
         */
        Lading_W = 101,
        
        /**
         * The Unlading_W member.
         */
        Unlading_W = 102,
        
        /**
         * The Consignment_IN member.
         */
        Consignment_IN = 103
    }
    
    /**
     * AttributeDataType enum type.
     */
    export enum AttributeDataType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Currency member.
         */
        Currency = 1,
        
        /**
         * The DateTime member.
         */
        DateTime = 2,
        
        /**
         * The Decimal member.
         */
        Decimal = 3,
        
        /**
         * The Integer member.
         */
        Integer = 4,
        
        /**
         * The Text member.
         */
        Text = 5,
        
        /**
         * The TrueFalse member.
         */
        TrueFalse = 6,
        
        /**
         * The Video member.
         */
        Video = 40,
        
        /**
         * The Image member.
         */
        Image = 41
    }
    
    /**
     * BarcodeEntryMethodType enum type.
     */
    export enum BarcodeEntryMethodType {
      
        /**
         * The SingleScanned member.
         */
        SingleScanned = 0,
        
        /**
         * The MultipleScanned member.
         */
        MultipleScanned = 1,
        
        /**
         * The ManuallyEntered member.
         */
        ManuallyEntered = 2,
        
        /**
         * The Selected member.
         */
        Selected = 3
    }
    
    /**
     * BarcodeMaskType enum type.
     */
    export enum BarcodeMaskType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Item member.
         */
        Item = 1,
        
        /**
         * The Customer member.
         */
        Customer = 2,
        
        /**
         * The Employee member.
         */
        Employee = 3,
        
        /**
         * The Coupon member.
         */
        Coupon = 4,
        
        /**
         * The DataEntry member.
         */
        DataEntry = 5,
        
        /**
         * The Salesperson member.
         */
        Salesperson = 6,
        
        /**
         * The Pharmacy member.
         */
        Pharmacy = 7,
        
        /**
         * The DiscountCode member.
         */
        DiscountCode = 8,
        
        /**
         * The GiftCard member.
         */
        GiftCard = 9,
        
        /**
         * The LoyaltyCard member.
         */
        LoyaltyCard = 10
    }
    
    /**
     * TransactionStatus enum type.
     */
    export enum TransactionStatus {
      
        /**
         * The Normal member.
         */
        Normal = 0,
        
        /**
         * The Voided member.
         */
        Voided = 1,
        
        /**
         * The Posted member.
         */
        Posted = 2,
        
        /**
         * The Concluded member.
         */
        Concluded = 3,
        
        /**
         * The Canceled member.
         */
        Canceled = 4,
        
        /**
         * The OnHold member.
         */
        OnHold = 5,
        
        /**
         * The Training member.
         */
        Training = 6,
        
        /**
         * The Aborted member.
         */
        Aborted = 7
    }
    
    /**
     * GiftCardOperationType enum type.
     */
    export enum GiftCardOperationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Issue member.
         */
        Issue = 1,
        
        /**
         * The AddTo member.
         */
        AddTo = 2,
        
        /**
         * The CashOut member.
         */
        CashOut = 3
    }
    
    /**
     * RetailGiftCardType enum type.
     */
    export enum RetailGiftCardType {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The InternalGiftCard member.
         */
        InternalGiftCard = 1,
        
        /**
         * The ExternalGiftCard member.
         */
        ExternalGiftCard = 2
    }
    
    /**
     * DiscountLineType enum type.
     */
    export enum DiscountLineType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The CustomerDiscount member.
         */
        CustomerDiscount = 1,
        
        /**
         * The PeriodicDiscount member.
         */
        PeriodicDiscount = 2,
        
        /**
         * The ManualDiscount member.
         */
        ManualDiscount = 3,
        
        /**
         * The LoyaltyDiscount member.
         */
        LoyaltyDiscount = 4,
        
        /**
         * The TenderTypeDiscount member.
         */
        TenderTypeDiscount = 5
    }
    
    /**
     * ManualDiscountType enum type.
     */
    export enum ManualDiscountType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The LineDiscountAmount member.
         */
        LineDiscountAmount = 1,
        
        /**
         * The LineDiscountPercent member.
         */
        LineDiscountPercent = 2,
        
        /**
         * The TotalDiscountAmount member.
         */
        TotalDiscountAmount = 3,
        
        /**
         * The TotalDiscountPercent member.
         */
        TotalDiscountPercent = 4
    }
    
    /**
     * CustomerDiscountType enum type.
     */
    export enum CustomerDiscountType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The LineDiscount member.
         */
        LineDiscount = 1,
        
        /**
         * The MultilineDiscount member.
         */
        MultilineDiscount = 2,
        
        /**
         * The TotalDiscount member.
         */
        TotalDiscount = 3
    }
    
    /**
     * ConcurrencyMode enum type.
     */
    export enum ConcurrencyMode {
      
        /**
         * The Exclusive member.
         */
        Exclusive = 0,
        
        /**
         * The BestPrice member.
         */
        BestPrice = 1,
        
        /**
         * The Compounded member.
         */
        Compounded = 2
    }
    
    /**
     * ReasonCodeInputType enum type.
     */
    export enum ReasonCodeInputType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The SubCode member.
         */
        SubCode = 1,
        
        /**
         * The Date member.
         */
        Date = 2,
        
        /**
         * The Numeric member.
         */
        Numeric = 3,
        
        /**
         * The Item member.
         */
        Item = 4,
        
        /**
         * The Customer member.
         */
        Customer = 5,
        
        /**
         * The Staff member.
         */
        Staff = 6,
        
        /**
         * The Text member.
         */
        Text = 9,
        
        /**
         * The SubCodeButtons member.
         */
        SubCodeButtons = 10,
        
        /**
         * The AgeLimit member.
         */
        AgeLimit = 11,
        
        /**
         * The CompositeSubCodes member.
         */
        CompositeSubCodes = 12
    }
    
    /**
     * ReasonCodeLineType enum type.
     */
    export enum ReasonCodeLineType {
      
        /**
         * The Header member.
         */
        Header = 0,
        
        /**
         * The Sales member.
         */
        Sales = 1,
        
        /**
         * The Payment member.
         */
        Payment = 2,
        
        /**
         * The IncomeExpense member.
         */
        IncomeExpense = 3,
        
        /**
         * The NoSale member.
         */
        NoSale = 4,
        
        /**
         * The Affiliation member.
         */
        Affiliation = 5,
        
        /**
         * The Fiscal member.
         */
        Fiscal = 6
    }
    
    /**
     * ChargeModule enum type.
     */
    export enum ChargeModule {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Sales member.
         */
        Sales = 1,
        
        /**
         * The Retail member.
         */
        Retail = 3
    }
    
    /**
     * ChargeType enum type.
     */
    export enum ChargeType {
      
        /**
         * The ManualCharge member.
         */
        ManualCharge = 0,
        
        /**
         * The PriceCharge member.
         */
        PriceCharge = 1,
        
        /**
         * The AutoCharge member.
         */
        AutoCharge = 2
    }
    
    /**
     * ChargeMethod enum type.
     */
    export enum ChargeMethod {
      
        /**
         * The Fixed member.
         */
        Fixed = 0,
        
        /**
         * The Pieces member.
         */
        Pieces = 1,
        
        /**
         * The Percent member.
         */
        Percent = 2,
        
        /**
         * The InterCompanyPercent member.
         */
        InterCompanyPercent = 3,
        
        /**
         * The External member.
         */
        External = 4,
        
        /**
         * The Proportional member.
         */
        Proportional = 5
    }
    
    /**
     * CashType enum type.
     */
    export enum CashType {
      
        /**
         * The Coin member.
         */
        Coin = 0,
        
        /**
         * The Note member.
         */
        Note = 1
    }
    
    /**
     * IncomeExpenseAccountType enum type.
     */
    export enum IncomeExpenseAccountType {
      
        /**
         * The Income member.
         */
        Income = 0,
        
        /**
         * The Expense member.
         */
        Expense = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * TenderLineStatus enum type.
     */
    export enum TenderLineStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NotProcessed member.
         */
        NotProcessed = 1,
        
        /**
         * The PendingCommit member.
         */
        PendingCommit = 2,
        
        /**
         * The Voided member.
         */
        Voided = 3,
        
        /**
         * The Committed member.
         */
        Committed = 4,
        
        /**
         * The Historical member.
         */
        Historical = 5
    }
    
    /**
     * TenderLineVoidStatus enum type.
     */
    export enum TenderLineVoidStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NormalVoid member.
         */
        NormalVoid = 1,
        
        /**
         * The ForceVoided member.
         */
        ForceVoided = 2,
        
        /**
         * The ForceVoidReconciled member.
         */
        ForceVoidReconciled = 3
    }
    
    /**
     * PaymentProcessingType enum type.
     */
    export enum PaymentProcessingType {
      
        /**
         * The Immediate member.
         */
        Immediate = 0,
        
        /**
         * The Deferred member.
         */
        Deferred = 1,
        
        /**
         * The LinkedRefund member.
         */
        LinkedRefund = 2,
        
        /**
         * The Recalled member.
         */
        Recalled = 3
    }
    
    /**
     * CreditCardProcessorStatus enum type.
     */
    export enum CreditCardProcessorStatus {
      
        /**
         * The NA member.
         */
        NA = 0,
        
        /**
         * The Approved member.
         */
        Approved = 1,
        
        /**
         * The Declined member.
         */
        Declined = 2,
        
        /**
         * The Error member.
         */
        Error = 3
    }
    
    /**
     * ContactInformationType enum type.
     */
    export enum ContactInformationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Phone member.
         */
        Phone = 1,
        
        /**
         * The Email member.
         */
        Email = 2,
        
        /**
         * The Url member.
         */
        Url = 3,
        
        /**
         * The Telex member.
         */
        Telex = 4,
        
        /**
         * The Fax member.
         */
        Fax = 5,
        
        /**
         * The CellularPhone member.
         */
        CellularPhone = 6
    }
    
    /**
     * CommerceEntityDataLevel enum type.
     */
    export enum CommerceEntityDataLevel {
      
        /**
         * The Identity member.
         */
        Identity = 0,
        
        /**
         * The Minimal member.
         */
        Minimal = 1,
        
        /**
         * The Standard member.
         */
        Standard = 2,
        
        /**
         * The Extended member.
         */
        Extended = 3,
        
        /**
         * The Complete member.
         */
        Complete = 4
    }
    
    /**
     * ProductPropertyType enum type.
     */
    export enum ProductPropertyType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Currency member.
         */
        Currency = 1,
        
        /**
         * The DateTime member.
         */
        DateTime = 2,
        
        /**
         * The Decimal member.
         */
        Decimal = 3,
        
        /**
         * The Integer member.
         */
        Integer = 4,
        
        /**
         * The Text member.
         */
        Text = 5,
        
        /**
         * The Boolean member.
         */
        Boolean = 6,
        
        /**
         * The Video member.
         */
        Video = 40,
        
        /**
         * The Image member.
         */
        Image = 41
    }
    
    /**
     * AttributeGroupType enum type.
     */
    export enum AttributeGroupType {
      
        /**
         * The Default member.
         */
        Default = 0,
        
        /**
         * The Specification member.
         */
        Specification = 1
    }
    
    /**
     * ProductSource enum type.
     */
    export enum ProductSource {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Local member.
         */
        Local = 1,
        
        /**
         * The Remote member.
         */
        Remote = 2
    }
    
    /**
     * RoundingMethod enum type.
     */
    export enum RoundingMethod {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Nearest member.
         */
        Nearest = 1,
        
        /**
         * The Up member.
         */
        Up = 2,
        
        /**
         * The Down member.
         */
        Down = 3
    }
    
    /**
     * PriceMethod enum type.
     */
    export enum PriceMethod {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Fixed member.
         */
        Fixed = 1,
        
        /**
         * The AmountOff member.
         */
        AmountOff = 2,
        
        /**
         * The PercentOff member.
         */
        PercentOff = 3
    }
    
    /**
     * LineMultilineDiscountOnItem enum type.
     */
    export enum LineMultilineDiscountOnItem {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Line member.
         */
        Line = 1,
        
        /**
         * The Multiline member.
         */
        Multiline = 2,
        
        /**
         * The Both member.
         */
        Both = 3
    }
    
    /**
     * LoyaltyRewardPointEntryType enum type.
     */
    export enum LoyaltyRewardPointEntryType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Earn member.
         */
        Earn = 1,
        
        /**
         * The Redeem member.
         */
        Redeem = 2,
        
        /**
         * The ReturnEarned member.
         */
        ReturnEarned = 3,
        
        /**
         * The Adjust member.
         */
        Adjust = 4,
        
        /**
         * The Refund member.
         */
        Refund = 5
    }
    
    /**
     * LoyaltyRewardPointType enum type.
     */
    export enum LoyaltyRewardPointType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Quantity member.
         */
        Quantity = 1,
        
        /**
         * The Amount member.
         */
        Amount = 2
    }
    
    /**
     * TransactionType enum type.
     */
    export enum TransactionType {
      
        /**
         * The LogOff member.
         */
        LogOff = 0,
        
        /**
         * The LogOn member.
         */
        LogOn = 1,
        
        /**
         * The Sales member.
         */
        Sales = 2,
        
        /**
         * The Payment member.
         */
        Payment = 3,
        
        /**
         * The RemoveTender member.
         */
        RemoveTender = 4,
        
        /**
         * The FloatEntry member.
         */
        FloatEntry = 5,
        
        /**
         * The ChangeTender member.
         */
        ChangeTender = 6,
        
        /**
         * The TenderDeclaration member.
         */
        TenderDeclaration = 7,
        
        /**
         * The OpenDrawer member.
         */
        OpenDrawer = 9,
        
        /**
         * The SalesOrder member.
         */
        SalesOrder = 14,
        
        /**
         * The SalesInvoice member.
         */
        SalesInvoice = 15,
        
        /**
         * The BankDrop member.
         */
        BankDrop = 16,
        
        /**
         * The SafeDrop member.
         */
        SafeDrop = 17,
        
        /**
         * The IncomeExpense member.
         */
        IncomeExpense = 18,
        
        /**
         * The CustomerOrder member.
         */
        CustomerOrder = 19,
        
        /**
         * The StartingAmount member.
         */
        StartingAmount = 20,
        
        /**
         * The SuspendShift member.
         */
        SuspendShift = 21,
        
        /**
         * The BlindCloseShift member.
         */
        BlindCloseShift = 22,
        
        /**
         * The CloseShift member.
         */
        CloseShift = 23,
        
        /**
         * The PrintX member.
         */
        PrintX = 24,
        
        /**
         * The PrintZ member.
         */
        PrintZ = 25,
        
        /**
         * The PendingSalesOrder member.
         */
        PendingSalesOrder = 27,
        
        /**
         * The KitDisassembly member.
         */
        KitDisassembly = 28,
        
        /**
         * The AsyncCustomerQuote member.
         */
        AsyncCustomerQuote = 31,
        
        /**
         * The AsyncCustomerOrder member.
         */
        AsyncCustomerOrder = 33,
        
        /**
         * The ForceDeleteShift member.
         */
        ForceDeleteShift = 34,
        
        /**
         * The GiftCardInquiry member.
         */
        GiftCardInquiry = 35,
        
        /**
         * The SuspendedTransaction member.
         */
        SuspendedTransaction = 36,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * CashManagementTransactionContext enum type.
     */
    export enum CashManagementTransactionContext {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The Shift member.
         */
        Shift = 1,
        
        /**
         * The Safe member.
         */
        Safe = 2,
        
        /**
         * The Bank member.
         */
        Bank = 3
    }
    
    /**
     * CustomerTimelineItemEntityType enum type.
     */
    export enum CustomerTimelineItemEntityType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Activity member.
         */
        Activity = 1,
        
        /**
         * The Note member.
         */
        Note = 2,
        
        /**
         * The UnifiedActivity member.
         */
        UnifiedActivity = 3
    }
    
    /**
     * EmployeePermissionsAllowPrintingReceiptCopy enum type.
     */
    export enum EmployeePermissionsAllowPrintingReceiptCopy {
      
        /**
         * The Always member.
         */
        Always = 0,
        
        /**
         * The OnlyOnce member.
         */
        OnlyOnce = 1,
        
        /**
         * The OnlyOnceHqAvailable member.
         */
        OnlyOnceHqAvailable = 2,
        
        /**
         * The Never member.
         */
        Never = 3
    }
    
    /**
     * AddressFormatLineType enum type.
     */
    export enum AddressFormatLineType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ZipCode member.
         */
        ZipCode = 1,
        
        /**
         * The City member.
         */
        City = 2,
        
        /**
         * The County member.
         */
        County = 3,
        
        /**
         * The State member.
         */
        State = 4,
        
        /**
         * The CountryRegion member.
         */
        CountryRegion = 5,
        
        /**
         * The StreetName member.
         */
        StreetName = 6,
        
        /**
         * The District member.
         */
        District = 7,
        
        /**
         * The StreetNumber member.
         */
        StreetNumber = 8,
        
        /**
         * The BuildingCompliment member.
         */
        BuildingCompliment = 9,
        
        /**
         * The Postbox member.
         */
        Postbox = 10,
        
        /**
         * The House_RU member.
         */
        House_RU = 21,
        
        /**
         * The Flat_RU member.
         */
        Flat_RU = 22,
        
        /**
         * The CountryOKSMCode_RU member.
         */
        CountryOKSMCode_RU = 23
    }
    
    /**
     * StatementMethod enum type.
     */
    export enum StatementMethod {
      
        /**
         * The Staff member.
         */
        Staff = 0,
        
        /**
         * The PosTerminal member.
         */
        PosTerminal = 1,
        
        /**
         * The Total member.
         */
        Total = 2,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * SalesRepPromptType enum type.
     */
    export enum SalesRepPromptType {
      
        /**
         * The NoPrompt member.
         */
        NoPrompt = 0,
        
        /**
         * The PromptOnCartCreation member.
         */
        PromptOnCartCreation = 1,
        
        /**
         * The PromptOnCartLineCreation member.
         */
        PromptOnCartLineCreation = 2,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * RetailProductSearchType enum type.
     */
    export enum RetailProductSearchType {
      
        /**
         * The MatchAnySearchTerms member.
         */
        MatchAnySearchTerms = 0,
        
        /**
         * The MatchAllSearchTerms member.
         */
        MatchAllSearchTerms = 1
    }
    
    /**
     * RetailDenominationsToDisplay enum type.
     */
    export enum RetailDenominationsToDisplay {
      
        /**
         * The GreaterOrEqualToAmountDue member.
         */
        GreaterOrEqualToAmountDue = 0,
        
        /**
         * The AllDenominations member.
         */
        AllDenominations = 1
    }
    
    /**
     * EmployeeLogonType enum type.
     */
    export enum EmployeeLogonType {
      
        /**
         * The RetailIdentityProvider member.
         */
        RetailIdentityProvider = 0,
        
        /**
         * The AzureActiveDirectory member.
         */
        AzureActiveDirectory = 1
    }
    
    /**
     * RetailCustomerSearchMode enum type.
     */
    export enum RetailCustomerSearchMode {
      
        /**
         * The Local member.
         */
        Local = 0,
        
        /**
         * The Remote member.
         */
        Remote = 1
    }
    
    /**
     * RequirePaymentForFulfillment enum type.
     */
    export enum RequirePaymentForFulfillment {
      
        /**
         * The AllowPayLater member.
         */
        AllowPayLater = 0,
        
        /**
         * The CardRequired member.
         */
        CardRequired = 1
    }
    
    /**
     * CardNotPresentProcessingConfiguration enum type.
     */
    export enum CardNotPresentProcessingConfiguration {
      
        /**
         * The UseHardwareStation member.
         */
        UseHardwareStation = 0,
        
        /**
         * The UseCommerceEngine member.
         */
        UseCommerceEngine = 1
    }
    
    /**
     * FontSchemeType enum type.
     */
    export enum FontSchemeType {
      
        /**
         * The Standard member.
         */
        Standard = 0,
        
        /**
         * The Large member.
         */
        Large = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * DeviceActivationStatus enum type.
     */
    export enum DeviceActivationStatus {
      
        /**
         * The Pending member.
         */
        Pending = 0,
        
        /**
         * The Activated member.
         */
        Activated = 1,
        
        /**
         * The Deactivated member.
         */
        Deactivated = 2,
        
        /**
         * The Disabled member.
         */
        Disabled = 3,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * DeviceType enum type.
     */
    export enum DeviceType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The OPOS member.
         */
        OPOS = 1,
        
        /**
         * The WindowsPrinter member.
         */
        WindowsPrinter = 2,
        
        /**
         * The Network member.
         */
        Network = 3
    }
    
    /**
     * DualDisplayType enum type.
     */
    export enum DualDisplayType {
      
        /**
         * The Logo member.
         */
        Logo = 0,
        
        /**
         * The ImageRotator member.
         */
        ImageRotator = 1,
        
        /**
         * The WebBrowser member.
         */
        WebBrowser = 2,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * FiscalRegisterType enum type.
     */
    export enum FiscalRegisterType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Manufacturer member.
         */
        Manufacturer = 1
    }
    
    /**
     * PrinterLogotype enum type.
     */
    export enum PrinterLogotype {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Download member.
         */
        Download = 1,
        
        /**
         * The EpsonFlash member.
         */
        EpsonFlash = 2
    }
    
    /**
     * PrinterLogoAlignmentType enum type.
     */
    export enum PrinterLogoAlignmentType {
      
        /**
         * The Left member.
         */
        Left = 0,
        
        /**
         * The Center member.
         */
        Center = 1,
        
        /**
         * The Right member.
         */
        Right = 2,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * FiscalIntegrationConnectorType enum type.
     */
    export enum FiscalIntegrationConnectorType {
      
        /**
         * The Local member.
         */
        Local = 0,
        
        /**
         * The External member.
         */
        External = 1,
        
        /**
         * The Internal member.
         */
        Internal = 2
    }
    
    /**
     * ReceiptType enum type.
     */
    export enum ReceiptType {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The SalesReceipt member.
         */
        SalesReceipt = 1,
        
        /**
         * The CardReceiptForShop member.
         */
        CardReceiptForShop = 2,
        
        /**
         * The CardReceiptForCustomer member.
         */
        CardReceiptForCustomer = 3,
        
        /**
         * The CardReceiptForShopReturn member.
         */
        CardReceiptForShopReturn = 4,
        
        /**
         * The CardReceiptForCustomerReturn member.
         */
        CardReceiptForCustomerReturn = 5,
        
        /**
         * The CustomerAccountReceiptForShop member.
         */
        CustomerAccountReceiptForShop = 7,
        
        /**
         * The CustomerAccountReceiptForCustomer member.
         */
        CustomerAccountReceiptForCustomer = 8,
        
        /**
         * The CustomerAccountReceiptForShopReturn member.
         */
        CustomerAccountReceiptForShopReturn = 9,
        
        /**
         * The CustomerAccountReceiptForCustomerReturn member.
         */
        CustomerAccountReceiptForCustomerReturn = 10,
        
        /**
         * The CustomerAccountDeposit member.
         */
        CustomerAccountDeposit = 14,
        
        /**
         * The CreditMemo member.
         */
        CreditMemo = 15,
        
        /**
         * The SalesOrderReceipt member.
         */
        SalesOrderReceipt = 18,
        
        /**
         * The GiftCertificate member.
         */
        GiftCertificate = 20,
        
        /**
         * The QuotationReceipt member.
         */
        QuotationReceipt = 21,
        
        /**
         * The PackingSlip member.
         */
        PackingSlip = 22,
        
        /**
         * The PickupReceipt member.
         */
        PickupReceipt = 23,
        
        /**
         * The XReport member.
         */
        XReport = 24,
        
        /**
         * The ZReport member.
         */
        ZReport = 25,
        
        /**
         * The SafeDrop member.
         */
        SafeDrop = 26,
        
        /**
         * The BankDrop member.
         */
        BankDrop = 27,
        
        /**
         * The TenderDeclaration member.
         */
        TenderDeclaration = 28,
        
        /**
         * The RemoveTender member.
         */
        RemoveTender = 29,
        
        /**
         * The FloatEntry member.
         */
        FloatEntry = 30,
        
        /**
         * The StartingAmount member.
         */
        StartingAmount = 31,
        
        /**
         * The OrderSummaryReceipt member.
         */
        OrderSummaryReceipt = 32,
        
        /**
         * The GiftReceipt member.
         */
        GiftReceipt = 33,
        
        /**
         * The ReturnLabel member.
         */
        ReturnLabel = 34,
        
        /**
         * The EFDocDANFESimplified member.
         */
        EFDocDANFESimplified = 35,
        
        /**
         * The EFDocDANFEDetailed member.
         */
        EFDocDANFEDetailed = 36,
        
        /**
         * The PickingList member.
         */
        PickingList = 37,
        
        /**
         * The OpenDrawer member.
         */
        OpenDrawer = 38,
        
        /**
         * The SuspendedTransaction member.
         */
        SuspendedTransaction = 39,
        
        /**
         * The GiftCardInquiry member.
         */
        GiftCardInquiry = 40,
        
        /**
         * The CardTerminationReceiptForShop member.
         */
        CardTerminationReceiptForShop = 41,
        
        /**
         * The CardTerminationReceiptForCustomer member.
         */
        CardTerminationReceiptForCustomer = 42,
        
        /**
         * The CustomReceipt1 member.
         */
        CustomReceipt1 = 101,
        
        /**
         * The CustomReceipt2 member.
         */
        CustomReceipt2 = 102,
        
        /**
         * The CustomReceipt3 member.
         */
        CustomReceipt3 = 103,
        
        /**
         * The CustomReceipt4 member.
         */
        CustomReceipt4 = 104,
        
        /**
         * The CustomReceipt5 member.
         */
        CustomReceipt5 = 105,
        
        /**
         * The CustomReceipt6 member.
         */
        CustomReceipt6 = 106,
        
        /**
         * The CustomReceipt7 member.
         */
        CustomReceipt7 = 107,
        
        /**
         * The CustomReceipt8 member.
         */
        CustomReceipt8 = 108,
        
        /**
         * The CustomReceipt9 member.
         */
        CustomReceipt9 = 109,
        
        /**
         * The CustomReceipt10 member.
         */
        CustomReceipt10 = 110,
        
        /**
         * The CustomReceipt11 member.
         */
        CustomReceipt11 = 111,
        
        /**
         * The CustomReceipt12 member.
         */
        CustomReceipt12 = 112,
        
        /**
         * The CustomReceipt13 member.
         */
        CustomReceipt13 = 113,
        
        /**
         * The CustomReceipt14 member.
         */
        CustomReceipt14 = 114,
        
        /**
         * The CustomReceipt15 member.
         */
        CustomReceipt15 = 115,
        
        /**
         * The CustomReceipt16 member.
         */
        CustomReceipt16 = 116,
        
        /**
         * The CustomReceipt17 member.
         */
        CustomReceipt17 = 117,
        
        /**
         * The CustomReceipt18 member.
         */
        CustomReceipt18 = 118,
        
        /**
         * The CustomReceipt19 member.
         */
        CustomReceipt19 = 119,
        
        /**
         * The CustomReceipt20 member.
         */
        CustomReceipt20 = 120
    }
    
    /**
     * PrintBehavior enum type.
     */
    export enum PrintBehavior {
      
        /**
         * The Always member.
         */
        Always = 0,
        
        /**
         * The Never member.
         */
        Never = 1,
        
        /**
         * The Prompt member.
         */
        Prompt = 2,
        
        /**
         * The AsRequired member.
         */
        AsRequired = 3
    }
    
    /**
     * DistanceUnit enum type.
     */
    export enum DistanceUnit {
      
        /**
         * The Miles member.
         */
        Miles = 0,
        
        /**
         * The Kilometers member.
         */
        Kilometers = 1
    }
    
    /**
     * StockCountStatus enum type.
     */
    export enum StockCountStatus {
      
        /**
         * The Unchanged member.
         */
        Unchanged = 0,
        
        /**
         * The PendingUpdate member.
         */
        PendingUpdate = 1
    }
    
    /**
     * RecommendedElementType enum type.
     */
    export enum RecommendedElementType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Product member.
         */
        Product = 1,
        
        /**
         * The Content member.
         */
        Content = 2
    }
    
    /**
     * CommerceListInvitationStatus enum type.
     */
    export enum CommerceListInvitationStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Pending member.
         */
        Pending = 1,
        
        /**
         * The Accepted member.
         */
        Accepted = 2
    }
    
    /**
     * CommerceListInvitationType enum type.
     */
    export enum CommerceListInvitationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Public member.
         */
        Public = 1,
        
        /**
         * The Email member.
         */
        Email = 2
    }
    
    /**
     * SearchLocation enum type.
     */
    export enum SearchLocation {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Local member.
         */
        Local = 1,
        
        /**
         * The Remote member.
         */
        Remote = 2,
        
        /**
         * The All member.
         */
        All = 3
    }
    
    /**
     * OrderSearchType enum type.
     */
    export enum OrderSearchType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The SalesOrder member.
         */
        SalesOrder = 1,
        
        /**
         * The SalesTransaction member.
         */
        SalesTransaction = 2,
        
        /**
         * The ConsolidateOrder member.
         */
        ConsolidateOrder = 3
    }
    
    /**
     * SalesTransactionType enum type.
     */
    export enum SalesTransactionType {
      
        /**
         * The Sales member.
         */
        Sales = 2,
        
        /**
         * The CustomerAccountDeposit member.
         */
        CustomerAccountDeposit = 3,
        
        /**
         * The SalesInvoice member.
         */
        SalesInvoice = 15,
        
        /**
         * The IncomeExpense member.
         */
        IncomeExpense = 18,
        
        /**
         * The CustomerOrder member.
         */
        CustomerOrder = 19,
        
        /**
         * The PendingSalesOrder member.
         */
        PendingSalesOrder = 27,
        
        /**
         * The AsyncCustomerQuote member.
         */
        AsyncCustomerQuote = 31,
        
        /**
         * The AsyncCustomerOrder member.
         */
        AsyncCustomerOrder = 33,
        
        /**
         * The SuspendedTransaction member.
         */
        SuspendedTransaction = 36,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * RetailAffiliationType enum type.
     */
    export enum RetailAffiliationType {
      
        /**
         * The General member.
         */
        General = 0,
        
        /**
         * The Loyalty member.
         */
        Loyalty = 1,
        
        /**
         * The Unknown member.
         */
        Unknown = -1
    }
    
    /**
     * InventorySerialNumberLineStatus enum type.
     */
    export enum InventorySerialNumberLineStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NotRegistered member.
         */
        NotRegistered = 1,
        
        /**
         * The Registering member.
         */
        Registering = 2,
        
        /**
         * The Registered member.
         */
        Registered = 3
    }
    
    /**
     * InventorySourceDocumentLineStatus enum type.
     */
    export enum InventorySourceDocumentLineStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Deleted member.
         */
        Deleted = 1
    }
    
    /**
     * RefinerType enum type.
     */
    export enum RefinerType {
      
        /**
         * The SingleSelect member.
         */
        SingleSelect = 0,
        
        /**
         * The MultiSelect member.
         */
        MultiSelect = 1,
        
        /**
         * The FreeText member.
         */
        FreeText = 2
    }
    
    /**
     * DisplayTemplate enum type.
     */
    export enum DisplayTemplate {
      
        /**
         * The List member.
         */
        List = 0,
        
        /**
         * The Slider member.
         */
        Slider = 1,
        
        /**
         * The SliderWithBars member.
         */
        SliderWithBars = 2,
        
        /**
         * The Range member.
         */
        Range = 3,
        
        /**
         * The TextBox member.
         */
        TextBox = 4
    }
    
    /**
     * ClientBookRefinerSource enum type.
     */
    export enum ClientBookRefinerSource {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Attribute member.
         */
        Attribute = 1,
        
        /**
         * The CustomerSearchKeyword member.
         */
        CustomerSearchKeyword = 2,
        
        /**
         * The StaffId member.
         */
        StaffId = 3
    }
    
    /**
     * ProductRefinerSource enum type.
     */
    export enum ProductRefinerSource {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Attribute member.
         */
        Attribute = 1,
        
        /**
         * The Category member.
         */
        Category = 2,
        
        /**
         * The Price member.
         */
        Price = 3,
        
        /**
         * The Rating member.
         */
        Rating = 4
    }
    
    /**
     * LoyaltyCardTenderType enum type.
     */
    export enum LoyaltyCardTenderType {
      
        /**
         * The AsCardTender member.
         */
        AsCardTender = 0,
        
        /**
         * The AsContactTender member.
         */
        AsContactTender = 1,
        
        /**
         * The NoTender member.
         */
        NoTender = 2,
        
        /**
         * The Blocked member.
         */
        Blocked = 3
    }
    
    /**
     * ReleasedProductType enum type.
     */
    export enum ReleasedProductType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Item member.
         */
        Item = 1,
        
        /**
         * The Service member.
         */
        Service = 2
    }
    
    /**
     * RetailChannelType enum type.
     */
    export enum RetailChannelType {
      
        /**
         * The RetailStore member.
         */
        RetailStore = 0,
        
        /**
         * The OnlineStore member.
         */
        OnlineStore = 1,
        
        /**
         * The OnlineMarketplace member.
         */
        OnlineMarketplace = 2,
        
        /**
         * The SharePointOnlineStore member.
         */
        SharePointOnlineStore = 3,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * LogOnConfiguration enum type.
     */
    export enum LogOnConfiguration {
      
        /**
         * The LocalDatabase member.
         */
        LocalDatabase = 0,
        
        /**
         * The RealTimeService member.
         */
        RealTimeService = 1
    }
    
    /**
     * TransactionServiceAuthenticationType enum type.
     */
    export enum TransactionServiceAuthenticationType {
      
        /**
         * The CertificateAuthentication member.
         */
        CertificateAuthentication = 0,
        
        /**
         * The ServiceToServiceAuthentication member.
         */
        ServiceToServiceAuthentication = 1,
        
        /**
         * The AdfsServiceToServiceClientSecretAuthentication member.
         */
        AdfsServiceToServiceClientSecretAuthentication = 2
    }
    
    /**
     * InventAvailabilityCalculationMode enum type.
     */
    export enum InventAvailabilityCalculationMode {
      
        /**
         * The RealTimeService member.
         */
        RealTimeService = 0,
        
        /**
         * The Channel member.
         */
        Channel = 1
    }
    
    /**
     * InventoryAvailabilityClientDisplayMode enum type.
     */
    export enum InventoryAvailabilityClientDisplayMode {
      
        /**
         * The Raw member.
         */
        Raw = 0,
        
        /**
         * The Buffered member.
         */
        Buffered = 1,
        
        /**
         * The None member.
         */
        None = 2,
        
        /**
         * The Unknown member.
         */
        Unknown = -1
    }
    
    /**
     * EmployeeActivityType enum type.
     */
    export enum EmployeeActivityType {
      
        /**
         * The ClockIn member.
         */
        ClockIn = 0,
        
        /**
         * The JobStop member.
         */
        JobStop = 1,
        
        /**
         * The JobStart member.
         */
        JobStart = 2,
        
        /**
         * The TeamStop member.
         */
        TeamStop = 3,
        
        /**
         * The TeamStart member.
         */
        TeamStart = 4,
        
        /**
         * The BreakFlowStart member.
         */
        BreakFlowStart = 5,
        
        /**
         * The BreakCancelOne member.
         */
        BreakCancelOne = 6,
        
        /**
         * The BreakCancelAll member.
         */
        BreakCancelAll = 7,
        
        /**
         * The BreakFlowStop member.
         */
        BreakFlowStop = 8,
        
        /**
         * The FinishQuantity member.
         */
        FinishQuantity = 9,
        
        /**
         * The ClockOut member.
         */
        ClockOut = 10,
        
        /**
         * The EventCode member.
         */
        EventCode = 11,
        
        /**
         * The BreakFromWork member.
         */
        BreakFromWork = 12,
        
        /**
         * The BreakForLunch member.
         */
        BreakForLunch = 13,
        
        /**
         * The Logbook member.
         */
        Logbook = 14,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * DeliveryPreferenceType enum type.
     */
    export enum DeliveryPreferenceType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ShipToAddress member.
         */
        ShipToAddress = 1,
        
        /**
         * The PickupFromStore member.
         */
        PickupFromStore = 2,
        
        /**
         * The ElectronicDelivery member.
         */
        ElectronicDelivery = 3,
        
        /**
         * The DeliverItemsIndividually member.
         */
        DeliverItemsIndividually = 4
    }
    
    /**
     * LayoutType enum type.
     */
    export enum LayoutType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ModernPosCompact member.
         */
        ModernPosCompact = 1,
        
        /**
         * The ModernPosFull member.
         */
        ModernPosFull = 2,
        
        /**
         * The Epos member.
         */
        Epos = 3
    }
    
    /**
     * SalesInvoiceType enum type.
     */
    export enum SalesInvoiceType {
      
        /**
         * The Journal member.
         */
        Journal = 0,
        
        /**
         * The Quotation member.
         */
        Quotation = 1,
        
        /**
         * The Subscription member.
         */
        Subscription = 2,
        
        /**
         * The Sales member.
         */
        Sales = 3,
        
        /**
         * The ReturnItem member.
         */
        ReturnItem = 4,
        
        /**
         * The Blanket member.
         */
        Blanket = 5,
        
        /**
         * The ItemRequirements member.
         */
        ItemRequirements = 6
    }
    
    /**
     * InvoiceType enum type.
     */
    export enum InvoiceType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The SalesOrderInvoice member.
         */
        SalesOrderInvoice = 1,
        
        /**
         * The FreeTextInvoice member.
         */
        FreeTextInvoice = 2,
        
        /**
         * The ProjectInvoice member.
         */
        ProjectInvoice = 3,
        
        /**
         * The CreditNoteInvoice member.
         */
        CreditNoteInvoice = 4,
        
        /**
         * The FreeTextCreditNoteInvoice member.
         */
        FreeTextCreditNoteInvoice = 5,
        
        /**
         * The ProjectCreditNoteInvoice member.
         */
        ProjectCreditNoteInvoice = 6
    }
    
    /**
     * TaxOverrideType enum type.
     */
    export enum TaxOverrideType {
      
        /**
         * The ItemSalesTaxGroup member.
         */
        ItemSalesTaxGroup = 0,
        
        /**
         * The SalesTaxGroup member.
         */
        SalesTaxGroup = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * TaxOverrideBy enum type.
     */
    export enum TaxOverrideBy {
      
        /**
         * The Line member.
         */
        Line = 0,
        
        /**
         * The Cart member.
         */
        Cart = 1,
        
        /**
         * The None member.
         */
        None = -1
    }
    
    /**
     * RetailOperation enum type.
     */
    export enum RetailOperation {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The ItemSale member.
         */
        ItemSale = 100,
        
        /**
         * The PriceCheck member.
         */
        PriceCheck = 101,
        
        /**
         * The VoidItem member.
         */
        VoidItem = 102,
        
        /**
         * The ItemComment member.
         */
        ItemComment = 103,
        
        /**
         * The PriceOverride member.
         */
        PriceOverride = 104,
        
        /**
         * The SetQuantity member.
         */
        SetQuantity = 105,
        
        /**
         * The ClearQuantity member.
         */
        ClearQuantity = 106,
        
        /**
         * The ItemSearch member.
         */
        ItemSearch = 108,
        
        /**
         * The ReturnItem member.
         */
        ReturnItem = 109,
        
        /**
         * The WeighItem member.
         */
        WeighItem = 110,
        
        /**
         * The LinkedItemsAdd member.
         */
        LinkedItemsAdd = 112,
        
        /**
         * The SetDimensions member.
         */
        SetDimensions = 113,
        
        /**
         * The ReturnTransaction member.
         */
        ReturnTransaction = 114,
        
        /**
         * The ShowJournal member.
         */
        ShowJournal = 115,
        
        /**
         * The SetCostPrice member.
         */
        SetCostPrice = 116,
        
        /**
         * The LoyaltyRequest member.
         */
        LoyaltyRequest = 117,
        
        /**
         * The ProcessInput member.
         */
        ProcessInput = 118,
        
        /**
         * The SalespersonBarcode member.
         */
        SalespersonBarcode = 119,
        
        /**
         * The SalespersonCard member.
         */
        SalespersonCard = 120,
        
        /**
         * The SalespersonClear member.
         */
        SalespersonClear = 121,
        
        /**
         * The InvoiceComment member.
         */
        InvoiceComment = 122,
        
        /**
         * The ChangeUnitOfMeasure member.
         */
        ChangeUnitOfMeasure = 123,
        
        /**
         * The ItemSaleMultiple member.
         */
        ItemSaleMultiple = 124,
        
        /**
         * The RFIDSale member.
         */
        RFIDSale = 125,
        
        /**
         * The SalesHistory member.
         */
        SalesHistory = 126,
        
        /**
         * The OverrideTaxTransaction member.
         */
        OverrideTaxTransaction = 127,
        
        /**
         * The OverrideTaxTransactionList member.
         */
        OverrideTaxTransactionList = 128,
        
        /**
         * The OverrideTaxLine member.
         */
        OverrideTaxLine = 129,
        
        /**
         * The OverrideTaxLineList member.
         */
        OverrideTaxLineList = 130,
        
        /**
         * The PackSlip member.
         */
        PackSlip = 131,
        
        /**
         * The DepositOverride member.
         */
        DepositOverride = 132,
        
        /**
         * The BuyWarranty member.
         */
        BuyWarranty = 133,
        
        /**
         * The AddAffiliation member.
         */
        AddAffiliation = 134,
        
        /**
         * The AddAffiliationFromList member.
         */
        AddAffiliationFromList = 135,
        
        /**
         * The AddSerialNumber member.
         */
        AddSerialNumber = 136,
        
        /**
         * The AddAffiliationToCustomer member.
         */
        AddAffiliationToCustomer = 137,
        
        /**
         * The RemoveAffiliationFromCustomer member.
         */
        RemoveAffiliationFromCustomer = 138,
        
        /**
         * The ConcludeTransaction member.
         */
        ConcludeTransaction = 139,
        
        /**
         * The AddLineCharge member.
         */
        AddLineCharge = 140,
        
        /**
         * The AddHeaderCharge member.
         */
        AddHeaderCharge = 141,
        
        /**
         * The ManageCharges member.
         */
        ManageCharges = 142,
        
        /**
         * The RecalculateCharges member.
         */
        RecalculateCharges = 143,
        
        /**
         * The AddWarrantyToAnExistingTransaction member.
         */
        AddWarrantyToAnExistingTransaction = 144,
        
        /**
         * The PayCash member.
         */
        PayCash = 200,
        
        /**
         * The PayCard member.
         */
        PayCard = 201,
        
        /**
         * The PayCustomerAccount member.
         */
        PayCustomerAccount = 202,
        
        /**
         * The PayCurrency member.
         */
        PayCurrency = 203,
        
        /**
         * The PayCheck member.
         */
        PayCheck = 204,
        
        /**
         * The PayCashQuick member.
         */
        PayCashQuick = 206,
        
        /**
         * The PayLoyalty member.
         */
        PayLoyalty = 207,
        
        /**
         * The PayCorporateCard member.
         */
        PayCorporateCard = 208,
        
        /**
         * The ChangeBack member.
         */
        ChangeBack = 210,
        
        /**
         * The VoidPayment member.
         */
        VoidPayment = 211,
        
        /**
         * The FleetCardInfo member.
         */
        FleetCardInfo = 212,
        
        /**
         * The PayCreditMemo member.
         */
        PayCreditMemo = 213,
        
        /**
         * The PayGiftCertificate member.
         */
        PayGiftCertificate = 214,
        
        /**
         * The CashOutGiftCard member.
         */
        CashOutGiftCard = 215,
        
        /**
         * The LineDiscountAmount member.
         */
        LineDiscountAmount = 300,
        
        /**
         * The LineDiscountPercent member.
         */
        LineDiscountPercent = 301,
        
        /**
         * The TotalDiscountAmount member.
         */
        TotalDiscountAmount = 302,
        
        /**
         * The TotalDiscountPercent member.
         */
        TotalDiscountPercent = 303,
        
        /**
         * The DiscountCodeBarcode member.
         */
        DiscountCodeBarcode = 304,
        
        /**
         * The CalculateFullDiscounts member.
         */
        CalculateFullDiscounts = 310,
        
        /**
         * The PopupMenu member.
         */
        PopupMenu = 400,
        
        /**
         * The Submenu member.
         */
        Submenu = 401,
        
        /**
         * The VoidTransaction member.
         */
        VoidTransaction = 500,
        
        /**
         * The TransactionComment member.
         */
        TransactionComment = 501,
        
        /**
         * The SalesPerson member.
         */
        SalesPerson = 502,
        
        /**
         * The SuspendTransaction member.
         */
        SuspendTransaction = 503,
        
        /**
         * The RecallTransaction member.
         */
        RecallTransaction = 504,
        
        /**
         * The RecallUnconcludedTransaction member.
         */
        RecallUnconcludedTransaction = 505,
        
        /**
         * The CardSwipe member.
         */
        CardSwipe = 506,
        
        /**
         * The PharmacyPrescriptionAdd member.
         */
        PharmacyPrescriptionAdd = 507,
        
        /**
         * The PharmacyPrescriptionCancel member.
         */
        PharmacyPrescriptionCancel = 508,
        
        /**
         * The PharmacyPrescriptionPaid member.
         */
        PharmacyPrescriptionPaid = 509,
        
        /**
         * The PharmacyPrescriptions member.
         */
        PharmacyPrescriptions = 510,
        
        /**
         * The IssueCreditMemo member.
         */
        IssueCreditMemo = 511,
        
        /**
         * The IssueGiftCertificate member.
         */
        IssueGiftCertificate = 512,
        
        /**
         * The DisplayTotal member.
         */
        DisplayTotal = 513,
        
        /**
         * The RecallSalesOrder member.
         */
        RecallSalesOrder = 515,
        
        /**
         * The SalesInvoice member.
         */
        SalesInvoice = 516,
        
        /**
         * The IncomeAccounts member.
         */
        IncomeAccounts = 517,
        
        /**
         * The ExpenseAccounts member.
         */
        ExpenseAccounts = 518,
        
        /**
         * The AddToGiftCard member.
         */
        AddToGiftCard = 519,
        
        /**
         * The GiftCardBalance member.
         */
        GiftCardBalance = 520,
        
        /**
         * The LoyaltyCardPointsBalance member.
         */
        LoyaltyCardPointsBalance = 521,
        
        /**
         * The CashChangerRegisterAmount member.
         */
        CashChangerRegisterAmount = 550,
        
        /**
         * The CashChangerReset member.
         */
        CashChangerReset = 551,
        
        /**
         * The CashChangerRegret member.
         */
        CashChangerRegret = 552,
        
        /**
         * The CashChangerExit member.
         */
        CashChangerExit = 553,
        
        /**
         * The CashChangerChange member.
         */
        CashChangerChange = 554,
        
        /**
         * The CashChangerLogOn member.
         */
        CashChangerLogOn = 555,
        
        /**
         * The CashChangerInit member.
         */
        CashChangerInit = 556,
        
        /**
         * The SetCustomer member.
         */
        SetCustomer = 600,
        
        /**
         * The CustomerSearch member.
         */
        CustomerSearch = 602,
        
        /**
         * The CustomerClear member.
         */
        CustomerClear = 603,
        
        /**
         * The CustomerCard member.
         */
        CustomerCard = 604,
        
        /**
         * The CustomerTransactions member.
         */
        CustomerTransactions = 609,
        
        /**
         * The CustomerTransactionsReport member.
         */
        CustomerTransactionsReport = 610,
        
        /**
         * The CustomerBalanceReport member.
         */
        CustomerBalanceReport = 611,
        
        /**
         * The CustomerAdd member.
         */
        CustomerAdd = 612,
        
        /**
         * The CustomerBarcode member.
         */
        CustomerBarcode = 613,
        
        /**
         * The EditCustomerOrder member.
         */
        EditCustomerOrder = 614,
        
        /**
         * The EditQuotation member.
         */
        EditQuotation = 615,
        
        /**
         * The CreateCustomerOrder member.
         */
        CreateCustomerOrder = 620,
        
        /**
         * The CreateQuotation member.
         */
        CreateQuotation = 621,
        
        /**
         * The Search member.
         */
        Search = 622,
        
        /**
         * The CustomerEdit member.
         */
        CustomerEdit = 623,
        
        /**
         * The LoyaltyIssueCard member.
         */
        LoyaltyIssueCard = 625,
        
        /**
         * The RecalculateCustomerOrder member.
         */
        RecalculateCustomerOrder = 627,
        
        /**
         * The ShipSelectedProducts member.
         */
        ShipSelectedProducts = 629,
        
        /**
         * The ShipAllProducts member.
         */
        ShipAllProducts = 630,
        
        /**
         * The PickupSelectedProducts member.
         */
        PickupSelectedProducts = 631,
        
        /**
         * The PickupAllProducts member.
         */
        PickupAllProducts = 632,
        
        /**
         * The SetQuotationExpirationDate member.
         */
        SetQuotationExpirationDate = 633,
        
        /**
         * The PaymentsHistory member.
         */
        PaymentsHistory = 634,
        
        /**
         * The ReturnChargesOverride member.
         */
        ReturnChargesOverride = 635,
        
        /**
         * The CreateRetailTransaction member.
         */
        CreateRetailTransaction = 636,
        
        /**
         * The SetCommissionSalesGroupOnTransaction member.
         */
        SetCommissionSalesGroupOnTransaction = 637,
        
        /**
         * The SetCommissionSalesGroupOnLine member.
         */
        SetCommissionSalesGroupOnLine = 638,
        
        /**
         * The ClearCommissionSalesGroupOnTransaction member.
         */
        ClearCommissionSalesGroupOnTransaction = 639,
        
        /**
         * The ClearCommissionSalesGroupOnLine member.
         */
        ClearCommissionSalesGroupOnLine = 640,
        
        /**
         * The CarryoutSelectedProducts member.
         */
        CarryoutSelectedProducts = 641,
        
        /**
         * The CarryoutAllProducts member.
         */
        CarryoutAllProducts = 642,
        
        /**
         * The AddCoupons member.
         */
        AddCoupons = 643,
        
        /**
         * The RemoveCoupons member.
         */
        RemoveCoupons = 644,
        
        /**
         * The ViewAllDiscounts member.
         */
        ViewAllDiscounts = 645,
        
        /**
         * The ViewAvailableDiscounts member.
         */
        ViewAvailableDiscounts = 646,
        
        /**
         * The ChangeDeliveryMode member.
         */
        ChangeDeliveryMode = 647,
        
        /**
         * The CancelOrder member.
         */
        CancelOrder = 648,
        
        /**
         * The CreatePickingList member.
         */
        CreatePickingList = 649,
        
        /**
         * The PrintPackingSlip member.
         */
        PrintPackingSlip = 650,
        
        /**
         * The EditFulfillmentLine member.
         */
        EditFulfillmentLine = 651,
        
        /**
         * The AcceptFulfillmentLine member.
         */
        AcceptFulfillmentLine = 652,
        
        /**
         * The RejectFulfillmentLine member.
         */
        RejectFulfillmentLine = 653,
        
        /**
         * The PickFulfillmentLine member.
         */
        PickFulfillmentLine = 654,
        
        /**
         * The PackFulfillmentLine member.
         */
        PackFulfillmentLine = 655,
        
        /**
         * The ShipFulfillmentLine member.
         */
        ShipFulfillmentLine = 656,
        
        /**
         * The PickupFulfillmentLine member.
         */
        PickupFulfillmentLine = 657,
        
        /**
         * The LogOn member.
         */
        LogOn = 700,
        
        /**
         * The LogOff member.
         */
        LogOff = 701,
        
        /**
         * The ChangeUser member.
         */
        ChangeUser = 702,
        
        /**
         * The LockTerminal member.
         */
        LockTerminal = 703,
        
        /**
         * The LogOffForce member.
         */
        LogOffForce = 704,
        
        /**
         * The EmployeeCard member.
         */
        EmployeeCard = 705,
        
        /**
         * The EmployeeBarcode member.
         */
        EmployeeBarcode = 706,
        
        /**
         * The ActivateDevice member.
         */
        ActivateDevice = 707,
        
        /**
         * The DeactivateDevice member.
         */
        DeactivateDevice = 708,
        
        /**
         * The ChangeHardwareStation member.
         */
        ChangeHardwareStation = 709,
        
        /**
         * The PairHardwareStation member.
         */
        PairHardwareStation = 710,
        
        /**
         * The MassActivateDevice member.
         */
        MassActivateDevice = 711,
        
        /**
         * The ViewMyClientBook member.
         */
        ViewMyClientBook = 712,
        
        /**
         * The ViewStoreClientBooks member.
         */
        ViewStoreClientBooks = 713,
        
        /**
         * The AddCustomerToClientBook member.
         */
        AddCustomerToClientBook = 714,
        
        /**
         * The RemoveCustomersFromClientBook member.
         */
        RemoveCustomersFromClientBook = 715,
        
        /**
         * The ReassignClientBookCustomers member.
         */
        ReassignClientBookCustomers = 716,
        
        /**
         * The HealthCheck member.
         */
        HealthCheck = 717,
        
        /**
         * The NegativeAdjustment member.
         */
        NegativeAdjustment = 800,
        
        /**
         * The InventoryLookup member.
         */
        InventoryLookup = 801,
        
        /**
         * The StockCount member.
         */
        StockCount = 802,
        
        /**
         * The PickingAndReceiving member.
         */
        PickingAndReceiving = 803,
        
        /**
         * The InboundInventory member.
         */
        InboundInventory = 804,
        
        /**
         * The OutboundInventory member.
         */
        OutboundInventory = 805,
        
        /**
         * The ApplicationExit member.
         */
        ApplicationExit = 900,
        
        /**
         * The PrintTaxFree member.
         */
        PrintTaxFree = 906,
        
        /**
         * The PrintPreviousSlip member.
         */
        PrintPreviousSlip = 907,
        
        /**
         * The PrintPreviousInvoice member.
         */
        PrintPreviousInvoice = 908,
        
        /**
         * The UploadPrinterLogo member.
         */
        UploadPrinterLogo = 909,
        
        /**
         * The RestartComputer member.
         */
        RestartComputer = 910,
        
        /**
         * The ShutdownComputer member.
         */
        ShutdownComputer = 911,
        
        /**
         * The DesignModeEnable member.
         */
        DesignModeEnable = 912,
        
        /**
         * The DesignModeDisable member.
         */
        DesignModeDisable = 913,
        
        /**
         * The MinimizePOSWindow member.
         */
        MinimizePOSWindow = 914,
        
        /**
         * The BlankOperation member.
         */
        BlankOperation = 915,
        
        /**
         * The WindowsWorkflowOperation member.
         */
        WindowsWorkflowOperation = 916,
        
        /**
         * The DatabaseConnectionStatus member.
         */
        DatabaseConnectionStatus = 917,
        
        /**
         * The ShowBlindClosedShifts member.
         */
        ShowBlindClosedShifts = 918,
        
        /**
         * The ExtendedLogOn member.
         */
        ExtendedLogOn = 919,
        
        /**
         * The TimeRegistration member.
         */
        TimeRegistration = 920,
        
        /**
         * The ViewTimeClockEntries member.
         */
        ViewTimeClockEntries = 921,
        
        /**
         * The ViewProductDetails member.
         */
        ViewProductDetails = 922,
        
        /**
         * The ViewOrderFulfillmentLines member.
         */
        ViewOrderFulfillmentLines = 928,
        
        /**
         * The OpenDrawer member.
         */
        OpenDrawer = 1000,
        
        /**
         * The ViewReport member.
         */
        ViewReport = 1003,
        
        /**
         * The TenderDeclaration member.
         */
        TenderDeclaration = 1052,
        
        /**
         * The BlindCloseShift member.
         */
        BlindCloseShift = 1053,
        
        /**
         * The SuspendShift member.
         */
        SuspendShift = 1054,
        
        /**
         * The CloseShift member.
         */
        CloseShift = 1055,
        
        /**
         * The PrintX member.
         */
        PrintX = 1056,
        
        /**
         * The PrintZ member.
         */
        PrintZ = 1057,
        
        /**
         * The PrintFiscalX member.
         */
        PrintFiscalX = 1058,
        
        /**
         * The PrintFiscalZ member.
         */
        PrintFiscalZ = 1059,
        
        /**
         * The CustomerAccountDeposit member.
         */
        CustomerAccountDeposit = 1100,
        
        /**
         * The DeclareStartAmount member.
         */
        DeclareStartAmount = 1200,
        
        /**
         * The FloatEntry member.
         */
        FloatEntry = 1201,
        
        /**
         * The TenderRemoval member.
         */
        TenderRemoval = 1210,
        
        /**
         * The SafeDrop member.
         */
        SafeDrop = 1211,
        
        /**
         * The BankDrop member.
         */
        BankDrop = 1212,
        
        /**
         * The ShippingAddressSearch member.
         */
        ShippingAddressSearch = 1213,
        
        /**
         * The ShippingAddressAdd member.
         */
        ShippingAddressAdd = 1214,
        
        /**
         * The ChangePassword member.
         */
        ChangePassword = 1215,
        
        /**
         * The ResetPassword member.
         */
        ResetPassword = 1216,
        
        /**
         * The KitDisassembly member.
         */
        KitDisassembly = 1217,
        
        /**
         * The ForceUnlockPeripheral member.
         */
        ForceUnlockPeripheral = 1218,
        
        /**
         * The OpenURL member.
         */
        OpenURL = 1219,
        
        /**
         * The ManageSafe member.
         */
        ManageSafe = 1220,
        
        /**
         * The VoidSuspendedTransactions member.
         */
        VoidSuspendedTransactions = 1221,
        
        /**
         * The SkipFiscalRegistration member.
         */
        SkipFiscalRegistration = 1300,
        
        /**
         * The MarkFiscalEventRegistered member.
         */
        MarkFiscalEventRegistered = 1301,
        
        /**
         * The CompleteFiscalRegistrationProcess member.
         */
        CompleteFiscalRegistrationProcess = 1302,
        
        /**
         * The SkipHealthCheckError member.
         */
        SkipHealthCheckError = 1303,
        
        /**
         * The ManageChecklistsAndTasks member.
         */
        ManageChecklistsAndTasks = 1400,
        
        /**
         * The Invalid member.
         */
        Invalid = 65535
    }
    
    /**
     * ReasonCodeInputRequiredType enum type.
     */
    export enum ReasonCodeInputRequiredType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Always member.
         */
        Always = 1,
        
        /**
         * The Positive member.
         */
        Positive = 2,
        
        /**
         * The Negative member.
         */
        Negative = 3
    }
    
    /**
     * RecordingValueType enum type.
     */
    export enum RecordingValueType {
      
        /**
         * The Preferred member.
         */
        Preferred = 0,
        
        /**
         * The Example member.
         */
        Example = 1
    }
    
    /**
     * UserActionType enum type.
     */
    export enum UserActionType {
      
        /**
         * The Input member.
         */
        Input = 1,
        
        /**
         * The Output member.
         */
        Output = 16,
        
        /**
         * The Validation member.
         */
        Validation = 256
    }
    
    /**
     * ArtifactType enum type.
     */
    export enum ArtifactType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Ax7Bpm member.
         */
        Ax7Bpm = 1,
        
        /**
         * The Visio member.
         */
        Visio = 2,
        
        /**
         * The TaskGuide member.
         */
        TaskGuide = 3,
        
        /**
         * The Ax6Bpm member.
         */
        Ax6Bpm = 4,
        
        /**
         * The TaskGuideResources member.
         */
        TaskGuideResources = 5,
        
        /**
         * The TaskXml member.
         */
        TaskXml = 6,
        
        /**
         * The VideoWma member.
         */
        VideoWma = 7,
        
        /**
         * The ProcessXml member.
         */
        ProcessXml = 8,
        
        /**
         * The Trace member.
         */
        Trace = 9,
        
        /**
         * The RapidStartXml member.
         */
        RapidStartXml = 10,
        
        /**
         * The UserDrawing member.
         */
        UserDrawing = 100
    }
    
    /**
     * FrameworkAccess enum type.
     */
    export enum FrameworkAccess {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Global member.
         */
        Global = 1,
        
        /**
         * The Corporate member.
         */
        Corporate = 2,
        
        /**
         * The Private member.
         */
        Private = 3,
        
        /**
         * The BoxPackage member.
         */
        BoxPackage = 4
    }
    
    /**
     * MetadataControl enum type.
     */
    export enum MetadataControl {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The SingleValue member.
         */
        SingleValue = 1,
        
        /**
         * The MultiValue member.
         */
        MultiValue = 2,
        
        /**
         * The Tags member.
         */
        Tags = 3,
        
        /**
         * The Links member.
         */
        Links = 4,
        
        /**
         * The ComboBox member.
         */
        ComboBox = 5,
        
        /**
         * The MultiSelect member.
         */
        MultiSelect = 6
    }
    
    /**
     * FiscalIntegrationRegistrationStatus enum type.
     */
    export enum FiscalIntegrationRegistrationStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Completed member.
         */
        Completed = 1,
        
        /**
         * The Skipped member.
         */
        Skipped = 2,
        
        /**
         * The MarkedAsRegistered member.
         */
        MarkedAsRegistered = 3,
        
        /**
         * The AutoSkipped member.
         */
        AutoSkipped = 4
    }
    
    /**
     * CustomerOrderOperation enum type.
     */
    export enum CustomerOrderOperation {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Edit member.
         */
        Edit = 1,
        
        /**
         * The Cancel member.
         */
        Cancel = 2,
        
        /**
         * The PickUpFromStore member.
         */
        PickUpFromStore = 3,
        
        /**
         * The CreatePickingList member.
         */
        CreatePickingList = 4,
        
        /**
         * The CreatePackingSlip member.
         */
        CreatePackingSlip = 5,
        
        /**
         * The PrintPackingSlip member.
         */
        PrintPackingSlip = 6,
        
        /**
         * The Return member.
         */
        Return = 7,
        
        /**
         * The RejectFulfillmentLine member.
         */
        RejectFulfillmentLine = 8,
        
        /**
         * The AcceptFulfillmentLine member.
         */
        AcceptFulfillmentLine = 9,
        
        /**
         * The PackFulfillmentLine member.
         */
        PackFulfillmentLine = 10,
        
        /**
         * The ShipFulfillmentLine member.
         */
        ShipFulfillmentLine = 11,
        
        /**
         * The PickFulfillmentLine member.
         */
        PickFulfillmentLine = 12
    }
    
    /**
     * CartType enum type.
     */
    export enum CartType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Shopping member.
         */
        Shopping = 1,
        
        /**
         * The Checkout member.
         */
        Checkout = 2,
        
        /**
         * The CustomerOrder member.
         */
        CustomerOrder = 3,
        
        /**
         * The IncomeExpense member.
         */
        IncomeExpense = 4,
        
        /**
         * The AccountDeposit member.
         */
        AccountDeposit = 5
    }
    
    /**
     * CustomerOrderMode enum type.
     */
    export enum CustomerOrderMode {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The CustomerOrderCreateOrEdit member.
         */
        CustomerOrderCreateOrEdit = 1,
        
        /**
         * The OrderRecalled member.
         */
        OrderRecalled = 2,
        
        /**
         * The Pickup member.
         */
        Pickup = 3,
        
        /**
         * The Return member.
         */
        Return = 4,
        
        /**
         * The Cancellation member.
         */
        Cancellation = 5,
        
        /**
         * The QuoteCreateOrEdit member.
         */
        QuoteCreateOrEdit = 6
    }
    
    /**
     * CartStatus enum type.
     */
    export enum CartStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Created member.
         */
        Created = 1,
        
        /**
         * The Suspended member.
         */
        Suspended = 2,
        
        /**
         * The Voided member.
         */
        Voided = 3
    }
    
    /**
     * CustomerType enum type.
     */
    export enum CustomerType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Person member.
         */
        Person = 1,
        
        /**
         * The Organization member.
         */
        Organization = 2
    }
    
    /**
     * ContactInfoType enum type.
     */
    export enum ContactInfoType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Phone member.
         */
        Phone = 1,
        
        /**
         * The Email member.
         */
        Email = 2,
        
        /**
         * The Url member.
         */
        Url = 3,
        
        /**
         * The Telex member.
         */
        Telex = 4,
        
        /**
         * The Fax member.
         */
        Fax = 5
    }
    
    /**
     * ChecklistStatus enum type.
     */
    export enum ChecklistStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NotStarted member.
         */
        NotStarted = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Completed member.
         */
        Completed = 3
    }
    
    /**
     * ChecklistTaskDeepLinkType enum type.
     */
    export enum ChecklistTaskDeepLinkType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Display member.
         */
        Display = 1,
        
        /**
         * The Output member.
         */
        Output = 2,
        
        /**
         * The Action member.
         */
        Action = 3,
        
        /**
         * The Url member.
         */
        Url = 4,
        
        /**
         * The PosOperation member.
         */
        PosOperation = 5,
        
        /**
         * The CustomerAccount member.
         */
        CustomerAccount = 6
    }
    
    /**
     * ChecklistTaskStatus enum type.
     */
    export enum ChecklistTaskStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The NotStarted member.
         */
        NotStarted = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Completed member.
         */
        Completed = 3
    }
    
    /**
     * DocumentStatus enum type.
     */
    export enum DocumentStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Quotation member.
         */
        Quotation = 1,
        
        /**
         * The PurchaseOrder member.
         */
        PurchaseOrder = 2,
        
        /**
         * The Confirmation member.
         */
        Confirmation = 3,
        
        /**
         * The PickingList member.
         */
        PickingList = 4,
        
        /**
         * The PackingSlip member.
         */
        PackingSlip = 5,
        
        /**
         * The ReceiptsList member.
         */
        ReceiptsList = 6,
        
        /**
         * The Invoice member.
         */
        Invoice = 7,
        
        /**
         * The ApproveJournal member.
         */
        ApproveJournal = 8,
        
        /**
         * The ProjectInvoice member.
         */
        ProjectInvoice = 9,
        
        /**
         * The ProjectPackingSlip member.
         */
        ProjectPackingSlip = 10,
        
        /**
         * The CRMQuotation member.
         */
        CRMQuotation = 11,
        
        /**
         * The Lost member.
         */
        Lost = 12,
        
        /**
         * The Canceled member.
         */
        Canceled = 13,
        
        /**
         * The FreeTextInvoice member.
         */
        FreeTextInvoice = 14,
        
        /**
         * The RFQ member.
         */
        RFQ = 15,
        
        /**
         * The RFQAccept member.
         */
        RFQAccept = 16,
        
        /**
         * The RFQReject member.
         */
        RFQReject = 17,
        
        /**
         * The PurchaseRequest member.
         */
        PurchaseRequest = 18,
        
        /**
         * The RFQResend member.
         */
        RFQResend = 19
    }
    
    /**
     * CustomerOrderType enum type.
     */
    export enum CustomerOrderType {
      
        /**
         * The SalesOrder member.
         */
        SalesOrder = 0,
        
        /**
         * The Quote member.
         */
        Quote = 1
    }
    
    /**
     * LineDiscountCalculationType enum type.
     */
    export enum LineDiscountCalculationType {
      
        /**
         * The Line member.
         */
        Line = 0,
        
        /**
         * The Multiline member.
         */
        Multiline = 1,
        
        /**
         * The MaxLineMultiline member.
         */
        MaxLineMultiline = 2,
        
        /**
         * The MinLineMultiline member.
         */
        MinLineMultiline = 3,
        
        /**
         * The LinePlusMultiline member.
         */
        LinePlusMultiline = 4,
        
        /**
         * The LineMultiplyMultiline member.
         */
        LineMultiplyMultiline = 5
    }
    
    /**
     * TaxCalculationType enum type.
     */
    export enum TaxCalculationType {
      
        /**
         * The Regular member.
         */
        Regular = 0,
        
        /**
         * The GTE member.
         */
        GTE = 1
    }
    
    /**
     * ShiftStatus enum type.
     */
    export enum ShiftStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Open member.
         */
        Open = 1,
        
        /**
         * The Closed member.
         */
        Closed = 2,
        
        /**
         * The BlindClosed member.
         */
        BlindClosed = 3,
        
        /**
         * The Suspended member.
         */
        Suspended = 4,
        
        /**
         * The Invalid member.
         */
        Invalid = 5
    }
    
    /**
     * TaxRegistrationType enum type.
     */
    export enum TaxRegistrationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The INN member.
         */
        INN = 1,
        
        /**
         * The KPP member.
         */
        KPP = 2,
        
        /**
         * The OKPO member.
         */
        OKPO = 3,
        
        /**
         * The OKDP member.
         */
        OKDP = 4,
        
        /**
         * The OKATO member.
         */
        OKATO = 5,
        
        /**
         * The OGRN member.
         */
        OGRN = 6,
        
        /**
         * The SNILS member.
         */
        SNILS = 7,
        
        /**
         * The CIFTS member.
         */
        CIFTS = 8,
        
        /**
         * The UID member.
         */
        UID = 9,
        
        /**
         * The TaxId member.
         */
        TaxId = 10,
        
        /**
         * The BranchId member.
         */
        BranchId = 11,
        
        /**
         * The CommercialRegisterCZ member.
         */
        CommercialRegisterCZ = 12,
        
        /**
         * The CustomsCustomerId member.
         */
        CustomsCustomerId = 14,
        
        /**
         * The Passport member.
         */
        Passport = 15,
        
        /**
         * The OfficialIdDoc member.
         */
        OfficialIdDoc = 16,
        
        /**
         * The ResidenceCertificate member.
         */
        ResidenceCertificate = 17,
        
        /**
         * The OtherIdDoc member.
         */
        OtherIdDoc = 18,
        
        /**
         * The NotCensused member.
         */
        NotCensused = 19,
        
        /**
         * The BusinessPremiseId member.
         */
        BusinessPremiseId = 20,
        
        /**
         * The LotteryCode member.
         */
        LotteryCode = 21
    }
    
    /**
     * CommerceListType enum type.
     */
    export enum CommerceListType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The WishList member.
         */
        WishList = 1
    }
    
    /**
     * ProductListType enum type.
     */
    export enum ProductListType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The OrderTemplate member.
         */
        OrderTemplate = 1
    }
    
    /**
     * RecommendationType enum type.
     */
    export enum RecommendationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Editorial member.
         */
        Editorial = 1,
        
        /**
         * The New member.
         */
        New = 2,
        
        /**
         * The Trending member.
         */
        Trending = 3,
        
        /**
         * The Bestselling member.
         */
        Bestselling = 4,
        
        /**
         * The Cart member.
         */
        Cart = 5,
        
        /**
         * The PeopleAlsoBuy member.
         */
        PeopleAlsoBuy = 6,
        
        /**
         * The Picks member.
         */
        Picks = 7,
        
        /**
         * The ShopSimilarLooks member.
         */
        ShopSimilarLooks = 8
    }
    
    /**
     * PurchaseTransferOrderType enum type.
     */
    export enum PurchaseTransferOrderType {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The PurchaseOrder member.
         */
        PurchaseOrder = 1,
        
        /**
         * The TransferIn member.
         */
        TransferIn = 2,
        
        /**
         * The TransferOut member.
         */
        TransferOut = 3,
        
        /**
         * The TransferOrder member.
         */
        TransferOrder = 4,
        
        /**
         * The PickingList member.
         */
        PickingList = 5
    }
    
    /**
     * BusinessPartnerUserStatus enum type.
     */
    export enum BusinessPartnerUserStatus {
      
        /**
         * The Pending member.
         */
        Pending = 0,
        
        /**
         * The Active member.
         */
        Active = 1,
        
        /**
         * The Removed member.
         */
        Removed = 2
    }
    
    /**
     * ElectronicAddressType enum type.
     */
    export enum ElectronicAddressType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Email member.
         */
        Email = 1
    }
    
    /**
     * DownloadSessionStatus enum type.
     */
    export enum DownloadSessionStatus {
      
        /**
         * The Started member.
         */
        Started = 0,
        
        /**
         * The Available member.
         */
        Available = 1,
        
        /**
         * The Requested member.
         */
        Requested = 2,
        
        /**
         * The Downloaded member.
         */
        Downloaded = 3,
        
        /**
         * The Applied member.
         */
        Applied = 4,
        
        /**
         * The Canceled member.
         */
        Canceled = 5,
        
        /**
         * The CreateFailed member.
         */
        CreateFailed = 6,
        
        /**
         * The DownloadFailed member.
         */
        DownloadFailed = 7,
        
        /**
         * The ApplyFailed member.
         */
        ApplyFailed = 8
    }
    
    /**
     * HardwareStationType enum type.
     */
    export enum HardwareStationType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Shared member.
         */
        Shared = 1,
        
        /**
         * The Dedicated member.
         */
        Dedicated = 2
    }
    
    /**
     * AuditEventUploadType enum type.
     */
    export enum AuditEventUploadType {
      
        /**
         * The Async member.
         */
        Async = 0,
        
        /**
         * The RealTime member.
         */
        RealTime = 1
    }
    
    /**
     * AuditEventType enum type.
     */
    export enum AuditEventType {
      
        /**
         * The Unknown member.
         */
        Unknown = 0,
        
        /**
         * The UserLogOn member.
         */
        UserLogOn = 1,
        
        /**
         * The UserLogOff member.
         */
        UserLogOff = 2,
        
        /**
         * The ManagerOverride member.
         */
        ManagerOverride = 3,
        
        /**
         * The ItemVoid member.
         */
        ItemVoid = 4,
        
        /**
         * The TransactionVoid member.
         */
        TransactionVoid = 5,
        
        /**
         * The PrintReceiptCopy member.
         */
        PrintReceiptCopy = 6,
        
        /**
         * The PriceCheck member.
         */
        PriceCheck = 7,
        
        /**
         * The TaxOverride member.
         */
        TaxOverride = 8,
        
        /**
         * The QuantityCorrection member.
         */
        QuantityCorrection = 9,
        
        /**
         * The PurgeTransactionsData member.
         */
        PurgeTransactionsData = 10
    }
    
    /**
     * AuditLogTraceLevel enum type.
     */
    export enum AuditLogTraceLevel {
      
        /**
         * The Trace member.
         */
        Trace = 0,
        
        /**
         * The Debug member.
         */
        Debug = 1,
        
        /**
         * The Error member.
         */
        Error = 2
    }
    
    /**
     * FiscalIntegrationEventType enum type.
     */
    export enum FiscalIntegrationEventType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Sale member.
         */
        Sale = 1,
        
        /**
         * The PrintReceiptCopy member.
         */
        PrintReceiptCopy = 2,
        
        /**
         * The ZReport member.
         */
        ZReport = 3,
        
        /**
         * The XReport member.
         */
        XReport = 4,
        
        /**
         * The CloseShift member.
         */
        CloseShift = 5,
        
        /**
         * The BankDrop member.
         */
        BankDrop = 6,
        
        /**
         * The TenderDeclaration member.
         */
        TenderDeclaration = 7,
        
        /**
         * The RemoveTender member.
         */
        RemoveTender = 8,
        
        /**
         * The FloatEntry member.
         */
        FloatEntry = 9,
        
        /**
         * The SafeDrop member.
         */
        SafeDrop = 10,
        
        /**
         * The StartingAmount member.
         */
        StartingAmount = 11,
        
        /**
         * The PackingSlip member.
         */
        PackingSlip = 12,
        
        /**
         * The GiftReceipt member.
         */
        GiftReceipt = 13,
        
        /**
         * The CustomerAccountDeposit member.
         */
        CustomerAccountDeposit = 14,
        
        /**
         * The CreditMemo member.
         */
        CreditMemo = 15,
        
        /**
         * The EditCustomerOrder member.
         */
        EditCustomerOrder = 16,
        
        /**
         * The CreateCustomerOrder member.
         */
        CreateCustomerOrder = 17,
        
        /**
         * The DepositOverride member.
         */
        DepositOverride = 18,
        
        /**
         * The FiscalXReport member.
         */
        FiscalXReport = 19,
        
        /**
         * The FiscalZReport member.
         */
        FiscalZReport = 20,
        
        /**
         * The AuditEvent member.
         */
        AuditEvent = 21,
        
        /**
         * The OpenDrawer member.
         */
        OpenDrawer = 22,
        
        /**
         * The CancelCustomerOrder member.
         */
        CancelCustomerOrder = 23,
        
        /**
         * The BeginSale member.
         */
        BeginSale = 24,
        
        /**
         * The PreSale member.
         */
        PreSale = 25,
        
        /**
         * The IncomeAccounts member.
         */
        IncomeAccounts = 26,
        
        /**
         * The ExpenseAccounts member.
         */
        ExpenseAccounts = 27,
        
        /**
         * The VoidTransaction member.
         */
        VoidTransaction = 28,
        
        /**
         * The SuspendTransaction member.
         */
        SuspendTransaction = 29,
        
        /**
         * The RecallTransaction member.
         */
        RecallTransaction = 30
    }
    
    /**
     * FiscalIntegrationDocumentGenerationResultType enum type.
     */
    export enum FiscalIntegrationDocumentGenerationResultType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Succeeded member.
         */
        Succeeded = 1,
        
        /**
         * The NotSupported member.
         */
        NotSupported = 2,
        
        /**
         * The NotRequired member.
         */
        NotRequired = 3,
        
        /**
         * The Failed member.
         */
        Failed = 4
    }
    
    /**
     * FiscalIntegrationServiceCommunicationResultType enum type.
     */
    export enum FiscalIntegrationServiceCommunicationResultType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Succeeded member.
         */
        Succeeded = 1,
        
        /**
         * The Failed member.
         */
        Failed = 2
    }
    
    /**
     * FiscalIntegrationServiceFailureType enum type.
     */
    export enum FiscalIntegrationServiceFailureType {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Busy member.
         */
        Busy = 1,
        
        /**
         * The NotAvailable member.
         */
        NotAvailable = 2,
        
        /**
         * The SubmissionFailed member.
         */
        SubmissionFailed = 3,
        
        /**
         * The Other member.
         */
        Other = 4,
        
        /**
         * The BadResponse member.
         */
        BadResponse = 5,
        
        /**
         * The Timeout member.
         */
        Timeout = 6
    }
    
    /**
     * AttachedServiceStatus enum type.
     */
    export enum AttachedServiceStatus {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Disabled member.
         */
        Disabled = 1,
        
        /**
         * The InProgress member.
         */
        InProgress = 2,
        
        /**
         * The Enabled member.
         */
        Enabled = 3,
        
        /**
         * The Submitted member.
         */
        Submitted = 4
    }
    
    /**
     * CommunicationErrors enum type.
     */
    export enum CommunicationErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HeadquarterResponseParsingError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HeadquarterResponseParsingError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AggregateCommunicationError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AggregateCommunicationError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExternalProviderError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExternalProviderError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceTimeOut member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceTimeOut,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceException member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceException,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceAuthenticationFailedFault member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceAuthenticationFailedFault,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceForbiddenFault member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceForbiddenFault,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceSenderFault member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceSenderFault,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidS2SClientId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidS2SClientId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidS2SSecret member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidS2SSecret,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidS2STenant member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidS2STenant,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidS2SApplicationName member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidS2SApplicationName,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TransactionServiceLoyaltySenderFault member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TransactionServiceLoyaltySenderFault
    }
    
    /**
     * ConfigurationErrors enum type.
     */
    export enum ConfigurationErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationKeyFormat member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationKeyFormat,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ApplicationCompositionFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ApplicationCompositionFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidChannelConfiguration member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidChannelConfiguration,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidPipelineConfiguration member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidPipelineConfiguration,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidProviderConfiguration member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidProviderConfiguration,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryPreferences member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryPreferences,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindConfigForTenderType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindConfigForTenderType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConnectionIsNotOverridden member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConnectionIsNotOverridden,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConnectionStringNotProvided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConnectionStringNotProvided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentConnectorNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentConnectorNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceConfigurationNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceConfigurationNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HardwareProfileNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HardwareProfileNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LayoutNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LayoutNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_VersionedEdmResourceFileNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_VersionedEdmResourceFileNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RetailServerConfigurationNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RetailServerConfigurationNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RetailServerCertificateNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RetailServerCertificateNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceCertificateNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceCertificateNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceInvalidConfiguration member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceInvalidConfiguration,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ActivatedDeviceMissingTokenIssueDatetime member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ActivatedDeviceMissingTokenIssueDatetime,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LCSLibrariesNotConfigured member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LCSLibrariesNotConfigured,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnknownRequestResponsePair member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnknownRequestResponsePair,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ProductRecommendationsDisabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ProductRecommendationsDisabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveRecommendationServiceCredentials member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveRecommendationServiceCredentials,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CommerceIssuerNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CommerceIssuerNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SecretProviderNotAvailable member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SecretProviderNotAvailable,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SecretNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SecretNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SecretProviderRetrievalFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SecretProviderRetrievalFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidProfilesConfiguration member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidProfilesConfiguration,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExtensionSettingsMustStartWithExtPrefix member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExtensionSettingsMustStartWithExtPrefix,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingValueIncorrectFormat member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConfigurationSettingValueIncorrectFormat,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestWasNotHandled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestWasNotHandled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_FiscalService_NotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_FiscalService_NotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationExtensionsSection member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidConfigurationExtensionsSection,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CompositionComponentExportingError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CompositionComponentExportingError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_VisualProfileNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_VisualProfileNotFound
    }
    
    /**
     * DataValidationErrors enum type.
     */
    export enum DataValidationErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The RegexAttribute_ValidationError member.
         */
        RegexAttribute_ValidationError,
        
        /**
         * The RequiredAttribute_ValidationError member.
         */
        RequiredAttribute_ValidationError,
        
        /**
         * The StringLengthAttribute_ValidationError member.
         */
        StringLengthAttribute_ValidationError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AuthenticationGrantTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AuthenticationGrantTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard member.
         */
        Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LoyaltyCardNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LoyaltyCardNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ProductMasterPageRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ProductMasterPageRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequiredValueNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequiredValueNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RemoteProductsNotSupportedWithCurrentTransactionType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RemoteProductsNotSupportedWithCurrentTransactionType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountIsBlocked member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountIsBlocked,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerInvoiceAccountIsBlocked member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerInvoiceAccountIsBlocked,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ProductIsNotActive member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ProductIsNotActive,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ProductIsBlocked member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ProductIsBlocked,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ValueOutOfRange member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ValueOutOfRange,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ObjectNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ObjectNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DuplicateObject member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DuplicateObject,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidFormat member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidFormat,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MissingStockCountTransactions member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MissingStockCountTransactions,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MissingParameter member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MissingParameter,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidProductDimensionCombinations member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidProductDimensionCombinations,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_EmployeeDiscountExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_EmployeeDiscountExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_EmployeeDetailsNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_EmployeeDetailsNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_BarcodeNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_BarcodeNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExistingCustomerAlreadyMappedToExternalIdentity member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExistingCustomerAlreadyMappedToExternalIdentity,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnsupportedLanguage member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnsupportedLanguage,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnknownRequest member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnknownRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnSupportedType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnSupportedType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AggregateValidationError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AggregateValidationError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IdMismatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IdMismatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidRequest member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeLineDiscountsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeLineDiscountsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeTotalDiscountsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleEmployeeTotalDiscountsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TotalDiscountsNotAllowedForMixSalesAndReturn member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TotalDiscountsNotAllowedForMixSalesAndReturn,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseAccountsInSameCart member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseAccountsInSameCart,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowDiscounts member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowDiscounts,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowSalesLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowSalesLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowCustomer member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowCustomer,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowGiftCardLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowGiftCardLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseLineDoesNotAllowSettingTransactionStatus member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseLineDoesNotAllowSettingTransactionStatus,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowAffiliation member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncomeExpenseCartDoesNotAllowAffiliation,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InsufficientQuantityAvailable member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InsufficientQuantityAvailable,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidUnitOfMeasure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidUnitOfMeasure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnitOfMeasureConversionNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnitOfMeasureConversionNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryMode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryMode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeliveryModeMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeliveryModeMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindDeliveryOptions,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidEmailAddress member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidEmailAddress,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryPreferenceType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryPreferenceType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidShippingAddress member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidShippingAddress,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCountryRegion member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCountryRegion,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidStateProvince member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidStateProvince,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCounty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCounty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCity member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCity,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidDistrict member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidDistrict,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidZipPostalCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidZipPostalCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAddress member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAddress,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidShippingDate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidShippingDate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DiscountAmountInvalidated member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DiscountAmountInvalidated,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidPriceEncountered member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidPriceEncountered,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ItemDiscontinuedFromChannel member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ItemDiscontinuedFromChannel,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DiscontinuedProductsRemovedFromCart member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DiscontinuedProductsRemovedFromCart,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GrossWeightForItemNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GrossWeightForItemNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ListingIdNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ListingIdNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequiredReasonCodesMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequiredReasonCodesMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReasonCodeLinesReasonCodeIdDuplicated member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReasonCodeLinesReasonCodeIdDuplicated,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartNotActive member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartNotActive,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidStatus member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidStatus,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_VoidTransactionContainsTenderedLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_VoidTransactionContainsTenderedLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForVoidProducts member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForVoidProducts,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturn member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturn,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptTemplate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptTemplate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptItem member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidReceiptItem,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ItemIdBarcodeMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ItemIdBarcodeMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleItemsForItemId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleItemsForItemId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeChange member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeChange,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForReturnTransaction member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForReturnTransaction,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForAddCartLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCustomerOrderModeForAddCartLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotAddProductHavingRefundChargeAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotAddProductHavingRefundChargeAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotChangeCustomerIdWhenEditingCustomerOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotChangeCustomerIdWhenEditingCustomerOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveAnyPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveAnyPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_QuoteMustHaveValidQuotationExpiryDate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_QuoteMustHaveValidQuotationExpiryDate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveDepositOverride member.
         */
        Microsoft_Dynamics_Commerce_Runtime_QuoteMustNotHaveDepositOverride,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DepositMustBeGreaterThanZero member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DepositMustBeGreaterThanZero,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanTotalAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanTotalAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanMaximumOverrideAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMustNotBeGreaterThanMaximumOverrideAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidPickupDepositOverrideAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidPickupDepositOverrideAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OrderWasNotCreatedWithDepositOverride member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OrderWasNotCreatedWithDepositOverride,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeChanged member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeChanged,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeCleared member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DepositOverrideMayNotBeCleared,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AmountDueMustBePaidBeforeCheckout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AmountDueMustBePaidBeforeCheckout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DiscountMustBeCalculatedBeforeCheckout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DiscountMustBeCalculatedBeforeCheckout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TotalsMustBeCalculatedBeforeCheckout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TotalsMustBeCalculatedBeforeCheckout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncorrectPaymentAmountSign member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncorrectPaymentAmountSign,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerTransaction member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMaximumAmountPerTransaction,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerTransaction member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentExceedsMinimumAmountPerTransaction,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChangebackIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChangebackIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OvertenderAmountExceedsMaximumAllowedValue member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OvertenderAmountExceedsMaximumAllowedValue,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_BalanceAmountExceedsMaximumAllowedValue member.
         */
        Microsoft_Dynamics_Commerce_Runtime_BalanceAmountExceedsMaximumAllowedValue,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentMustBeUsedToFinalizeTransaction member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentMustBeUsedToFinalizeTransaction,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindListing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindListing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindEmployeeActivityBreakCategory member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindEmployeeActivityBreakCategory,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToFindVariant member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToFindVariant,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidStoreNumber member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidStoreNumber,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesLineMustHavePickupDeliveryMode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesLineMustHavePickupDeliveryMode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToPickupMoreThanQtyRemaining member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToPickupMoreThanQtyRemaining,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryCharge member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidDeliveryCharge,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CurrencyConversionFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CurrencyConversionFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CurrencyChannelOrderMismatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CurrencyChannelOrderMismatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CurrencyNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CurrencyNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCancellationCharge member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCancellationCharge,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChargeNotConfiguredOnHeadquarters member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChargeNotConfiguredOnHeadquarters,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundCannotBePositive member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundCannotBePositive,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShippingChargeRefundIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesGroupItemGroupIntersectionInvalid member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesGroupItemGroupIntersectionInvalid,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotApplyHeaderChargesWhenShippingRefundAppliedOnCartLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotApplyHeaderChargesWhenShippingRefundAppliedOnCartLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotApplyRefundChargeOnProductForSale member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotApplyRefundChargeOnProductForSale,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PickupModeOfDeliveryNotConfiguredOnHeadquarters member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PickupModeOfDeliveryNotConfiguredOnHeadquarters,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SerialNumberCannotBeChanged member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SerialNumberCannotBeChanged,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissingInCustomerOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SerialNumberMissingInCustomerOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SerializedQuantityGreaterThanOne member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SerializedQuantityGreaterThanOne,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleCreditCardPaymentNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleCreditCardPaymentNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCardExpirationDate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCardExpirationDate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotAllLinesSaved member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotAllLinesSaved,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PurchaseTransferOrderRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesMustHaveQuantityGreaterThanZero member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesMustHaveQuantityGreaterThanZero,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnsMustHaveQuantityLesserThanZero member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnsMustHaveQuantityLesserThanZero,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanPurchased member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanPurchased,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanInvoicedMinusReturned member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotReturnMoreThanInvoicedMinusReturned,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotReturnMultipleTransactions member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotReturnMultipleTransactions,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PropertyUpdateNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PropertyUpdateNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardDiscountNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardDiscountNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LoadingActiveCartFromAnotherTerminalNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LoadingActiveCartFromAnotherTerminalNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftAlreadyOpenOnDifferentTerminal member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftAlreadyOpenOnDifferentTerminal,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TerminalHasAnOpenShift member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TerminalHasAnOpenShift,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CashDrawerHasAnOpenShift member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CashDrawerHasAnOpenShift,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftStartingAmountNotEntered member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftStartingAmountNotEntered,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftTenderDeclarationAmountNotEntered member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftTenderDeclarationAmountNotEntered,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftHasUnreconciledLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftHasUnreconciledLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReconciliationLineStatusMustBePending member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReconciliationLineStatusMustBePending,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MoreThanOneTenderTypeForTenderTypeId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MoreThanOneTenderTypeForTenderTypeId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TimeClockNotEnabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TimeClockNotEnabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ViewTimeClockNotEnabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ViewTimeClockNotEnabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneOperationWithAGiftCard member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneOperationWithAGiftCard,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardUnlockFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardUnlockFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardLineVoidReversalNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardLineVoidReversalNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesInvoiceLineVoidReversalNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesInvoiceLineVoidReversalNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveTenderLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveTenderLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveGiftCardSalesLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotSuspendCartWithActiveGiftCardSalesLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotUpdateUnitOfMeasureOnPriceOverriddenLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotUpdateUnitOfMeasureOnPriceOverriddenLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SettleInvoiceFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SettleInvoiceFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TerminalNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TerminalNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidQuantity member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidQuantity,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ItemQuantityExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ItemQuantityExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForReturns member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForReturns,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForGiftCards member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForGiftCards,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForInvoiceLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoPriceOverrideForInvoiceLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotAddNonProductItemToCustomerOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotAddNonProductItemToCustomerOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShiftValidationError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShiftValidationError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CredentialIdentifierAlreadyInUse member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CredentialIdentifierAlreadyInUse,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CreditVoucherNull member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CreditVoucherNull,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositMultipleCartLinesNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositMultipleCartLinesNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountNumberIsNotSet member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountNumberIsNotSet,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotPayForCustomerAccountDepositWithCustomerAccountPaymentMethod member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotPayForCustomerAccountDepositWithCustomerAccountPaymentMethod,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeNegative member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeNegative,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeVoided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositCannotBeVoided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OfflineDatabaseChunkFileNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OfflineDatabaseChunkFileNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChannelIsNotPublished member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChannelIsNotPublished,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidOperation member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidOperation,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MaxCountingDifferenceExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MaxCountingDifferenceExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_EmployeeNotAllowedManageSharedShift member.
         */
        Microsoft_Dynamics_Commerce_Runtime_EmployeeNotAllowedManageSharedShift,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidBagNumber member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidBagNumber,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoPrintersReturned member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoPrintersReturned,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_EnteringPriceNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_EnteringPriceNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualHigherPrice member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualHigherPrice,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualLowerPrice member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MustKeyInEqualLowerPrice,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MustKeyInNewPrice member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MustKeyInNewPrice,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConflictingClaimsPresentOnUserContext member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConflictingClaimsPresentOnUserContext,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineAdd member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineAdd,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineUpdate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartSalesLineUpdate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartState member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartState,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidProduct member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidProduct,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConflictingCartLineOperation member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConflictingCartLineOperation,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartLinesAggregateError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartLinesAggregateError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartInventoryLocationId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartInventoryLocationId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCartVersion member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCartVersion,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateOfReadOnlyCart member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateOfReadOnlyCart,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerOrDirectoryPartyNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerOrDirectoryPartyNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotUpdateCustomerAndLoyaltyCardAtTheSameTime member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotUpdateCustomerAndLoyaltyCardAtTheSameTime,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ConflictLoyaltyCardCustomerAndTransactionCustomer member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ConflictLoyaltyCardCustomerAndTransactionCustomer,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PreValidationForAsyncAddressFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PreValidationForAsyncAddressFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ZeroPriceIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ZeroPriceIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OperationNotAllowedOnLinkedProduct member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OperationNotAllowedOnLinkedProduct,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountMismatchBetweenTransactionAndDepositLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountMismatchBetweenTransactionAndDepositLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLineDoesNotAllowSettingTransactionStatus member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLineDoesNotAllowSettingTransactionStatus,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLinesNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountDepositLinesNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnLineNumberNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnLineNumberNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerNameExceedsMaximumLength member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerNameExceedsMaximumLength,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerPhoneNumberExceedsMaximumLength member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerPhoneNumberExceedsMaximumLength,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerEmailExceedsMaximumLength member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerEmailExceedsMaximumLength,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidShiftStatusChange member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidShiftStatusChange,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AmountExceedsMaximumAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AmountExceedsMaximumAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PrintXZReportNotConfigured member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PrintXZReportNotConfigured,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ColumnsNameBadFormat member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ColumnsNameBadFormat,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SelectedValuesDidNotMatchExactlyOneProduct member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SelectedValuesDidNotMatchExactlyOneProduct,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ProductNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ProductNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DiscountNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DiscountNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_FailedToRecallTransaction member.
         */
        Microsoft_Dynamics_Commerce_Runtime_FailedToRecallTransaction,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryAddresses member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryAddresses,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SortingColumnsNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SortingColumnsNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WorkerDoesNotHaveAllowSaleOutsideAssortmentPermission member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WorkerDoesNotHaveAllowSaleOutsideAssortmentPermission,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidOrderInvoiceData member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidOrderInvoiceData,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoSalesInvoiceReturned member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoSalesInvoiceReturned,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardLineNotAllowedWithInvoiceLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardLineNotAllowedWithInvoiceLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCustomerOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCustomerOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerOrderNotAllowedToContainInvoiceLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerOrderNotAllowedToContainInvoiceLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowedDuringInvoicePayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesLineNotAllowedDuringInvoicePayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedWithItemLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedWithItemLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ItemLinesNotAllowedWithInvoiceLine member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ItemLinesNotAllowedWithInvoiceLine,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleInvoiceLinesNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleInvoiceLinesNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountRemovalNotAllowedForInvoiceSales member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountRemovalNotAllowedForInvoiceSales,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithoutCustomerAccount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithoutCustomerAccount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithDifferentCustomerAccount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvoiceLineNotAllowedInCartWithDifferentCustomerAccount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvoiceDiscountNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvoiceDiscountNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAttributeValue member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAttributeValue,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeValueOutOfBounds member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeValueOutOfBounds,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeValueCannotBeNull member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeValueCannotBeNull,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeTypeMismatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeTypeMismatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeDefinitionNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeDefinitionNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeValidationFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeValidationFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MixingSalesAndReturnsProhibited member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MixingSalesAndReturnsProhibited,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCouponCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCouponCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CouponRequiresCustomerOnCart member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CouponRequiresCustomerOnCart,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExclusiveCouponCannotBeAppliedWithOtherCoupons member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExclusiveCouponCannotBeAppliedWithOtherCoupons,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CouponExceedsDefinedUsageLimits member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CouponExceedsDefinedUsageLimits,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserCannotAcceptFulfillmentLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserCannotAcceptFulfillmentLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserCannotRejectFulfillmentLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserCannotRejectFulfillmentLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_AlreadyRegistered member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_AlreadyRegistered,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_HQisNotAvailable member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy_HQisNotAvailable,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RestrictPrintingReceiptCopy,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RemoveAddPaymentMethodConfigurationNotDefined member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RemoveAddPaymentMethodConfigurationNotDefined,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OverrideDepostAmountShouldBeLargerThanCarriedOutAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OverrideDepostAmountShouldBeLargerThanCarriedOutAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MixingItemIdsAndProductIdsProhibited member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MixingItemIdsAndProductIdsProhibited,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PackingLinesFromDifferentOrdersNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PackingLinesFromDifferentOrdersNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidFulfillmentLineKey member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidFulfillmentLineKey,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_Missing_LocationId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_Missing_LocationId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_Missing_ShipDate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_Missing_ShipDate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_Missing_ReceiveDate member.
         */
        Microsoft_Dynamics_Commerce_Runtime_Missing_ReceiveDate,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidOrderType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidOrderType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShippingSerializedProductsNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShippingSerializedProductsNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ShippingMultipleOrdersNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ShippingMultipleOrdersNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToOpenShift member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToOpenShift,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartAlreadyCheckedOut member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartAlreadyCheckedOut,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CashDrawerLimitExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CashDrawerLimitExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_InvalidShift member.
         */
        Microsoft_Dynamics_Commerce_InvalidShift,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SuspendedTransactionNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SuspendedTransactionNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturnOnly member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartContainsProductsForReturnOnly,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerBlockedForLoyaltyEnrollment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerBlockedForLoyaltyEnrollment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InactiveCouponCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InactiveCouponCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExpiredCouponCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExpiredCouponCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotStartedCouponCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotStartedCouponCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExceededUsageLimitCouponCode member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExceededUsageLimitCouponCode,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidResumeCartRequest member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidResumeCartRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChargeCodeNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChargeCodeNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentException_ReturnWithoutReceiptPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentException_ReturnWithoutReceiptPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AddressLengthExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AddressLengthExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CountyLengthExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CountyLengthExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_StreetLengthExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_StreetLengthExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidLinkedPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidLinkedPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttributeMustBeUnique member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttributeMustBeUnique,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotesLengthExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotesLengthExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToLocateTenderTypeWithGivenId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToLocateTenderTypeWithGivenId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TenderTypeDoesNotSupportGiftCardOperations member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TenderTypeDoesNotSupportGiftCardOperations,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ExtensibleTransactionTypeNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ExtensibleTransactionTypeNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidLastModifiedDateTimeFromValue member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidLastModifiedDateTimeFromValue,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MissingRequiredCartTenderLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MissingRequiredCartTenderLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidRefinerRecordIdForCustomerSearchKeywordRefiner member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidRefinerRecordIdForCustomerSearchKeywordRefiner,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidCustomerOrderModeForCheckout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidCustomerOrderModeForCheckout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidCartTypeForCheckout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidCartTypeForCheckout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MissingSequentialSignature member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MissingSequentialSignature,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MissingRecordIdForStorePickUpAddress member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MissingRecordIdForStorePickUpAddress,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidChecklistTasksUpdateRequest member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidChecklistTasksUpdateRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChecklistTasksCreateNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChecklistTasksCreateNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidTransferOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidTransferOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotValidTransferOrderLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotValidTransferOrderLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DefaultLocationNotFoundForWarehouse member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DefaultLocationNotFoundForWarehouse,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ApplyMaxQuantitiesNotSupportedForOperationType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ApplyMaxQuantitiesNotSupportedForOperationType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransactionServiceDeserializationError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransactionServiceDeserializationError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotValidStatus member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotValidStatus,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentUpdateLinesCriteriaNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentUpdateLinesCriteriaNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventorySourceDocumentLineMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventorySourceDocumentLineMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateInventoryDocumentStatusUnsupportedTransition member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateInventoryDocumentStatusUnsupportedTransition,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AddingLinesToOrderIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AddingLinesToOrderIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverreceivingToTransferOrderIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverreceivingToTransferOrderIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverdeliveringToTransferOrderIsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverdeliveringToTransferOrderIsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverreceivingNotEnabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverreceivingNotEnabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOvershippingNotEnabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOvershippingNotEnabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverReceivedExceedsThreshold member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverReceivedExceedsThreshold,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverShippedExceedsThreshold member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOverShippedExceedsThreshold,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOperationCommitFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentOperationCommitFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentReceiptIdNotValid member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentReceiptIdNotValid,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentReceiptIdNotSupportedForGivenDocumentType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentReceiptIdNotSupportedForGivenDocumentType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLockedByOtherTerminal member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLockedByOtherTerminal,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentVersionNull member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentVersionNull,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotValidVersion member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotValidVersion,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotEnoughApplicableLinesForUpdateLinesByProduct member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotEnoughApplicableLinesForUpdateLinesByProduct,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentExceedMaximumQuantity member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentExceedMaximumQuantity,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLineProductIdMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLineProductIdMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_StoreOrgUnitNameMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_StoreOrgUnitNameMissing,
        
        /**
         * The Microsoft_Dynamics_RetailServer_BadRequest member.
         */
        Microsoft_Dynamics_RetailServer_BadRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidItemTaxGroup member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidItemTaxGroup,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MixingGiftCardsAndDepositLinesNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MixingGiftCardsAndDepositLinesNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentRowVersionMismatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentRowVersionMismatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AssociatedWarrantableIsVoided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AssociatedWarrantableIsVoided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidWarrantyLineQuantity member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidWarrantyLineQuantity,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DuplicatedWarranty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DuplicatedWarranty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesOrderNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesOrderNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SalesOrderVoided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SalesOrderVoided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyAlreadyAdded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyAlreadyAdded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyAlreadyBought member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyAlreadyBought,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyNotApplicableByPrice member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyNotApplicableByPrice,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidWarranty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidWarranty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyOperationalLineNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyOperationalLineNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyForReturnedItemNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyForReturnedItemNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IsNotWarranty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IsNotWarranty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotChangeWarrantableProductWhenItAssociatesWarranty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotChangeWarrantableProductWhenItAssociatesWarranty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyNotEmptyForReturn member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyNotEmptyForReturn,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotSpecifyBothWarrantableLineNumberAndWarrantiedId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotSpecifyBothWarrantableLineNumberAndWarrantiedId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CannotHaveMultipleWarrantablesOrWarrantiesWithSameWarrantiedId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CannotHaveMultipleWarrantablesOrWarrantiesWithSameWarrantiedId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OnlySerializedProductCanHaveWarranty member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OnlySerializedProductCanHaveWarranty,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CrossCustomerWarrantyNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CrossCustomerWarrantyNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CrossCustomerWarrantyReturnNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CrossCustomerWarrantyReturnNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerChangeNotAllowedWithWarrantyLines member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerChangeNotAllowedWithWarrantyLines,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerChangeNotAllowedWithWarrantyReturn member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerChangeNotAllowedWithWarrantyReturn,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CartTypeChangeNotAllowedWhenWarrantableInDifferentOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CartTypeChangeNotAllowedWhenWarrantableInDifferentOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyInconsistentCartType member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyInconsistentCartType,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyRelationCombiningCashAndCarryAndCustomerOrderNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyRelationCombiningCashAndCarryAndCustomerOrderNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentViolatesReturnPolicy member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentViolatesReturnPolicy,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CardTypeNotValid member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CardTypeNotValid,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationFormatNotValid member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationFormatNotValid,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationInvalidCategorySetup member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationInvalidCategorySetup,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationIsPrimaryAddressRestricted member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationIsPrimaryAddressRestricted,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationNumberMustBeUnique member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TaxRegistrationNumberMustBeUnique,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ElectronicAddressTypeNotValid member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ElectronicAddressTypeNotValid,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RecipientAddressCountExceededMaximumAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RecipientAddressCountExceededMaximumAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SearchingWarehouseLocationsInMultipleWarehousesNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SearchingWarehouseLocationsInMultipleWarehousesNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SearchingWarehouseLocationsWithoutWarehouseNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SearchingWarehouseLocationsWithoutWarehouseNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryNoAvailableReceiveQtyTransferOrder member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryNoAvailableReceiveQtyTransferOrder,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberNotMatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberNotMatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberLinesFulfilled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberLinesFulfilled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberDuplicated member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberDuplicated,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotBlankSerialNumberRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotBlankSerialNumberRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberLineNonIntegerQuantityEntered member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentSerialNumberLineNonIntegerQuantityEntered,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotAllowToUpdatePostedSerialNumbers member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotAllowToUpdatePostedSerialNumbers,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryCustomerContactsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultiplePrimaryCustomerContactsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotSupportedHeadquarterVersion member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentNotSupportedHeadquarterVersion,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderUnderDeliveryNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderUnderDeliveryNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderLineNotAllowToClose member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderLineNotAllowToClose,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderUnderDeliveryBelowTolerance member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentTransferOrderUnderDeliveryBelowTolerance,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentValidationResultCategoryMustBeSpecified member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentValidationResultCategoryMustBeSpecified,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentValidationResultCategoryCanOnlyBeSpecifiedOnce member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentValidationResultCategoryCanOnlyBeSpecifiedOnce,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentDoesNotExist member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentDoesNotExist,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentPurchaseOrderChangeRequestRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentPurchaseOrderChangeRequestRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentPurchaseOrderChangeRequestRequirementUnknown member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentPurchaseOrderChangeRequestRequirementUnknown,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLineMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryDocumentLineMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventorySerialNumberNotAvailable member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventorySerialNumberNotAvailable
    }
    
    /**
     * FeatureNotSupportedErrors enum type.
     */
    export enum FeatureNotSupportedErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestParametersNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestParametersNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestParameterValueNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestParameterValueNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChangeTenderTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChangeTenderTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DemoModeOperationNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DemoModeOperationNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RealtimeServiceNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReceiptTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OnlineChannelRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OnlineChannelRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CouponsNotSupportedOnSalesQuotations member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CouponsNotSupportedOnSalesQuotations,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_FeatureNotSupportedInHeadquarters member.
         */
        Microsoft_Dynamics_Commerce_Runtime_FeatureNotSupportedInHeadquarters,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdatingCouponsNotSupportedOnPickup member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdatingCouponsNotSupportedOnPickup,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateAsyncCustomerNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateAsyncCustomerNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardPaymentNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardPaymentNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardOperationNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardOperationNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CurrentVersionSupportsOnlyOneInvoicePayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CurrentVersionSupportsOnlyOneInvoicePayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleCategoryIdsNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleCategoryIdsNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CrossStoreProductSearchNotSupportedInOnlineChannel member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CrossStoreProductSearchNotSupportedInOnlineChannel,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CrossStoreGetActivePriceNotSupportedInOnlineChannel member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CrossStoreGetActivePriceNotSupportedInOnlineChannel,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateClientBookNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateClientBookNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestCustomerTimelineItemsNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestCustomerTimelineItemsNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RequestCustomerTimelineItemTypesNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RequestCustomerTimelineItemTypesNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CreateCustomerTimelineItemNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CreateCustomerTimelineItemNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateCustomerTimelineItemNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateCustomerTimelineItemNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_SearchByIdsNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_SearchByIdsNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DocumentOperationNotSupportedInHeadquarters member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DocumentOperationNotSupportedInHeadquarters,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TaskManagementNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TaskManagementNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryInboundOutboundDocumentsWithoutASourceDocumentNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryInboundOutboundDocumentsWithoutASourceDocumentNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_WarrantyForCustomerOrderNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_WarrantyForCustomerOrderNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OptimizedProductAvailabilityJobNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OptimizedProductAvailabilityJobNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryInboundOutboundDocumentsValidationNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryInboundOutboundDocumentsValidationNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InventoryAddingItemToPurchaseOrderNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InventoryAddingItemToPurchaseOrderNotSupported
    }
    
    /**
     * SecurityErrors enum type.
     */
    export enum SecurityErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AuthenticationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AuthenticationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AuthorizationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AuthorizationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AuthenticationMethodDisabled member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AuthenticationMethodDisabled,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CommerceIdentityNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CommerceIdentityNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserNotActivated member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserNotActivated,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PrincipalMissing member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PrincipalMissing,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PasswordRequired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PasswordRequired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChangePasswordFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChangePasswordFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidPassword member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidPassword,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IdentityProviderNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IdentityProviderNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAuthenticationCredentials member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAuthenticationCredentials,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdatePasswordFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdatePasswordFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ResetPasswordFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ResetPasswordFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NonDrawerOperationsOnly member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NonDrawerOperationsOnly,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UseExistingShiftPermissionDenied member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UseExistingShiftPermissionDenied,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CreateTransferOrderNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CreateTransferOrderNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserCannotMassActivation member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserCannotMassActivation,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_OpenMultipleShiftsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_OpenMultipleShiftsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserSessionNotOpened member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserSessionNotOpened,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HeadquarterTransactionServiceMethodCallFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HeadquarterCommunicationFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceTokenExpired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceTokenExpired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceTokenNotPresent member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceTokenNotPresent,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidChannel member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidChannel,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ElevatedUserSameAsLoggedOnUser member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ElevatedUserSameAsLoggedOnUser,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GrantTypeNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GrantTypeNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceDeactivationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceDeactivationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_HardwareStationTokenCreationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_HardwareStationTokenCreationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidHardwareStationToken member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidHardwareStationToken,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserLogonAnotherTerminal member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserLogonAnotherTerminal,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnlockRegisterFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnlockRegisterFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ChannelDatabaseConnectionFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ChannelDatabaseConnectionFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidUserToken member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidUserToken,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountAuthorizationFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountAuthorizationFailure,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LocalLogonFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LocalLogonFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_LocalDeviceAuthenticationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_LocalDeviceAuthenticationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceTokenValidationFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceTokenValidationFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoDeviceManagementPermission member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoDeviceManagementPermission,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_IncorrectLogonTypeUserAccountOrPassword member.
         */
        Microsoft_Dynamics_Commerce_Runtime_IncorrectLogonTypeUserAccountOrPassword,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAudience member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAudience,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidIssuer member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidIssuer,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TenantIdNotFound member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TenantIdNotFound,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AADTokenIssuedForDifferentEnvironment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AADTokenIssuedForDifferentEnvironment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidAADTenantId member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidAADTenantId,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserBlockedDueToTooManyFailedLogonAttempts member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserBlockedDueToTooManyFailedLogonAttempts,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UserPasswordExpired member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UserPasswordExpired,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CheckOutNotOverHTTPS member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CheckOutNotOverHTTPS,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_AttemptToActivateFromDifferentPhysicalDevice member.
         */
        Microsoft_Dynamics_Commerce_Runtime_AttemptToActivateFromDifferentPhysicalDevice,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InternalServerError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InternalServerError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_DeviceActivationNotAllowedWithUserTokenIssuer member.
         */
        Microsoft_Dynamics_Commerce_Runtime_DeviceActivationNotAllowedWithUserTokenIssuer,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PasswordComplexityRequirementsNotMet member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PasswordComplexityRequirementsNotMet,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PasswordHistoryRequirementsNotMet member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PasswordHistoryRequirementsNotMet,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnItemPriceExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ReturnTransactionTotalExceeded,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CredentialsNotConfigured member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CredentialsNotConfigured,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PolicyBypassNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PolicyBypassNotAllowed
    }
    
    /**
     * StorageErrors enum type.
     */
    export enum StorageErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CriticalStorageError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CriticalStorageError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnexpectedNumberOfRowsError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnexpectedNumberOfRowsError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ObjectVersionMismatchError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ObjectVersionMismatchError,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_StorageRequestTimeout member.
         */
        Microsoft_Dynamics_Commerce_Runtime_StorageRequestTimeout,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UpdateOfReadOnlyRowError member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UpdateOfReadOnlyRowError
    }
    
    /**
     * VersionNotSupportedErrors enum type.
     */
    export enum VersionNotSupportedErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RetailServerApiVersionNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RetailServerApiVersionNotSupported
    }
    
    /**
     * PaymentErrors enum type.
     */
    export enum PaymentErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToCapturePayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToCapturePayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToRefundPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToRefundPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToCancelPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToCancelPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToGetCardPaymentAcceptPoint member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToGetCardPaymentAcceptPoint,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToRetrieveCardPaymentAcceptResult,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidCashBackAmount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_ManualCardNumberNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_ManualCardNumberNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TenderLineCannotBeVoided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TenderLineCannotBeVoided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidPaymentRequest member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidPaymentRequest,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentAlreadyVoided member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentAlreadyVoided,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber member.
         */
        Microsoft_Dynamics_Commerce_Runtime_InvalidLoyaltyCardNumber,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardCurrencyMismatch member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardCurrencyMismatch,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_GiftCardBalanceInquiryFailed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_GiftCardBalanceInquiryFailed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoResponseFromGatewayForGiftCardBalanceInquiry member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoResponseFromGatewayForGiftCardBalanceInquiry,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentAmountExceedsGiftBalance member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentAmountExceedsGiftBalance,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard member.
         */
        Microsoft_Dynamics_Commerce_Runtime_BlockedLoyaltyCard,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoTenderLoyaltyCard member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoTenderLoyaltyCard,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NotEnoughRewardPoints member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NotEnoughRewardPoints,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_RefundAmountMoreThanAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_RefundAmountMoreThanAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneLoyaltyTender member.
         */
        Microsoft_Dynamics_Commerce_Runtime_NoMoreThanOneLoyaltyTender,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentUsingUnauthorizedAccount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentUsingUnauthorizedAccount,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentIsNotAllowedForCustomerOrderDepositAndCancellation member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentIsNotAllowedForCustomerOrderDepositAndCancellation,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_PaymentRequiresMerchantProperties member.
         */
        Microsoft_Dynamics_Commerce_Runtime_PaymentRequiresMerchantProperties,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutItems member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutItems,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutAndReturnItems member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsTotalAmountForCarryOutAndReturnItems,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountLimitSignDifferentFromAmountDue member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountLimitSignDifferentFromAmountDue,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountLimitSignDifferentFromTotalCustomerAccountPayment member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountLimitSignDifferentFromTotalCustomerAccountPayment,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsCustomerAccountFloorLimit member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentExceedsCustomerAccountFloorLimit,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePaymentCardTypeMissingOrNotSupported member.
         */
        Microsoft_Dynamics_Commerce_Runtime_UnableToAuthorizePaymentCardTypeMissingOrNotSupported,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_FraudRisk member.
         */
        Microsoft_Dynamics_Commerce_Runtime_FraudRisk,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_TokenizedPaymentCardNotExpected member.
         */
        Microsoft_Dynamics_Commerce_Runtime_TokenizedPaymentCardNotExpected,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_MultipleCustomerAccountPaymentsNotAllowed member.
         */
        Microsoft_Dynamics_Commerce_Runtime_MultipleCustomerAccountPaymentsNotAllowed,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentForCustomerWithoutAllowOnAccount member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CustomerAccountPaymentForCustomerWithoutAllowOnAccount
    }
    
    /**
     * CommerceDataExchangeErrors enum type.
     */
    export enum CommerceDataExchangeErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_Runtime_CdxDataPackageApplicationFailure member.
         */
        Microsoft_Dynamics_Commerce_Runtime_CdxDataPackageApplicationFailure
    }
    
    /**
     * WrongEndpointErrors enum type.
     */
    export enum WrongEndpointErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Commerce_WrongEndpoint member.
         */
        Microsoft_Dynamics_Commerce_WrongEndpoint
    }
    
    /**
     * RetailServerApiErrors enum type.
     */
    export enum RetailServerApiErrors {
      
        /**
         * The None member.
         */
        None,
        
        /**
         * The Microsoft_Dynamics_Internal_Server_Error member.
         */
        Microsoft_Dynamics_Internal_Server_Error,
        
        /**
         * The Microsoft_Dynamics_RetailServer_BadRequest member.
         */
        Microsoft_Dynamics_RetailServer_BadRequest,
        
        /**
         * The Microsoft_Dynamics_RetailServer_RequestTooLarge member.
         */
        Microsoft_Dynamics_RetailServer_RequestTooLarge
    }
    
    /**
     * ExceptionSeverity enum type.
     */
    export enum ExceptionSeverity {
      
        /**
         * The None member.
         */
        None = 0,
        
        /**
         * The Error member.
         */
        Error = 1,
        
        /**
         * The Warning member.
         */
        Warning = 2,
        
        /**
         * The Critical member.
         */
        Critical = 3,
        
        /**
         * The Informational member.
         */
        Informational = 4
    }
    
    /**
     * Category entity interface.
     */
    export interface Category {
        RecordId: number;
        OfflineImage?: string;
        Name?: string;
        ParentCategory?: number;
        DisplayOrder?: number;
        Images?: Entities.MediaLocation[];
        NameTranslations?: Entities.TextValueTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Cart entity interface.
     */
    export interface Cart {
        AffiliationLines?: Entities.AffiliationLoyaltyTier[];
        IsRequiredAmountPaid?: boolean;
        IsDiscountFullyCalculated?: boolean;
        IgnoreDiscountCalculation?: boolean;
        AmountDue?: number;
        AmountPaid?: number;
        AttributeValues?: Entities.AttributeValueBase[];
        BeginDateTime?: Date;
        BusinessDate?: Date;
        CancellationChargeAmount?: number;
        EstimatedShippingAmount?: number;
        CartLines?: Entities.CartLine[];
        CartTypeValue?: number;
        ChannelId?: number;
        ChargeAmount?: number;
        CustomerOrderRemainingBalance?: number;
        ChargeLines?: Entities.ChargeLine[];
        TaxViewLines?: Entities.TaxViewLine[];
        Comment?: string;
        InvoiceComment?: string;
        Coupons?: Entities.Coupon[];
        CustomerId?: string;
        CustomerOrderModeValue?: number;
        DeliveryMode?: string;
        DeliveryModeChargeAmount?: number;
        DiscountAmount?: number;
        DiscountAmountWithoutTax?: number;
        DiscountCodes?: string[];
        Id: string;
        SuspendedCartId?: string;
        TransactionTypeValue?: number;
        CustomerAccountDepositLines?: Entities.CustomerAccountDepositLine[];
        IncomeExpenseLines?: Entities.IncomeExpenseLine[];
        IncomeExpenseTotalAmount?: number;
        IsReturnByReceipt?: boolean;
        ReturnTransactionHasLoyaltyPayment?: boolean;
        IsFavorite?: boolean;
        IsRecurring?: boolean;
        IsSuspended?: boolean;
        LoyaltyCardId?: string;
        ModifiedDateTime?: Date;
        Name?: string;
        OrderNumber?: string;
        AvailableDepositAmount?: number;
        OverriddenDepositAmount?: number;
        OverriddenDepositWithoutCarryoutAmount?: number;
        PrepaymentAmountPaid?: number;
        PrepaymentAppliedOnPickup?: number;
        PromotionLines?: string[];
        QuotationExpiryDate?: Date;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        ReceiptEmail?: string;
        RequestedDeliveryDate?: Date;
        RequiredDepositAmount?: number;
        RequiredDepositWithoutCarryoutAmount?: number;
        SalesId?: string;
        ShippingAddress?: Entities.Address;
        StaffId?: string;
        SubtotalAmount?: number;
        SubtotalAmountWithoutTax?: number;
        NetPrice?: number;
        SubtotalSalesAmount?: number;
        TaxAmount?: number;
        TaxOnCancellationCharge?: number;
        TaxOverrideCode?: string;
        TenderLines?: Entities.TenderLine[];
        RefundableTenderLines?: Entities.TenderLine[];
        TerminalId?: string;
        TotalAmount?: number;
        TotalSalesAmount?: number;
        TotalReturnAmount?: number;
        TotalCarryoutSalesAmount?: number;
        TotalCustomerOrderSalesAmount?: number;
        TotalManualDiscountAmount?: number;
        TotalManualDiscountPercentage?: number;
        WarehouseId?: string;
        IsCreatedOffline?: boolean;
        CartStatusValue?: number;
        ReceiptTransactionTypeValue?: number;
        CommissionSalesGroup?: string;
        Version?: number;
        TotalItems?: number;
        HasTaxCalculationTriggered?: boolean;
        MerchantProperties?: Entities.PaymentMerchantInformation[];
        HasChargeCalculationTriggered?: boolean;
        FiscalTransactions?: Entities.FiscalTransaction[];
        ShippingChargeAmount?: number;
        OtherChargeAmount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Customer entity interface.
     */
    export interface Customer {
        AccountNumber: string;
        RecordId?: number;
        CreatedDateTime?: Date;
        ChargeGroup?: string;
        PriceGroup?: string;
        IsCustomerTaxInclusive?: boolean;
        Phone?: string;
        PhoneRecordId?: number;
        PhoneExt?: string;
        Cellphone?: string;
        Email?: string;
        EmailRecordId?: number;
        Url?: string;
        UrlRecordId?: number;
        Name?: string;
        PersonNameId?: number;
        FirstName?: string;
        MiddleName?: string;
        LastName?: string;
        DirectoryPartyRecordId?: number;
        PartyNumber?: string;
        CustomerTypeValue?: number;
        Language?: string;
        CustomerGroup?: string;
        CurrencyCode?: string;
        CNPJCPFNumber?: string;
        IdentificationNumber?: string;
        InvoiceAccount?: string;
        MandatoryCreditLimit?: boolean;
        CreditRating?: string;
        CreditLimit?: number;
        Balance?: number;
        Blocked?: boolean;
        BlockedType?: number;
        UseOrderNumberReference?: boolean;
        OrganizationId?: string;
        UsePurchaseRequest?: boolean;
        MultilineDiscountGroup?: string;
        TotalDiscountGroup?: string;
        LineDiscountGroup?: string;
        TaxGroup?: string;
        SalesTaxGroup?: string;
        CommissionSalesGroupId?: string;
        TaxExemptNumber?: string;
        VatNumber?: string;
        TaxOffice?: string;
        NonChargeableAccount?: boolean;
        Tag?: string;
        ReceiptSettings?: number;
        ReceiptEmail?: string;
        OptOutPersonalization?: boolean;
        OptOutWebActivityTracking?: boolean;
        RetailCustomerTableRecordId?: number;
        OfflineImage?: string;
        IsAsyncCustomer?: boolean;
        NewCustomerPartyNumber?: string;
        CustomerAffiliations?: Entities.CustomerAffiliation[];
        Addresses?: Entities.Address[];
        Attributes?: Entities.CustomerAttribute[];
        Images?: Entities.MediaLocation[];
        TitleRecordId?: number;
        IsFloorLimitBlocked?: boolean;
        IsB2b?: boolean;
        IsB2bAdmin?: boolean;
        Contacts?: Entities.ContactInfo[];
        AllowOnAccountPayment?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Employee entity interface.
     */
    export interface Employee {
        StaffId: string;
        NameOnReceipt?: string;
        Name?: string;
        CultureName?: string;
        NumberOfDaysToPasswordExpiry?: number;
        Permissions?: Entities.EmployeePermissions;
        Images?: Entities.MediaLocation[];
        DefaultImage?: string;
        DefaultCommissionSalesGroup?: string;
        RecordId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Checklist entity interface.
     */
    export interface Checklist {
        RecordId: number;
        Tasks?: Entities.ChecklistTask[];
        Version?: string;
        ProcessId?: string;
        Name?: string;
        Description?: string;
        AssignedToChannelId?: number;
        AssignedToWorkerPersonnelNumber?: string;
        StatusValue?: number;
        StartDateTime?: Date;
        EndDateTime?: Date;
        TargetDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SalesOrder entity interface.
     */
    export interface SalesOrder {
        DocumentStatusValue?: number;
        RecordId?: number;
        StatusValue?: number;
        McrOrderStopped?: boolean;
        Shipments?: Entities.Shipment[];
        DetailedOrderStatusValue?: number;
        AffiliationLoyaltyTierLines?: Entities.SalesAffiliationLoyaltyTier[];
        IsRequiredAmountPaid?: boolean;
        IsDiscountFullyCalculated?: boolean;
        IgnoreDiscountCalculation?: boolean;
        AmountDue?: number;
        EstimatedShippingAmount?: number;
        AmountPaid?: number;
        CustomerOrderRemainingBalance?: number;
        AttributeValues?: Entities.AttributeValueBase[];
        AvailableDepositAmount?: number;
        BeginDateTime?: Date;
        CreatedDateTime?: Date;
        BusinessDate?: Date;
        CalculatedDepositAmount?: number;
        CancellationCharge?: number;
        ChannelId?: number;
        ChannelReferenceId?: string;
        ChargeAmount?: number;
        ChargeLines?: Entities.ChargeLine[];
        Comment?: string;
        Coupons?: Entities.Coupon[];
        InvoiceComment?: string;
        ContactInformationCollection?: Entities.ContactInformation[];
        CurrencyCode?: string;
        CustomerAccountDepositLines?: Entities.CustomerAccountDepositLine[];
        CustomerId?: string;
        CustomerOrderModeValue?: number;
        CustomerOrderTypeValue?: number;
        DeliveryMode?: string;
        DeliveryModeChargeAmount?: number;
        DiscountAmount?: number;
        DiscountAmountWithoutTax?: number;
        NetPrice?: number;
        DiscountCodes?: string[];
        EntryStatusValue?: number;
        GrossAmount?: number;
        HasLoyaltyPayment?: boolean;
        Id: string;
        SuspendedTransactionId?: string;
        IncomeExpenseLines?: Entities.IncomeExpenseLine[];
        IncomeExpenseTotalAmount?: number;
        InventoryLocationId?: string;
        IsCreatedOffline?: boolean;
        IsReturnByReceipt?: boolean;
        IsSuspended?: boolean;
        IsTaxIncludedInPrice?: boolean;
        IsTaxExemptedForPriceInclusive?: boolean;
        LineDiscount?: number;
        LineDiscountCalculationTypeValue?: number;
        LoyaltyCardId?: string;
        LoyaltyDiscountAmount?: number;
        LoyaltyManualDiscountAmount?: number;
        LoyaltyRewardPointLines?: Entities.LoyaltyRewardPointLine[];
        ModifiedDateTime?: Date;
        Name?: string;
        NetAmount?: number;
        NetAmountWithoutTax?: number;
        NetAmountWithNoTax?: number;
        NetAmountWithTax?: number;
        NumberOfItems?: number;
        OverriddenDepositAmount?: number;
        OverriddenDepositWithoutCarryoutAmount?: number;
        PeriodicDiscountAmount?: number;
        TenderDiscountAmount?: number;
        PrepaymentAmountAppliedOnPickup?: number;
        PrepaymentAmountInvoiced?: number;
        PrepaymentAmountPaid?: number;
        QuotationExpiryDate?: Date;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        ReceiptEmail?: string;
        ReceiptId?: string;
        RequestedDeliveryDate?: Date;
        RequiredDepositAmount?: number;
        RequiredDepositWithoutCarryoutAmount?: number;
        ReturnTransactionHasLoyaltyPayment?: boolean;
        SalesId?: string;
        SalesPaymentDifference?: number;
        SalesLines?: Entities.SalesLine[];
        ShiftId?: number;
        ShiftTerminalId?: string;
        ShippingAddress?: Entities.Address;
        StaffId?: string;
        StatementCode?: string;
        StoreId?: string;
        SubtotalAmount?: number;
        SubtotalAmountWithoutTax?: number;
        SubtotalSalesAmount?: number;
        TaxAmount?: number;
        TaxAmountExclusive?: number;
        TaxAmountInclusive?: number;
        TaxLines?: Entities.TaxLine[];
        TaxOnCancellationCharge?: number;
        TaxOverrideCode?: string;
        TenderLines?: Entities.TenderLine[];
        RefundableTenderLines?: Entities.TenderLine[];
        TerminalId?: string;
        TotalAmount?: number;
        TotalSalesAmount?: number;
        TotalReturnAmount?: number;
        TotalCarryoutSalesAmount?: number;
        TotalCustomerOrderSalesAmount?: number;
        TotalDiscount?: number;
        TotalManualDiscountAmount?: number;
        TotalManualDiscountPercentage?: number;
        TransactionTypeValue?: number;
        TaxCalculationTypeValue?: number;
        SalesInvoiceAmount?: number;
        GiftCardActiveFrom?: Date;
        GiftCardBalance?: number;
        GiftCardExpireDate?: Date;
        GiftCardHistoryDetails?: string;
        GiftCardIssueAmount?: number;
        GiftCardIdMasked?: string;
        CommissionSalesGroup?: string;
        IsCommissionSalesGroupOverriddenByCustomer?: boolean;
        CommissionSalesGroupSetByCashier?: string;
        HasTaxCalculationTriggered?: boolean;
        HasChargeCalculationTriggered?: boolean;
        ShippingChargeAmount?: number;
        OtherChargeAmount?: number;
        FiscalTransactions?: Entities.FiscalTransaction[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Shift entity interface.
     */
    export interface Shift {
        ShiftId: number;
        TerminalId: string;
        StartingAmountTotal: number;
        FloatingEntryAmountTotal: number;
        AddToTenderAmountTotal: number;
        SafeDropTotal: number;
        BankDropTotal: number;
        RemoveTenderAmountTotal: number;
        DeclareTenderAmountTotal: number;
        OverShortTotal: number;
        TenderedTotal: number;
        ChangeTotal: number;
        IncomeAccountTotal: number;
        ExpenseAccountTotal: number;
        CashDrawer?: string;
        StoreRecordId?: number;
        StoreId?: string;
        StaffId?: string;
        CurrentStaffId?: string;
        StatusValue?: number;
        StartDateTime?: Date;
        CloseDateTime?: Date;
        ClosedAtTerminalId?: string;
        CurrentTerminalId?: string;
        SalesTotal?: number;
        StatusDateTime?: Date;
        ReturnsTotal?: number;
        PaidToAccountTotal?: number;
        TaxTotal?: number;
        ChargeTotal?: number;
        DiscountTotal?: number;
        RoundedAmountTotal?: number;
        CustomerCount?: number;
        SaleTransactionCount?: number;
        NoSaleTransactionCount?: number;
        VoidTransactionCount?: number;
        LogOnTransactionCount?: number;
        SuspendedTransactionCount?: number;
        TransactionCount?: number;
        ReceiptsCount?: number;
        ReturnsCount?: number;
        GoodsSoldQty?: number;
        ServicesSoldQty?: number;
        ReceiptCopiesCount?: number;
        ReceiptCopiesTotal?: number;
        PriceOverrideTotal?: number;
        SuspendedTotal?: number;
        SalesTotalIncludingTax?: number;
        SalesTotalExcludingTax?: number;
        SalesGrandTotal?: number;
        ReturnsGrandTotal?: number;
        TaxLines?: Entities.ShiftTaxLine[];
        TenderLines?: Entities.ShiftTenderLine[];
        AccountLines?: Entities.ShiftAccountLine[];
        IsShared?: boolean;
        StartingAmountRunningTotal?: number;
        GiftCardsTotal?: number;
        GiftCardCashOutTotal?: number;
        VoidedSalesTotal?: number;
        ShiftSalesTotal?: number;
        ShiftReturnsTotal?: number;
        HasPendingOfflineTransactions?: number;
        NumberOfUnreconciledLines?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * StockCountJournal entity interface.
     */
    export interface StockCountJournal {
        JournalId: string;
        RecordId?: string;
        Description?: string;
        InventLocationId?: string;
        DataAreaId?: string;
        StockCountTransactionLines?: Entities.StockCountJournalTransaction[];
        Worker?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnit entity interface.
     */
    export interface OrgUnit {
        OrgUnitNumber: string;
        RecordId: number;
        InventoryLocationId?: string;
        OMOperatingUnitNumber?: string;
        TaxGroup?: string;
        FunctionalityProfileId?: string;
        UseCustomerBasedTax?: boolean;
        UseCustomerBasedTaxExemption?: boolean;
        UseDestinationBasedTax?: boolean;
        Currency?: string;
        OrgUnitAddress?: Entities.Address;
        OrgUnitFullAddress?: string;
        OrgUnitName?: string;
        Latitude?: number;
        Longitude?: number;
        EmailReceiptProfileId?: string;
        ShippingWarehouseAddress?: Entities.Address;
        TaxRegistrations?: Entities.TaxRegistration[];
        EventNotificationProfileId?: string;
        Name?: string;
        DefaultCustomerAccount?: string;
        CategoryHierarchyId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Product entity interface.
     */
    export interface Product {
        RecordId: number;
        ProductName?: string;
        ProductNumber?: string;
        Description?: string;
        IsMasterProduct: boolean;
        IsKit: boolean;
        ItemId?: string;
        HasLinkedProducts: boolean;
        Rules: Entities.ProductRules;
        DefaultUnitOfMeasure?: string;
        Name?: string;
        Locale?: string;
        OfflineImage?: string;
        IsRemote?: boolean;
        ChangeTrackingInformation?: Entities.ProductChangeTrackingInformation;
        Image?: Entities.RichMediaLocations;
        UnitsOfMeasureSymbol?: string[];
        LinkedProducts?: Entities.LinkedProduct[];
        BasePrice?: number;
        Price?: number;
        AdjustedPrice?: number;
        RetailContext?: Entities.ProjectionDomain;
        PrimaryCategoryId?: number;
        CategoryIds?: number[];
        DisplayOrderInCategories?: Entities.DisplayOrderInCategory[];
        RelatedProducts?: Entities.RelatedProduct[];
        ProductsRelatedToThis?: Entities.RelatedProduct[];
        ProductSchema?: string[];
        ProductProperties?: Entities.ProductPropertyTranslation[];
        CompositionInformation?: Entities.ProductCompositionInformation;
        ParentKits?: Entities.KitComponent[];
        SearchName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductCatalog entity interface.
     */
    export interface ProductCatalog {
        RecordId: number;
        Name?: string;
        Description?: string;
        Language?: string;
        IsSnapshotEnabled: boolean;
        ValidFrom: Date;
        ValidTo: Date;
        CreatedOn: Date;
        ModifiedOn: Date;
        PublishedOn: Date;
        Images?: Entities.MediaLocation[];
        ChannelId?: number;
        DefaultImage?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommerceList entity interface.
     */
    export interface CommerceList {
        Id: number;
        Name?: string;
        CustomerId?: string;
        CustomerName?: string;
        IsFavorite?: boolean;
        IsRecurring?: boolean;
        IsPrivate?: boolean;
        IsCollaborative?: boolean;
        CreatedDateTime?: Date;
        DueDateTime?: Date;
        CommerceListTypeValue?: number;
        CommerceListLines?: Entities.CommerceListLine[];
        CommerceListContributors?: Entities.CommerceListContributor[];
        CommerceListInvitations?: Entities.CommerceListInvitation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductList entity interface.
     */
    export interface ProductList {
        Id: string;
        Name?: string;
        CustomerId?: string;
        CreatedDateTime?: Date;
        LastUpdated?: Date;
        DeletedDateTime?: Date;
        ProductListTypeValue?: number;
        DataAreaId?: string;
        ProductListLines?: Entities.ProductListLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Recommendation entity interface.
     */
    export interface Recommendation {
        Id: string;
        RecommendationTypeValue?: number;
        Title?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TransferOrder entity interface.
     */
    export interface TransferOrder {
        OrderId: string;
        RecordId?: string;
        Status?: string;
        Lines?: number;
        TotalItems?: number;
        OrderTypeValue?: number;
        InventLocationIdFrom?: string;
        InventLocationIdTo?: string;
        QuantityShipped?: number;
        QuantityReceived?: number;
        QuantityShipNow?: number;
        QuantityReceiveNow?: number;
        QuantityShipRemaining?: number;
        QuantityReceiveRemaining?: number;
        ShipDate?: Date;
        ReceiveDate?: Date;
        DeliveryModeId?: string;
        OrderLines?: Entities.TransferOrderLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PurchaseOrder entity interface.
     */
    export interface PurchaseOrder {
        OrderId: string;
        RecordId?: string;
        Status?: string;
        Lines?: number;
        TotalItems?: number;
        OrderTypeValue?: number;
        TotalReceived?: number;
        OrderLines?: Entities.PurchaseOrderLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PickingList entity interface.
     */
    export interface PickingList {
        OrderId: string;
        RecordId?: string;
        Status?: string;
        Lines?: number;
        TotalItems?: number;
        OrderTypeValue?: number;
        InventLocationId?: string;
        DeliveryDate?: Date;
        DeliveryMode?: string;
        TotalReceived?: number;
        OrderLines?: Entities.PickingListLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Warehouse entity interface.
     */
    export interface Warehouse {
        InventLocation: string;
        Name?: string;
        IsWMSEnabled: boolean;
        DefaultInventoryStatus?: string;
        DefaultReceiptLocation?: string;
        DefaultLocationId?: string;
        DefaultIssueLocation?: string;
        Address?: Entities.Address;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ScanResult entity interface.
     */
    export interface ScanResult {
        ScannedText: string;
        MaskTypeValue?: number;
        Barcode?: Entities.Barcode;
        Product?: Entities.SimpleProduct;
        LoyaltyCard?: Entities.LoyaltyCard;
        GiftCard?: Entities.GiftCard;
        ExtensionProperties?: Entities.CommerceProperty[];
        Customer?: Entities.Customer;
        
    }
    
    /**
     * SalesOrderContextualOperationsMap entity interface.
     */
    export interface SalesOrderContextualOperationsMap {
        Id: string;
        ApplicableOperationsValues?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        SalesOrder?: Entities.SalesOrder;
        
    }
    
    /**
     * InventoryInboundOutboundDocument entity interface.
     */
    export interface InventoryInboundOutboundDocument {
        WorkDocumentId: string;
        TerminalId?: string;
        CommitRequestId?: string;
        ReceiveDate?: Date;
        ShipDate?: Date;
        Sender?: string;
        Receiver?: string;
        SenderDetails?: string;
        ReceiverDetails?: string;
        DeliveryMode?: string;
        OperationTypeValue?: number;
        StatusValue?: number;
        ReceiptId?: string;
        Note?: string;
        OperationResultMessage?: string;
        DocumentId?: string;
        LongVersion?: number;
        SourceDocument?: Entities.InventoryInboundOutboundSourceDocument;
        SourceDocumentTypeValue?: number;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * BusinessPartner entity interface.
     */
    export interface BusinessPartner {
        BusinessPartnerId: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * BusinessPartnerUser entity interface.
     */
    export interface BusinessPartnerUser {
        Email: string;
        BusinessPartnerId?: string;
        FirstName?: string;
        LastName?: string;
        SpendingLimit?: number;
        LastOperationId?: string;
        StatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SuspendedCart entity interface.
     */
    export interface SuspendedCart {
        Id: string;
        ReceiptId?: string;
        ShiftId?: number;
        ShiftTerminalId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        Cart?: Entities.Cart;
        
    }
    
    /**
     * ExtensibleEnumeration entity interface.
     */
    export interface ExtensibleEnumeration {
        Name: string;
        Value: number;
        
    }
    
    /**
     * ExtensibleEnumeration_1OfT entity interface.
     */
    export interface ExtensibleEnumeration_1OfT extends ExtensibleEnumeration {
        
    }
    
    /**
     * ExtensibleTransactionType entity interface.
     */
    export interface ExtensibleTransactionType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ExtensibleSalesTransactionType entity interface.
     */
    export interface ExtensibleSalesTransactionType extends ExtensibleEnumeration {
        
    }
    
    /**
     * FulfillmentLineStatus entity interface.
     */
    export interface FulfillmentLineStatus extends ExtensibleEnumeration {
        
    }
    
    /**
     * FulfillmentLineDeliveryType entity interface.
     */
    export interface FulfillmentLineDeliveryType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ExtensibleAddressType entity interface.
     */
    export interface ExtensibleAddressType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ExtensibleLoyaltyRewardPointActivityEntryType entity interface.
     */
    export interface ExtensibleLoyaltyRewardPointActivityEntryType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ExtensibleAttributeDataType entity interface.
     */
    export interface ExtensibleAttributeDataType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ReleasedProductServiceType entity interface.
     */
    export interface ReleasedProductServiceType extends ExtensibleEnumeration {
        
    }
    
    /**
     * Address entity interface.
     */
    export interface Address {
        Name?: string;
        FullAddress?: string;
        RecordId?: number;
        Street?: string;
        StreetNumber?: string;
        County?: string;
        CountyName?: string;
        City?: string;
        DistrictName?: string;
        State?: string;
        StateName?: string;
        ZipCode?: string;
        ThreeLetterISORegionName?: string;
        Phone?: string;
        PhoneRecordId?: number;
        PhoneExt?: string;
        Email?: string;
        EmailContent?: string;
        EmailRecordId?: number;
        Url?: string;
        UrlRecordId?: number;
        TwoLetterISORegionName?: string;
        Deactivate?: boolean;
        AttentionTo?: string;
        BuildingCompliment?: string;
        Postbox?: string;
        TaxGroup?: string;
        AddressTypeValue?: number;
        IsPrimary?: boolean;
        IsPrivate?: boolean;
        PartyNumber?: string;
        IsAsyncAddress?: boolean;
        DirectoryPartyTableRecordId?: number;
        DirectoryPartyLocationRecordId?: number;
        DirectoryPartyLocationRoleRecordId?: number;
        LogisticsLocationId?: string;
        LogisticsLocationRecordId?: number;
        LogisticsLocationExtRecordId?: number;
        LogisticsLocationRoleRecordId?: number;
        PhoneLogisticsLocationRecordId?: number;
        PhoneLogisticsLocationId?: string;
        EmailLogisticsLocationRecordId?: number;
        EmailLogisticsLocationId?: string;
        UrlLogisticsLocationRecordId?: number;
        UrlLogisticsLocationId?: string;
        ExpireRecordId?: number;
        SortOrder?: number;
        RoleCount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerAffiliation entity interface.
     */
    export interface CustomerAffiliation {
        RecordId?: number;
        RetailAffiliationId?: number;
        Name?: string;
        Description?: string;
        HideInChannels?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerBalances entity interface.
     */
    export interface CustomerBalances {
        Balance: number;
        PendingBalance: number;
        CreditLimit: number;
        InvoiceAccountBalance: number;
        InvoiceAccountPendingBalance: number;
        InvoiceAccountCreditLimit: number;
        
    }
    
    /**
     * GlobalCustomer entity interface.
     */
    export interface GlobalCustomer {
        PartyNumber?: string;
        RecordId?: number;
        IsAsyncCustomer?: boolean;
        AccountNumber?: string;
        FullName?: string;
        FullAddress?: string;
        Phone?: string;
        Email?: string;
        CustomerTypeValue?: number;
        Images?: Entities.MediaLocation[];
        OfflineImage?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeValue entity interface.
     */
    export interface AttributeValue {
        Name?: string;
        KeyName?: string;
        UnitOfMeasureSymbol?: string;
        DataTypeValue?: number;
        BooleanValue?: boolean;
        DateTimeOffsetValue?: Date;
        FloatValue?: number;
        IntegerValue?: number;
        TextValue?: string;
        CurrencyValue?: number;
        CurrencyCode?: string;
        AttributeValueId?: number;
        RecordId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeValueBase entity interface.
     */
    export interface AttributeValueBase {
        Name?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Barcode entity interface.
     */
    export interface Barcode {
        BarcodeId?: string;
        BarcodePrice?: number;
        Quantity?: number;
        CustomerId?: string;
        EmployeeId?: string;
        SalespersonId?: string;
        EANLicenseId?: string;
        DataEntry?: string;
        DiscountCode?: string;
        GiftCardNumber?: string;
        LoyaltyCardNumber?: string;
        ItemBarcode?: Entities.ItemBarcode;
        EntryMethodTypeValue?: number;
        ItemType?: number;
        EnterDimensions?: boolean;
        ItemGroupId?: string;
        ItemDepartmentId?: string;
        ScaleItem?: boolean;
        ZeroPriceValid?: boolean;
        NegativeQuantity?: boolean;
        DiscountNotAllowed?: boolean;
        DateToBeBlocked?: Date;
        DateToBeActivated?: Date;
        CheckDigitValidated?: boolean;
        CouponId?: string;
        Message?: string;
        LineDiscountGroup?: string;
        MultilineDiscountGroup?: string;
        IncludedInTotalDiscount?: boolean;
        CostPrice?: number;
        BatchId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ItemBarcode entity interface.
     */
    export interface ItemBarcode {
        RecordId?: number;
        ItemId?: string;
        Description?: string;
        BarcodeSetupId?: string;
        ItemBarcodeValue?: string;
        InventoryDimensionId?: string;
        IsBlocked?: boolean;
        Display?: boolean;
        VariantId?: string;
        UnitId?: string;
        UseForInput?: boolean;
        UseForPrinting?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ButtonGrid entity interface.
     */
    export interface ButtonGrid {
        Id?: string;
        Name?: string;
        DefaultColor?: number;
        SpaceBetweenButtonsInPixels?: number;
        Buttons?: Entities.ButtonGridButton[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * GetButtonGridsByIdsCriteria entity interface.
     */
    export interface GetButtonGridsByIdsCriteria {
        ButtonGridIds?: string[];
        
    }
    
    /**
     * CartLine entity interface.
     */
    export interface CartLine {
        LineId?: string;
        TaxOverrideCode?: string;
        ItemId?: string;
        Barcode?: string;
        EntryMethodTypeValue?: number;
        Description?: string;
        InventoryDimensionId?: string;
        Comment?: string;
        ProductId?: number;
        WarehouseId?: string;
        Quantity?: number;
        Price?: number;
        ExtendedPrice?: number;
        TaxAmount?: number;
        ItemTaxGroupId?: string;
        TotalAmount?: number;
        NetAmountWithoutTax?: number;
        NetPrice?: number;
        DiscountAmountWithoutTax?: number;
        DiscountAmount?: number;
        LineDiscount?: number;
        LinePercentageDiscount?: number;
        LineManualDiscountPercentage?: number;
        LineManualDiscountAmount?: number;
        UnitOfMeasureSymbol?: string;
        ShippingAddress?: Entities.Address;
        DeliveryMode?: string;
        DeliveryModeChargeAmount?: number;
        RequestedDeliveryDate?: Date;
        IsWarrantyLine?: boolean;
        WarrantableTransactionId?: string;
        WarrantableSalesId?: string;
        WarrantableLineNumber?: number;
        WarrantableSerialNumber?: string;
        WarrantiedId?: string;
        ReturnTransactionId?: string;
        ReturnLineNumber?: number;
        ReturnInventTransId?: string;
        IsVoided?: boolean;
        IsTaxOverideCodeTaxExempt?: boolean;
        IsGiftCardLine?: boolean;
        IsPriceKeyedIn?: boolean;
        GiftCardId?: string;
        GiftCardCurrencyCode?: string;
        GiftCardOperationValue?: number;
        GiftCardTypeValue?: number;
        SalesStatusValue?: number;
        QuantityOrdered?: number;
        QuantityInvoiced?: number;
        QuantityCanceled?: number;
        FulfillmentStoreId?: string;
        SerialNumber?: string;
        ElectronicDeliveryEmail?: string;
        ElectronicDeliveryEmailContent?: string;
        IsPriceOverridden?: boolean;
        OriginalPrice?: number;
        IsInvoiceLine?: boolean;
        InvoiceId?: string;
        InvoiceAmount?: number;
        GiftCardBalance?: number;
        LineVersion?: number;
        PromotionLines?: string[];
        DiscountLines?: Entities.DiscountLine[];
        RelatedDiscountedLineIds?: string[];
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        ChargeLines?: Entities.ChargeLine[];
        TaxRatePercent?: number;
        IsCustomerAccountDeposit?: boolean;
        LinkedParentLineId?: string;
        QuantityReturnable?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        LineNumber?: number;
        CommissionSalesGroup?: string;
        TrackingId?: string;
        StaffId?: string;
        QuantityRemained?: number;
        QuantityShipped?: number;
        CatalogId?: number;
        AttributeValues?: Entities.AttributeValueBase[];
        ThirdPartyGiftCardInfo?: Entities.ThirdPartyGiftCardInfo;
        BarcodeEmbeddedPrice?: number;
        PriceInBarcode?: boolean;
        InvoiceTypeValue?: number;
        InvoicedSalesId?: string;
        
    }
    
    /**
     * ThirdPartyGiftCardInfo entity interface.
     */
    export interface ThirdPartyGiftCardInfo {
        Amount?: number;
        Authorization?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CardTypeInfo entity interface.
     */
    export interface CardTypeInfo {
        RecordId?: number;
        TypeId?: string;
        Name?: string;
        PaymentMethodId?: string;
        CardTypeValue?: number;
        Issuer?: string;
        NumberFrom?: string;
        NumberTo?: string;
        CashBackLimit?: number;
        AllowManualInput?: boolean;
        CheckModulus?: boolean;
        HasTenderDiscount?: boolean;
        IsPinRequired?: boolean;
        IsExpirationDateRequired?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CashDeclaration entity interface.
     */
    export interface CashDeclaration {
        RecordId?: number;
        Currency?: string;
        Amount?: number;
        CashTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * IncomeExpenseAccount entity interface.
     */
    export interface IncomeExpenseAccount {
        Amount?: number;
        AccountNumber?: string;
        AccountName?: string;
        AccountNameAlias?: string;
        AccountTypeValue?: number;
        Quantity?: number;
        Message1Line?: string;
        Message2Line?: string;
        SlipText1Line?: string;
        SlipText2Line?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * IncomeExpenseLine entity interface.
     */
    export interface IncomeExpenseLine {
        Amount?: number;
        IncomeExpenseAccount?: string;
        StoreNumber?: string;
        AccountTypeValue?: number;
        Terminal?: string;
        Shift?: string;
        TransactionStatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CartTenderLine entity interface.
     */
    export interface CartTenderLine {
        PaymentCard?: Entities.PaymentCard;
        TokenizedPaymentCard?: Entities.TokenizedPaymentCard;
        IsLinkedRefund?: boolean;
        LinkedPaymentStore?: string;
        LinkedPaymentTerminalId?: string;
        LinkedPaymentTransactionId?: string;
        LinkedPaymentLineNumber?: number;
        LinkedPaymentCurrency?: string;
        TenderLineId?: string;
        Amount?: number;
        CashBackAmount?: number;
        AmountInTenderedCurrency?: number;
        AmountInCompanyCurrency?: number;
        Currency?: string;
        ExchangeRate?: number;
        CompanyCurrencyExchangeRate?: number;
        TenderTypeId?: string;
        SignatureData?: string;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        LineNumber?: number;
        GiftCardId?: string;
        GiftCardPin?: string;
        GiftCardExpirationYear?: number;
        GiftCardExpirationMonth?: number;
        CreditMemoId?: string;
        CustomerId?: string;
        LoyaltyCardId?: string;
        CardTypeId?: string;
        IsChangeLine?: boolean;
        IsHistorical?: boolean;
        IsVoidable?: boolean;
        StatusValue?: number;
        VoidStatusValue?: number;
        AuthorizedAmount?: number;
        PaymentRefRecId?: number;
        CardPaymentAccountId?: string;
        ProcessingTypeValue?: number;
        CardProcessorStatusValue?: number;
        LinkedPaymentRefRecId?: number;
        IsPolicyBypassed?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChargeLine entity interface.
     */
    export interface ChargeLine {
        ChargeLineId?: string;
        ChargeCode?: string;
        CurrencyCode?: string;
        ModuleTypeValue?: number;
        IsHeaderChargeProrated?: boolean;
        ChargeTypeValue?: number;
        ChargeMethodValue?: number;
        CalculatedAmount?: number;
        Value?: number;
        Description?: string;
        TransactionId?: string;
        MarkupAutoLineRecordId?: number;
        MarkupAutoTableRecId?: number;
        SaleLineNumber?: number;
        FromAmount?: number;
        ToAmount?: number;
        Keep?: number;
        AmountRefunded?: number;
        ChargeLineOverrides?: Entities.ChargeLineOverride[];
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        IsRefundable?: boolean;
        IsShipping?: boolean;
        IsOverridden?: boolean;
        ItemId?: string;
        Quantity?: number;
        Price?: number;
        ItemTaxGroupId?: string;
        SalesTaxGroupId?: string;
        OriginalSalesTaxGroupId?: string;
        OriginalItemTaxGroupId?: string;
        TaxAmount?: number;
        SalesOrderUnitOfMeasure?: string;
        NetAmount?: number;
        NetAmountPerUnit?: number;
        GrossAmount?: number;
        TaxLines?: Entities.TaxLine[];
        TaxMeasures?: Entities.TaxMeasure[];
        TaxAmountExemptInclusive?: number;
        TaxAmountInclusive?: number;
        TaxAmountExclusive?: number;
        NetAmountWithAllInclusiveTax?: number;
        BeginDateTime?: Date;
        EndDateTime?: Date;
        TaxRatePercent?: number;
        IsReturnByReceipt?: boolean;
        ReturnLineTaxAmount?: number;
        ReturnTaxLines?: Entities.TaxLine[];
        TaxExemptPriceInclusiveReductionAmount?: number;
        TaxExemptPriceInclusiveOriginalPrice?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CityInfo entity interface.
     */
    export interface CityInfo {
        Name?: string;
        Description?: string;
        CountryRegionId?: string;
        StateId?: string;
        CountyId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommissionSalesGroup entity interface.
     */
    export interface CommissionSalesGroup {
        GroupId?: string;
        Name?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ContactInformation entity interface.
     */
    export interface ContactInformation {
        Value?: string;
        ContactInformationTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeCategory entity interface.
     */
    export interface AttributeCategory {
        Value?: Entities.CommercePropertyValue;
        RecordId?: number;
        Name?: string;
        KeyName?: string;
        DataTypeValue?: number;
        Attribute?: number;
        NameTranslations?: Entities.TextValueTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeProduct entity interface.
     */
    export interface AttributeProduct {
        MetadataFlags?: Entities.ProductAttributeMetadataFlags;
        IsDimension?: boolean;
        RecordId?: number;
        Name?: string;
        KeyName?: string;
        DataTypeValue?: number;
        Attribute?: number;
        NameTranslations?: Entities.TextValueTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductComparisonEntry entity interface.
     */
    export interface ProductComparisonEntry {
        ProductId: number;
        AttributeValue?: Entities.AttributeValue;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductComparisonLine entity interface.
     */
    export interface ProductComparisonLine {
        AttributeRecordId: number;
        AttributeName?: string;
        ProductAttributeComparisonEntries?: Entities.ProductComparisonEntry[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerSearchField entity interface.
     */
    export interface CustomerSearchField {
        IsShortcut?: boolean;
        DisplayName?: string;
        CanBeRefined?: boolean;
        SearchField?: Entities.CustomerSearchFieldType;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerSearchByFieldCriteria entity interface.
     */
    export interface CustomerSearchByFieldCriteria {
        Criteria?: Entities.CustomerSearchByFieldCriterion[];
        DataLevelValue?: number;
        
    }
    
    /**
     * CustomerSearchByFieldCriterion entity interface.
     */
    export interface CustomerSearchByFieldCriterion {
        SearchTerm?: string;
        SearchField?: Entities.CustomerSearchFieldType;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerSearchFieldType entity interface.
     */
    export interface CustomerSearchFieldType extends ExtensibleEnumeration {
        
    }
    
    /**
     * OrderShipments entity interface.
     */
    export interface OrderShipments {
        SalesId?: string;
        ChannelId?: number;
        ChannelReferenceId?: string;
        TransactionId?: string;
        CreatedDateTime?: Date;
        StatusValue?: number;
        CurrencyCode?: string;
        CustomerId?: string;
        DeliveryMode?: string;
        GrossAmount?: number;
        InventoryLocationId?: string;
        ReceiptId?: string;
        RequestedDeliveryDate?: Date;
        TotalAmount?: number;
        TaxAmount?: number;
        SalesLines?: Entities.SalesLine[];
        Shipments?: Entities.Shipment[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Shipment entity interface.
     */
    export interface Shipment {
        SalesId?: string;
        ShipmentId?: string;
        DeliveryAddress?: Entities.Address;
        ShipDate?: Date;
        DeliveryMode?: string;
        TermsOfDelivery?: string;
        WeightUnit?: string;
        TrackingNumber?: string;
        TrackingUrl?: string;
        LatestCarrierTrackingInfo?: Entities.TrackingInfo;
        CarrierId?: string;
        CarrierName?: string;
        ShippingWeight?: number;
        ShipmentLines?: Entities.ShipmentLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShipmentLine entity interface.
     */
    export interface ShipmentLine {
        ShipmentLineId?: string;
        ItemId?: string;
        Description?: string;
        InventDimId?: string;
        OrderedQuantity?: number;
        DeliveredQuantity?: number;
        RemainingQuantity?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Transaction entity interface.
     */
    export interface Transaction {
        Id?: string;
        StoreId?: string;
        TerminalId?: string;
        IsCreatedOffline?: boolean;
        StaffId?: string;
        ShiftId?: string;
        ShiftTerminalId?: string;
        Description?: string;
        ReceiptId?: string;
        GrossAmount?: number;
        TotalAmount?: number;
        CreatedDateTime?: Date;
        TransactionTypeValue?: number;
        TransactionStatusValue?: number;
        BeginDateTime?: Date;
        GiftCardActiveFrom?: Date;
        GiftCardBalance?: number;
        GiftCardExpireDate?: Date;
        GiftCardHistoryDetails?: string;
        GiftCardIssueAmount?: number;
        GiftCardIdMasked?: string;
        FromSafe?: string;
        ToSafe?: string;
        FromShiftTerminalId?: string;
        ToShiftTerminalId?: string;
        FromShiftId?: string;
        TransactionSourceContextTypeValue?: number;
        TransactionDestinationContextTypeValue?: number;
        ToShiftId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShiftReconciliationLine entity interface.
     */
    export interface ShiftReconciliationLine extends Transaction {
        GroupId?: number;
        GroupDescription?: string;
        ShiftGroupLinesCount?: number;
        ShiftGroupLinesClosedCount?: number;
        
    }
    
    /**
     * ShiftReconciliationLineRetrievalCriteria entity interface.
     */
    export interface ShiftReconciliationLineRetrievalCriteria {
        TransactionTypeValues?: number[];
        ShiftReconciliationLineStatusValue?: number;
        Shifts?: Entities.ShiftKey[];
        DestinationShift?: Entities.ShiftKey;
        SourceShift?: Entities.ShiftKey;
        SourceSafe?: string;
        DestinationSafe?: string;
        TransactionSourceContextTypeValue?: number;
        TransactionDestinationContextTypeValue?: number;
        
    }
    
    /**
     * SearchConfiguration entity interface.
     */
    export interface SearchConfiguration {
        ProductSortColumns?: Entities.SortColumn[];
        ProductSearchServiceTypeValue?: number;
        
    }
    
    /**
     * CustomerTimelineItem entity interface.
     */
    export interface CustomerTimelineItem {
        CustomerId?: string;
        Description?: string;
        Id?: string;
        EntityType?: string;
        TypeId?: string;
        StaffId?: string;
        StartDateTime?: Date;
        Title?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeDefinition entity interface.
     */
    export interface AttributeDefinition {
        RecordId: number;
        Name?: string;
        AttributeTypeName?: string;
        ExtDataType?: Entities.ExtensibleAttributeDataType;
        DataTypeValue?: number;
        IsHidden?: boolean;
        IsMandatory?: boolean;
        IsMultiValue?: boolean;
        IsEnumeration?: boolean;
        TranslationDetails?: Entities.AttributeTranslationDetails[];
        EnumerationDetails?: Entities.AttributeEnumeration[];
        DefaultValue?: Entities.CommercePropertyValue;
        UpperBound?: Entities.CommercePropertyValue;
        LowerBound?: Entities.CommercePropertyValue;
        DisplayOrder?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeTranslationDetails entity interface.
     */
    export interface AttributeTranslationDetails {
        AttributeRecordId: number;
        LanguageId?: string;
        FriendlyName?: string;
        Description?: string;
        HelpText?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeEnumeration entity interface.
     */
    export interface AttributeEnumeration {
        OrdinalNumber?: number;
        EnumerationValue?: string;
        AttributeEnumerationTranslations?: Entities.AttributeEnumerationTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeEnumerationTranslation entity interface.
     */
    export interface AttributeEnumerationTranslation {
        LanguageId?: string;
        EnumerationTranslationValue?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeDefinitionCriteria entity interface.
     */
    export interface AttributeDefinitionCriteria {
        AttributeGroupIdentifier?: number;
        Languages?: string[];
        
    }
    
    /**
     * AttributeGroupDefinition entity interface.
     */
    export interface AttributeGroupDefinition {
        RecordId: number;
        Name?: string;
        TranslationDetails?: Entities.AttributeGroupTranslationDetails[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeGroupTranslationDetails entity interface.
     */
    export interface AttributeGroupTranslationDetails {
        AttributeGroupRecordId: number;
        LanguageId?: string;
        FriendlyName?: string;
        Description?: string;
        HelpText?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttributeGroupDefinitionCriteria entity interface.
     */
    export interface AttributeGroupDefinitionCriteria {
        AttributeGroupIdentifiers?: number[];
        Languages?: string[];
        
    }
    
    /**
     * CountyInfo entity interface.
     */
    export interface CountyInfo {
        Name?: string;
        CountyId?: string;
        CountryRegionId?: string;
        StateId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerGroup entity interface.
     */
    export interface CustomerGroup {
        CustomerGroupNumber?: string;
        CustomerGroupName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DiscountLine entity interface.
     */
    export interface DiscountLine {
        SaleLineNumber?: number;
        OfferId?: string;
        OfferName?: string;
        Amount?: number;
        DiscountCost?: number;
        EffectiveAmount?: number;
        SavedEffectiveAmount?: number;
        Percentage?: number;
        DealPrice?: number;
        DiscountLineTypeValue?: number;
        ManualDiscountTypeValue?: number;
        CustomerDiscountTypeValue?: number;
        PeriodicDiscountTypeValue?: number;
        DiscountApplicationGroup?: string;
        ConcurrencyModeValue?: number;
        IsCompoundable?: boolean;
        DiscountCode?: string;
        PricingPriorityNumber?: number;
        IsDiscountCodeRequired?: boolean;
        ThresholdAmountRequired?: number;
        BundleId?: number;
        ValidFrom?: Date;
        ValidTo?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * EmployeePermissions entity interface.
     */
    export interface EmployeePermissions {
        PriceOverrideRestrictionValue?: number;
        AllowPriceOverride?: number;
        MaximumDiscountPercentage?: number;
        MaximumLineDiscountAmount?: number;
        MaximumLineReturnAmount?: number;
        MaximumTotalDiscountAmount?: number;
        MaximumTotalDiscountPercentage?: number;
        MaxTotalReturnAmount?: number;
        StaffId?: string;
        Roles?: string[];
        AllowUseSharedShift?: boolean;
        AllowManageSharedShift?: boolean;
        AllowTaskGuides?: boolean;
        AllowSaleOutsideAssortment?: boolean;
        AllowPrintingReceiptCopy?: string;
        AllowSkipFiscalRegistration?: boolean;
        AllowSkipRegistrationOrMarkAsRegistered?: boolean;
        AllowCreateTransferOrder?: boolean;
        AllowAcceptOrder?: boolean;
        AllowTaskManagement?: boolean;
        AllowRejectOrder?: boolean;
        AllowMassActivation?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommerceProperty entity interface.
     */
    export interface CommerceProperty {
        Key?: string;
        Value?: Entities.CommercePropertyValue;
        
    }
    
    /**
     * CommercePropertyValue entity interface.
     */
    export interface CommercePropertyValue {
        BooleanValue?: boolean;
        ByteValue?: number;
        DateTimeOffsetValue?: Date;
        DecimalValue?: number;
        IntegerValue?: number;
        LongValue?: number;
        StringValue?: string;
        
    }
    
    /**
     * CountryRegionInfo entity interface.
     */
    export interface CountryRegionInfo {
        CountryRegionId?: string;
        ShortName?: string;
        LongName?: string;
        ISOCode?: string;
        TimeZone?: number;
        LanguageId?: string;
        AddressFormatLines?: Entities.AddressFormattingInfo[];
        AddressFormatId?: string;
        AddressFormatName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CreditMemo entity interface.
     */
    export interface CreditMemo {
        Id?: string;
        Balance?: number;
        CurrencyCode?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Currency entity interface.
     */
    export interface Currency {
        CurrencyCode?: string;
        CurrencySymbol?: string;
        RoundOffPrice?: number;
        RoundOffSales?: number;
        RoundOffTypePrice?: number;
        RoundOffTypeSales?: number;
        NumberOfDecimals?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CurrencyAmount entity interface.
     */
    export interface CurrencyAmount {
        CurrencyCode?: string;
        CurrencySymbol?: string;
        ConvertedAmount?: number;
        RoundedConvertedAmount?: number;
        ExchangeRate?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * EnvironmentConfiguration entity interface.
     */
    export interface EnvironmentConfiguration {
        EnvironmentId?: string;
        EnvironmentName?: string;
        TenantId?: string;
        ClientAppInsightsInstrumentationKey?: string;
        HardwareStationAppInsightsInstrumentationKey?: string;
        WindowsPhonePosAppInsightsInstrumentationKey?: string;
        BaseVersion?: string;
        ScaleUnit?: Entities.ScaleUnitConfiguration;
        AADAuthority?: string;
        
    }
    
    /**
     * DeviceConfiguration entity interface.
     */
    export interface DeviceConfiguration {
        UseInMemoryDeviceDataStorage?: boolean;
        AllowItemsAggregation?: boolean;
        AggregateItemsForPrinting?: boolean;
        AggregatePayments?: boolean;
        AlwaysExpandTransactionScreenLineDetails?: boolean;
        AuditEnabled?: boolean;
        DiscountAtTotal?: string;
        ProductDiscount?: string;
        ManuallyCalculateComplexDiscounts?: boolean;
        DisplaySecondaryTotalCurrency?: boolean;
        EndOfTransaction?: string;
        ItemNotOnFile?: string;
        LimitStaffListToStore?: boolean;
        LineItemTaxChange?: string;
        MarkUp?: string;
        MaximumPrice?: number;
        MaximumQuantity?: number;
        MinimumPasswordLength?: number;
        MustKeyInPriceIfZero?: boolean;
        NfcEContingencyModeEnabled?: string;
        NfcEVoided?: string;
        FunctionalityProfileDescription?: string;
        OverridePrice?: string;
        PrintVoidTransactionReceipts?: boolean;
        PrintReceiptsOnCardDecline?: boolean;
        PrintXZReportsOnTerminal?: boolean;
        PrintTenderDetailsOnXReport?: boolean;
        ProfileId?: string;
        RefundSale?: string;
        ReturnProduct?: string;
        SalesPerson?: string;
        SecondaryTotalCurrency?: string;
        SelectHardwareStationOnTendering?: boolean;
        SerialNumber?: string;
        ShowStaffListAtLogOn?: boolean;
        StaffBarcodeLogOn?: boolean;
        StaffBarcodeLogOnRequiresPassword?: boolean;
        StaffCardLogOn?: boolean;
        StaffCardLogOnRequiresPassword?: boolean;
        StartOfTransaction?: string;
        EnableTimeRegistration?: boolean;
        TenderDeclaration?: string;
        TransactionTaxChange?: string;
        VoidItem?: string;
        VoidPayment?: string;
        SalesModeDefaultsAsCustomerOrder?: boolean;
        CreateOfflineCustomerOrders?: boolean;
        CreateAsyncCustomers?: boolean;
        EnableAxCustomerSearch?: boolean;
        VoidTransaction?: string;
        CultureName?: string;
        SystemLegalTermsUrl?: string;
        SystemPrivacyStatementUrl?: string;
        HideTrainingMode?: boolean;
        StorePhone?: string;
        StatementMethod?: string;
        StoreNumber?: string;
        ChannelId?: number;
        StoreTaxGroup?: string;
        TaxIdNumber?: string;
        TaxOverrideGroup?: number;
        TenderDeclarationCalculation?: number;
        UseCustomerBasedTax?: boolean;
        UseDestinationBasedTax?: boolean;
        AutoLogOffTimeoutInMinutes?: number;
        AutoExitMethodValue?: number;
        CustomerDisplayText1?: string;
        CustomerDisplayText2?: string;
        EFTStoreId?: number;
        EFTTerminalId?: string;
        ExitAfterEachTransaction?: boolean;
        HardwareProfile?: string;
        Placement?: string;
        TerminalDescription?: string;
        OpenDrawer?: string;
        OpenDrawerAtLogOnLogOff?: boolean;
        PrintTaxRefundChecks?: boolean;
        StandAlone?: boolean;
        TerminalId?: string;
        TerminalStatement?: boolean;
        VisualProfile?: string;
        Currency?: string;
        InventLocationId?: string;
        IncludeKitComponents?: boolean;
        AccentColor?: number;
        HeaderColor?: number;
        Theme?: string;
        FontScheme?: number;
        ShowAppBarLabel?: boolean;
        LogOnBackgroundPictureAsBase64?: string;
        LogOnBackgroundPicturePortraitAsBase64?: string;
        BackgroundPictureAsBase64?: string;
        LogonBackgroundPictureId?: number;
        LogonBackgroundPictureIdCompact?: number;
        LogonBackgroundPictureIdPortrait?: number;
        LogonBackgroundPictureIdCompactPortrait?: number;
        BackgroundPictureId?: number;
        RequireAmountDeclaration?: boolean;
        DecimalNotRequiredForMinorCurrencyUnit?: boolean;
        MaxTransactionSearchResults?: number;
        OfflineProfileId?: number;
        NewOfflineDatabaseCheckInterval?: number;
        OfflineTransactionUploadInterval?: number;
        ReconnectToOnlineInterval?: number;
        SwitchToOfflineTimeout?: number;
        RetentionDays?: number;
        HardwareConfigurations?: Entities.HardwareConfigurations;
        CreateRecording?: boolean;
        PlaybackRecording?: boolean;
        ShouldUseDefaultCommisionSalesGroup?: boolean;
        AskForSalesRepresentative?: number;
        IsSalesRepRequired?: boolean;
        ProhibitMixingSalesAndReturns?: boolean;
        ApplyDiscountsToPriceKeyedIn?: boolean;
        ApplyDiscountsToPriceOverrides?: boolean;
        IsProductSuggestionsEnabled?: boolean;
        ProductSearchType?: string;
        TerminalRecId?: number;
        DeviceRecId?: number;
        DenominationsToDisplayValue?: number;
        PromptOnSeamlessOffline?: boolean;
        RetryCountToOffline?: number;
        EnableAdvancedOfflineSwitching?: boolean;
        SystemHealthCheckInterval?: number;
        RejectOrderFulfillment?: string;
        ManuallyCalculateTaxes?: boolean;
        EmployeeLogonTypeValue?: number;
        StartAmountCalculation?: number;
        BankDropCalculation?: number;
        GenerateLoyaltyCardNumber?: boolean;
        FiscalRegistrationProcessId?: string;
        IncludeSalesOrderInvoices?: boolean;
        IncludeFreeTextInvoices?: boolean;
        IncludeProjectInvoices?: boolean;
        IncludeCreditNoteInvoices?: boolean;
        DisplayTaxExemptInLineDetails?: boolean;
        TaxExemptReceiptIndicator?: string;
        ManuallyCalculateCharges?: boolean;
        ChargeOverrideReasonCode?: string;
        ShiftReconcilation?: string;
        CustomerAccountFloorLimit?: number;
        VoidSuspendedTransactionsOnCloseShift?: boolean;
        ShowDateTime?: boolean;
        UseAdvancedCashManagement?: boolean;
        DefaultCustomerSearchModeValue?: number;
        AllowManualOfflineBeforeSignIn?: boolean;
        UseFinancialReconciliationInStore?: boolean;
        RequirePaymentForFulfillmentValue?: number;
        CardNotPresentProcessingConfigurationValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * VisualProfile entity interface.
     */
    export interface VisualProfile {
        ChannelId?: number;
        TerminalId?: string;
        AccentColor?: number;
        HeaderColor?: number;
        Theme?: string;
        FontSchemeTypeValue?: number;
        IsAppBarLabelVisible?: boolean;
        IsDateTimeVisible?: boolean;
        LogOnLayoutTypeValue?: number;
        LogOnKeyboardTypeValue?: number;
        LogonBackgroundPictureId?: number;
        CompactLogonBackgroundPictureId?: number;
        PortraitLogonBackgroundPictureId?: number;
        CompactPortraitLogonBackgroundPictureId?: number;
        BackgroundPictureId?: number;
        LogOnLogoPictureId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Device entity interface.
     */
    export interface Device {
        ChannelId: number;
        RecordId?: number;
        DeviceNumber?: string;
        DeviceId?: string;
        Description?: string;
        DeviceType?: number;
        TerminalRecordId?: number;
        TerminalId?: string;
        ChannelName?: string;
        UseInMemoryDeviceDataStorage?: boolean;
        AllowMassActivation?: boolean;
        TokenIssueTime?: Date;
        ActivationStatusValue?: number;
        Token?: string;
        CountryRegionIsoCode?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DiscountCode entity interface.
     */
    export interface DiscountCode {
        RecordId: number;
        Barcode?: string;
        Code?: string;
        ConcurrencyMode?: number;
        Description?: string;
        Disclaimer?: string;
        IsDiscountCodeRequired?: boolean;
        Name?: string;
        OfferId?: string;
        IsEnabled?: boolean;
        ValidFrom?: Date;
        ValidTo?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DistrictInfo entity interface.
     */
    export interface DistrictInfo {
        Name?: string;
        Description?: string;
        CountryRegionId?: string;
        StateId?: string;
        CountyId?: string;
        CityName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareProfile entity interface.
     */
    export interface HardwareProfile {
        RecordId?: number;
        LineDisplayDelayForLinkedItems?: number;
        LineDisplayBalanceText?: string;
        LineDisplayBinaryConversion?: boolean;
        LineDisplayCharacterSet?: number;
        LineDisplayClosedLine1?: string;
        LineDisplayClosedLine2?: string;
        LineDisplayDeviceDescription?: string;
        LineDisplayDeviceTypeValue?: number;
        LineDisplayDeviceName?: string;
        LineDisplayDisplayLinkedItem?: boolean;
        LineDisplayDisplayTerminalClosed?: boolean;
        LineDisplayTotalText?: string;
        DualDisplayActive?: boolean;
        DualDisplayWebBrowserUrl?: string;
        DualDisplayImageRotatorInterval?: number;
        DualDisplayImageRotatorPath?: string;
        DualDisplayReceiptWidthPercentage?: number;
        DualDisplayDisplayType?: string;
        EftTypeId?: number;
        EftCompanyId?: string;
        EftConfiguration?: number;
        EftPaymentConnectorName?: string;
        EftData?: string;
        EftDescription?: string;
        EftMerchantId?: string;
        EftPassword?: string;
        EftServerName?: string;
        EftServerPort?: string;
        EftUserId?: string;
        EftTestMode?: boolean;
        MsrEndTrack1?: string;
        MsrEndTrack2?: string;
        FiscalPrinterManagementReportPAFIdentification?: string;
        FiscalPrinterManagementReportConfigParameter?: string;
        FiscalPrinterManagementReportTenderType?: string;
        FiscalPrinterManagementReportGiftCard?: string;
        FiscalRegisterDeviceTypeValue?: number;
        FiscalRegisterConfiguration?: string;
        FiscalRegisterDeviceDescription?: string;
        FiscalRegisterDeviceName?: string;
        KeyboardMappingId?: string;
        KeyLockDeviceTypeValue?: number;
        KeyLockDeviceDescription?: string;
        KeyLockDeviceName?: string;
        MsrDeviceTypeValue?: number;
        MsrDeviceDescription?: string;
        MsrDeviceName?: string;
        MsrMake?: string;
        MsrModel?: string;
        MsrSeparator?: string;
        MsrStartTrack?: string;
        PinPadDeviceTypeValue?: number;
        PinPadDeviceName?: string;
        PinPadMake?: string;
        PinPadModel?: string;
        PinPadDeviceDescription?: string;
        ProfileDescription?: string;
        ProfileId?: string;
        RFIDDeviceTypeValue?: number;
        RFIDDeviceName?: string;
        RFIDDeviceDescription?: string;
        ScaleDeviceTypeValue?: number;
        ScaleDeviceName?: string;
        ScaleDeviceDescription?: string;
        ScaleManualInputAllowed?: boolean;
        ScaleTimeoutInSeconds?: number;
        SignatureCaptureDeviceTypeValue?: number;
        SignatureCaptureDeviceName?: string;
        SignatureCaptureMake?: string;
        SignatureCaptureModel?: string;
        SignatureCaptureDeviceDescription?: string;
        SignatureCaptureFormName?: string;
        Printers?: Entities.HardwareProfilePrinter[];
        Scanners?: Entities.HardwareProfileScanner[];
        FiscalIntegrationTechnicalProfiles?: Entities.FiscalIntegrationTechnicalProfile[];
        CashDrawers?: Entities.HardwareProfileCashDrawer[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SupportedLanguage entity interface.
     */
    export interface SupportedLanguage {
        LanguageId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PaymentCard entity interface.
     */
    export interface PaymentCard {
        UseShippingAddress?: boolean;
        CardNumber?: string;
        CCID?: string;
        Track1?: string;
        Track2?: string;
        Track3?: string;
        VoiceAuthorizationCode?: string;
        EncryptedPin?: string;
        AdditionalSecurityData?: string;
        IsSwipe?: boolean;
        Phone?: string;
        Country?: string;
        House?: string;
        Address1?: string;
        Address2?: string;
        City?: string;
        State?: string;
        Zip?: string;
        NameOnCard?: string;
        CardTypeId?: string;
        ExpirationMonth?: number;
        ExpirationYear?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CardPaymentAcceptSettings entity interface.
     */
    export interface CardPaymentAcceptSettings {
        HostPageOrigin?: string;
        AdaptorPath?: string;
        CardTokenizationEnabled?: boolean;
        CardPaymentEnabled?: boolean;
        PaymentAmount?: number;
        HideBillingAddress?: boolean;
        
    }
    
    /**
     * CardPaymentAcceptPoint entity interface.
     */
    export interface CardPaymentAcceptPoint {
        AcceptPageUrl?: string;
        AcceptPageSubmitUrl?: string;
        MessageOrigin?: string;
        AcceptPageContent?: string;
        
    }
    
    /**
     * CardPaymentAcceptResult entity interface.
     */
    export interface CardPaymentAcceptResult {
        TenderLine?: Entities.TenderLine;
        TokenizedPaymentCard?: Entities.TokenizedPaymentCard;
        PaymentSdkErrors?: Entities.PaymentError[];
        AdditionalContext?: string;
        
    }
    
    /**
     * ReasonCodeLine entity interface.
     */
    export interface ReasonCodeLine {
        LineId?: string;
        Amount?: number;
        Information?: string;
        InformationAmount?: number;
        InputTypeValue?: number;
        ItemTender?: string;
        LineNumber?: number;
        LineTypeValue?: number;
        ParentLineId?: string;
        ReasonCodeId?: string;
        StatementCode?: string;
        SubReasonCodeId?: string;
        SourceCode?: string;
        SourceCode2?: string;
        SourceCode3?: string;
        TransactionId?: string;
        CreatedDateTime?: Date;
        FiscalTransactionParentGuid?: string;
        IsChanged?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReasonSubCode entity interface.
     */
    export interface ReasonSubCode {
        TriggerCode?: string;
        AmountPercent: number;
        ReasonCodeId?: string;
        SubCodeId?: string;
        Description?: string;
        TriggerFunctionTypeValue?: number;
        ProductId?: number;
        PriceTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Receipt entity interface.
     */
    export interface Receipt {
        TransactionId?: string;
        Header?: string;
        Body?: string;
        Footer?: string;
        Width?: number;
        ReceiptId?: string;
        LayoutId?: string;
        ReceiptTitle?: string;
        ReceiptTypeValue?: number;
        ReceiptTypeStrValue?: string;
        Printers?: Entities.Printer[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReceiptMask entity interface.
     */
    export interface ReceiptMask {
        FunctionalityProfileId?: string;
        IsIndependent: boolean;
        ReceiptTransactionTypeValue: number;
        RecordId: number;
        Mask?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SalesLine entity interface.
     */
    export interface SalesLine {
        StaffId?: string;
        LineId?: string;
        Description?: string;
        OriginLineId?: string;
        TaxOverrideCode?: string;
        IsPriceKeyedIn?: boolean;
        IsTaxOverideCodeTaxExempt?: boolean;
        ProductId?: number;
        Barcode?: string;
        BarcodeEmbeddedPrice?: number;
        PriceInBarcode?: boolean;
        EntryMethodTypeValue?: number;
        MasterProductId?: number;
        ListingId?: number;
        IsPriceOverridden?: boolean;
        OriginalPrice?: number;
        TotalAmount?: number;
        NetAmountWithoutTax?: number;
        DiscountAmount?: number;
        DiscountAmountWithoutTax?: number;
        NetPrice?: number;
        TotalDiscount?: number;
        TotalPercentageDiscount?: number;
        LineDiscount?: number;
        PeriodicDiscount?: number;
        LineManualDiscountPercentage?: number;
        LineManualDiscountAmount?: number;
        ShippingAddress?: Entities.Address;
        DeliveryMode?: string;
        Comment?: string;
        RequestedDeliveryDate?: Date;
        InventoryLocationId?: string;
        WarehouseLocation?: string;
        InventoryStatusId?: string;
        LicensePlate?: string;
        InventoryDimensionId?: string;
        ItemType?: number;
        ReservationId?: string;
        LineNumber?: number;
        ReturnQuantity?: number;
        QuantityRemained?: number;
        QuantityShipped?: number;
        LineVersion?: number;
        StatusValue?: number;
        SalesStatusValue?: number;
        ProductSourceValue?: number;
        IsGiftCardLine?: boolean;
        GiftCardId?: string;
        GiftCardCurrencyCode?: string;
        GiftCardOperationValue?: number;
        GiftCardTypeValue?: number;
        IsInvoiceLine?: boolean;
        InvoiceId?: string;
        InvoiceAmount?: number;
        IsInvoiceSettled?: boolean;
        InvoiceTypeValue?: number;
        InvoicedSalesId?: string;
        IsVoided?: boolean;
        IsPriceLocked?: boolean;
        ChargeLines?: Entities.ChargeLine[];
        BasePrice?: number;
        AgreementPrice?: number;
        AdjustedPrice?: number;
        IsWarrantyLine?: boolean;
        WarrantableTransactionId?: string;
        WarrantableSalesId?: string;
        WarrantableLineNumber?: number;
        WarrantableSerialNumber?: string;
        ReturnTransactionId?: string;
        ReturnLineNumber?: number;
        ReturnInventTransId?: string;
        ReturnStore?: string;
        ReturnTerminalId?: string;
        ReturnChannelId?: number;
        FulfillmentStoreId?: string;
        SalesDate?: Date;
        QuantityInvoiced?: number;
        QuantityOrdered?: number;
        QuantityCanceled?: number;
        SavedQuantity?: number;
        IsSavedDiscount?: boolean;
        RecordId?: number;
        SerialNumber?: string;
        BatchId?: string;
        DeliveryModeChargeAmount?: number;
        UnitOfMeasureSymbol?: string;
        CatalogId?: number;
        ElectronicDeliveryEmailAddress?: string;
        ElectronicDeliveryEmailContent?: string;
        LoyaltyDiscountAmount?: number;
        LoyaltyPercentageDiscount?: number;
        TenderDiscountAmount?: number;
        TenderDiscountPercentage?: number;
        GiftCardBalance?: number;
        IsCustomerAccountDeposit?: boolean;
        Blocked?: boolean;
        Found?: boolean;
        DateToActivateItem?: Date;
        LinePercentageDiscount?: number;
        PeriodicPercentageDiscount?: number;
        QuantityDiscounted?: number;
        UnitQuantity?: number;
        UnitOfMeasureConversion?: Entities.UnitOfMeasureConversion;
        DiscountLines?: Entities.DiscountLine[];
        PriceLines?: Entities.PriceLine[];
        PeriodicDiscountPossibilities?: Entities.DiscountLine[];
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        ReturnLabelProperties?: Entities.ReturnLabelContent;
        LineMultilineDiscOnItem?: string;
        RelatedDiscountedLineIds?: string[];
        LinkedParentLineId?: string;
        LineMultilineDiscOnItemValue?: number;
        WasChanged?: boolean;
        OriginalSalesOrderUnitOfMeasure?: string;
        InventOrderUnitOfMeasure?: string;
        TrackingId?: string;
        IsLoyaltyDiscountApplied?: boolean;
        CommissionSalesGroup?: string;
        IsCommissionSalesGroupOverriddenByCustomer?: boolean;
        CommissionSalesGroupSetByCashier?: string;
        AttributeValues?: Entities.AttributeValueBase[];
        ThirdPartyGiftCardInfo?: Entities.ThirdPartyGiftCardInfo;
        QuantityReturnable?: number;
        LoyaltyRewardPointLines?: Entities.LoyaltyRewardPointLine[];
        ReturnLoyaltyRewardPointLines?: Entities.LoyaltyRewardPointLine[];
        ItemId?: string;
        Quantity?: number;
        Price?: number;
        ItemTaxGroupId?: string;
        SalesTaxGroupId?: string;
        OriginalSalesTaxGroupId?: string;
        OriginalItemTaxGroupId?: string;
        TaxAmount?: number;
        SalesOrderUnitOfMeasure?: string;
        NetAmount?: number;
        NetAmountPerUnit?: number;
        GrossAmount?: number;
        TaxLines?: Entities.TaxLine[];
        TaxMeasures?: Entities.TaxMeasure[];
        TaxAmountExemptInclusive?: number;
        TaxAmountInclusive?: number;
        TaxAmountExclusive?: number;
        NetAmountWithAllInclusiveTax?: number;
        BeginDateTime?: Date;
        EndDateTime?: Date;
        TaxRatePercent?: number;
        IsReturnByReceipt?: boolean;
        ReturnLineTaxAmount?: number;
        ReturnTaxLines?: Entities.TaxLine[];
        TaxExemptPriceInclusiveReductionAmount?: number;
        TaxExemptPriceInclusiveOriginalPrice?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SearchArea entity interface.
     */
    export interface SearchArea {
        Longitude?: number;
        Latitude?: number;
        Radius?: number;
        DistanceUnitValue?: number;
        
    }
    
    /**
     * ShiftAccountLine entity interface.
     */
    export interface ShiftAccountLine {
        AccountTypeValue?: number;
        AccountNumber?: string;
        Amount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShiftTenderLine entity interface.
     */
    export interface ShiftTenderLine {
        TenderTypeId?: string;
        TenderTypeName?: string;
        CardTypeId?: string;
        TenderCurrency?: string;
        CountingRequired?: boolean;
        StartingAmountOfStoreCurrency?: number;
        StartingAmountOfTenderCurrency?: number;
        FloatingEntryAmountOfStoreCurrency?: number;
        FloatingEntryAmountOfTenderCurrency?: number;
        SafeDropAmountOfStoreCurrency?: number;
        SafeDropAmountOfTenderCurrency?: number;
        BankDropAmountOfStoreCurrency?: number;
        BankDropAmountOfTenderCurrency?: number;
        RemoveTenderAmountOfStoreCurrency?: number;
        RemoveTenderAmountOfTenderCurrency?: number;
        DeclareTenderAmountOfStoreCurrency?: number;
        DeclareTenderAmountOfTenderCurrency?: number;
        TenderedAmountOfStoreCurrency?: number;
        TenderedAmountOfTenderCurrency?: number;
        ChangeAmountOfStoreCurrency?: number;
        ChangeAmountOfTenderCurrency?: number;
        Count?: number;
        Notes?: string;
        OverriddenFloatEntryAmountInTenderedCurrency?: number;
        OverriddenBankDropAmountInTenderedCurrency?: number;
        OverriddenChangeAmountInTenderedCurrency?: number;
        OverriddenDeclaredTenderAmountInTenderedCurrency?: number;
        OverriddenRemovedTenderAmountInTenderedCurrency?: number;
        OverriddenSafeDropAmountInTenderedCurrency?: number;
        OverriddenStartingAmountInTenderedCurrency?: number;
        OverriddenTenderedAmountInTenderedCurrency?: number;
        OverShortAmountOfTenderCurrency?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * StockCountJournalTransaction entity interface.
     */
    export interface StockCountJournalTransaction {
        JournalId?: string;
        RecordId?: number;
        OperationType?: number;
        ItemId?: string;
        DataAreaId?: string;
        ProductRecordId?: number;
        ItemName?: string;
        InventDimId?: string;
        Counted?: number;
        Quantity?: number;
        EstimatedOnHandQuantity?: number;
        OnHandCalculationDateTime?: Date;
        Unit?: string;
        UserId?: string;
        TerminalId?: string;
        CountedDate?: Date;
        Status?: number;
        InventBatchId?: string;
        WarehouseLocationId?: string;
        InventoryStatus?: string;
        LicensePlate?: string;
        WarehousePalletId?: string;
        InventSiteId?: string;
        InventLocationId?: string;
        ConfigId?: string;
        InventSizeId?: string;
        InventColorId?: string;
        InventStyleId?: string;
        InventSerialId?: string;
        TrackingGuid?: string;
        UpdatedInAx?: boolean;
        Message?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TaxLine entity interface.
     */
    export interface TaxLine {
        TaxGroup?: string;
        Percentage?: number;
        IsExempt?: boolean;
        TaxBasis?: number;
        IsIncludedInPrice?: boolean;
        SaleLineNumber?: number;
        StoreId?: string;
        TerminalId?: string;
        TransactionId?: string;
        TaxCode?: string;
        Amount?: number;
        AmountRefunded?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TenderLine entity interface.
     */
    export interface TenderLine {
        StoreId?: string;
        TerminalId?: string;
        TransactionId?: string;
        RefundableAmount?: number;
        CaptureToken?: string;
        CardToken?: string;
        Authorization?: string;
        TransactionStatusValue?: number;
        IncomeExpenseAccountTypeValue?: number;
        MaskedCardNumber?: string;
        TenderDate?: Date;
        IsPreProcessed?: boolean;
        IsDeposit?: boolean;
        IsCustomerAccountFloorLimitUsed?: boolean;
        ChannelId?: number;
        IsLinkedRefund?: boolean;
        LinkedPaymentStore?: string;
        LinkedPaymentTerminalId?: string;
        LinkedPaymentTransactionId?: string;
        LinkedPaymentLineNumber?: number;
        LinkedPaymentCurrency?: string;
        TenderLineId?: string;
        Amount?: number;
        CashBackAmount?: number;
        AmountInTenderedCurrency?: number;
        AmountInCompanyCurrency?: number;
        Currency?: string;
        ExchangeRate?: number;
        CompanyCurrencyExchangeRate?: number;
        TenderTypeId?: string;
        SignatureData?: string;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        LineNumber?: number;
        GiftCardId?: string;
        GiftCardPin?: string;
        GiftCardExpirationYear?: number;
        GiftCardExpirationMonth?: number;
        CreditMemoId?: string;
        CustomerId?: string;
        LoyaltyCardId?: string;
        CardTypeId?: string;
        IsChangeLine?: boolean;
        IsHistorical?: boolean;
        IsVoidable?: boolean;
        StatusValue?: number;
        VoidStatusValue?: number;
        AuthorizedAmount?: number;
        PaymentRefRecId?: number;
        CardPaymentAccountId?: string;
        ProcessingTypeValue?: number;
        CardProcessorStatusValue?: number;
        LinkedPaymentRefRecId?: number;
        IsPolicyBypassed?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TextValueTranslation entity interface.
     */
    export interface TextValueTranslation {
        Language?: string;
        Text?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * UnitOfMeasure entity interface.
     */
    export interface UnitOfMeasure {
        DecimalPrecision?: number;
        Symbol?: string;
        Description?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * RecommendedElement entity interface.
     */
    export interface RecommendedElement {
        ElementId?: string;
        ElementTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * RecommendationCriteria entity interface.
     */
    export interface RecommendationCriteria {
        CustomerAccountNumber?: string;
        CatalogId?: number;
        ProductIds?: number[];
        CategoryIds?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductListLine entity interface.
     */
    export interface ProductListLine {
        ProductListId?: string;
        LineId?: string;
        ProductId?: number;
        Quantity?: number;
        UnitOfMeasure?: string;
        CreatedDateTime?: Date;
        LastUpdated?: Date;
        DeletedDateTime?: Date;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommerceListLine entity interface.
     */
    export interface CommerceListLine {
        CommerceListId?: number;
        LineId?: number;
        CustomerId?: string;
        CustomerName?: string;
        ProductId?: number;
        Quantity?: number;
        UnitOfMeasure?: string;
        IsFavorite?: boolean;
        IsRecurring?: boolean;
        IsPrivate?: boolean;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommerceListContributor entity interface.
     */
    export interface CommerceListContributor {
        RecordId?: number;
        CustomerId?: string;
        CustomerName?: string;
        InvitationId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CommerceListInvitation entity interface.
     */
    export interface CommerceListInvitation {
        RecordId?: number;
        Invitee?: string;
        IsSent?: boolean;
        LastRequestDateTime?: Date;
        LastSentDateTime?: Date;
        StatusValue?: number;
        Token?: string;
        InvitationTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SearchFilter entity interface.
     */
    export interface SearchFilter {
        Key?: string;
        FilterTypeValue: number;
        SearchValues?: Entities.SearchFilterValue[];
        
    }
    
    /**
     * SearchFilterValue entity interface.
     */
    export interface SearchFilterValue {
        Value?: Entities.CommercePropertyValue;
        
    }
    
    /**
     * TransactionSearchCriteria entity interface.
     */
    export interface TransactionSearchCriteria {
        TransactionIds?: string[];
        SalesId?: string;
        ReceiptId?: string;
        ChannelReferenceId?: string;
        CustomerAccountNumber?: string;
        CustomerFirstName?: string;
        CustomerLastName?: string;
        StoreId?: string;
        TerminalId?: string;
        ItemId?: string;
        Barcode?: string;
        SerialNumber?: string;
        StaffId?: string;
        StartDateTime?: Date;
        EndDateTime?: Date;
        ReceiptEmailAddress?: string;
        SearchIdentifiers?: string;
        SearchLocationTypeValue?: number;
        CustomFilters?: Entities.SearchFilter[];
        
    }
    
    /**
     * SalesOrderSearchCriteria entity interface.
     */
    export interface SalesOrderSearchCriteria {
        TransactionIds?: string[];
        SalesId?: string;
        ReceiptId?: string;
        ChannelReferenceId?: string;
        CustomerAccountNumber?: string;
        CustomerFirstName?: string;
        CustomerLastName?: string;
        StoreId?: string;
        TerminalId?: string;
        ItemId?: string;
        Barcode?: string;
        SerialNumber?: string;
        StaffId?: string;
        SearchTypeValue?: number;
        StartDateTime?: Date;
        EndDateTime?: Date;
        IncludeDetails?: boolean;
        ReceiptEmailAddress?: string;
        SearchIdentifiers?: string;
        SalesTransactionTypeValues?: number[];
        SearchLocationTypeValue?: number;
        TransactionStatusTypeValues?: number[];
        
    }
    
    /**
     * SearchStoreCriteria entity interface.
     */
    export interface SearchStoreCriteria {
        ChannelId?: number;
        StoreNumber?: string;
        InventoryLocationId?: string;
        
    }
    
    /**
     * CustomerSearchCriteria entity interface.
     */
    export interface CustomerSearchCriteria {
        Keyword?: string;
        SearchOnlyCurrentCompany?: boolean;
        SearchLocationValue?: number;
        DataLevelValue?: number;
        
    }
    
    /**
     * ProductPrice entity interface.
     */
    export interface ProductPrice {
        ProductId?: number;
        ListingId?: number;
        BasePrice?: number;
        TradeAgreementPrice?: number;
        AdjustedPrice?: number;
        CustomerContextualPrice?: number;
        DiscountAmount?: number;
        CurrencyCode?: string;
        ItemId?: string;
        InventoryDimensionId?: string;
        UnitOfMeasure?: string;
        ValidFrom?: Date;
        ProductLookupId?: number;
        ChannelId?: number;
        CatalogId?: number;
        DiscountLines?: Entities.DiscountLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitAvailability entity interface.
     */
    export interface OrgUnitAvailability {
        OrgUnitLocation?: Entities.OrgUnitLocation;
        ItemAvailabilities?: Entities.ItemAvailability[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductVariantPropertySet entity interface.
     */
    export interface ProductVariantPropertySet {
        VariantId?: number;
        ProductVariantPropertiesAsList?: Entities.ProductPropertyTranslation[];
        
    }
    
    /**
     * PurchaseOrderLine entity interface.
     */
    export interface PurchaseOrderLine {
        RecordId?: number;
        OrderId?: string;
        ProductRecordId?: number;
        ItemId?: string;
        ItemName?: string;
        InventDimId?: string;
        QuantityOrdered?: number;
        PurchaseQuantity?: number;
        PurchaseUnit?: string;
        PurchaseReceived?: number;
        PurchaseReceivedNow?: number;
        InventBatchId?: string;
        WMSLocationId?: string;
        WMSPalletId?: string;
        InventoryStatus?: string;
        LicensePlate?: string;
        InventSiteId?: string;
        InventLocationId?: string;
        ConfigId?: string;
        InventSerialId?: string;
        InventSizeId?: string;
        InventColorId?: string;
        InventStyleId?: string;
        IsCommitted?: boolean;
        Message?: string;
        UniqueIdentifier?: string;
        DeliveryMethod?: string;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TransferOrderLine entity interface.
     */
    export interface TransferOrderLine {
        RecordId?: number;
        OrderId?: string;
        ProductRecordId?: number;
        ItemId?: string;
        ItemName?: string;
        InventDimId?: string;
        QuantityTransferred?: number;
        QuantityShipped?: number;
        QuantityReceived?: number;
        QuantityShipNow?: number;
        QuantityReceiveNow?: number;
        QuantityRemainShip?: number;
        QuantityRemainReceive?: number;
        PurchaseUnit?: string;
        InventBatchId?: string;
        WMSLocationId?: string;
        WMSPalletId?: string;
        InventoryStatus?: string;
        LicensePlate?: string;
        InventSiteId?: string;
        InventLocationId?: string;
        ConfigId?: string;
        InventSerialId?: string;
        InventSizeId?: string;
        InventColorId?: string;
        InventStyleId?: string;
        IsCommitted?: boolean;
        Message?: string;
        Guid?: string;
        DeliveryMethod?: string;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TransferOrderJournal entity interface.
     */
    export interface TransferOrderJournal {
        OrderId?: string;
        VoucherId?: string;
        UpdatedByWorker?: string;
        InventLocationIdFrom?: string;
        InventLocationIdTo?: string;
        QuantityShipped?: number;
        PostingDate?: Date;
        DeliveryMode?: string;
        Comments?: string;
        JournalLines?: Entities.TransferOrderJournalLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PickingListLine entity interface.
     */
    export interface PickingListLine {
        RecordId?: number;
        OrderId?: string;
        ProductRecordId?: number;
        ItemId?: string;
        ItemName?: string;
        InventDimId?: string;
        QuantityOrdered?: number;
        PurchaseReceivedNow?: number;
        InventBatchId?: string;
        WMSLocationId?: string;
        WMSPalletId?: string;
        InventoryStatus?: string;
        LicensePlate?: string;
        InventSiteId?: string;
        InventLocationId?: string;
        ConfigId?: string;
        InventSerialId?: string;
        InventSizeId?: string;
        InventColorId?: string;
        InventStyleId?: string;
        IsCommitted?: boolean;
        Message?: string;
        Guid?: string;
        DeliveryMethod?: string;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Affiliation entity interface.
     */
    export interface Affiliation {
        RecordId?: number;
        AffiliationTypeValue?: number;
        Description?: string;
        Name?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryInboundOutboundDocumentLinesSummary entity interface.
     */
    export interface InventoryInboundOutboundDocumentLinesSummary {
        InProgressQuantity?: number;
        TotalLineNumber?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSerialNumberLinesSummary entity interface.
     */
    export interface InventoryDocumentSerialNumberLinesSummary {
        RegisteringQuantity?: number;
        RegisteredQuantity?: number;
        TotalLineNumber?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryInboundOutboundDocumentLine entity interface.
     */
    export interface InventoryInboundOutboundDocumentLine {
        WorkDocumentId?: string;
        LineId?: string;
        SourceDocumentRecordId?: number;
        SourceDocumentLineRecordId?: number;
        SourceDocumentTypeValue?: number;
        QuantityOrdered?: number;
        QuantityShipped?: number;
        QuantityReceived?: number;
        QuantityCancelled?: number;
        QuantityToUpdate?: number;
        LocationId?: string;
        ItemId?: string;
        ProductId?: number;
        ItemName?: string;
        ItemPrimaryImageUrl?: string;
        IsLocationActive?: boolean;
        IsLocationAllowBlankReceiptEnabled?: boolean;
        IsLocationBlankIssueAllowed?: boolean;
        ProductDimensions?: Entities.ProductDimension[];
        Note?: string;
        OperationResultMessage?: string;
        IsCloseLine?: boolean;
        SourceDocumentLine?: Entities.InventoryInboundOutboundSourceDocumentLine;
        SerialNumberLines?: Entities.InventoryDocumentSerialNumberLine[];
        LongVersion?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryInboundOutboundSourceDocument entity interface.
     */
    export interface InventoryInboundOutboundSourceDocument {
        RecordId?: number;
        DocumentTypeValue?: number;
        DocumentId?: string;
        StatusValue?: number;
        ReceiveDate?: Date;
        ShipDate?: Date;
        Sender?: string;
        Receiver?: string;
        SenderDetails?: string;
        ReceiverDetails?: string;
        DeliveryMode?: string;
        TotalQuantityOrdered?: number;
        TotalQuantityShipped?: number;
        TotalQuantityReceived?: number;
        TotalQuantityCancelled?: number;
        DataAreaId?: string;
        Note?: string;
        TotalLines?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryInboundOutboundSourceDocumentLine entity interface.
     */
    export interface InventoryInboundOutboundSourceDocumentLine {
        DocumentRecordId?: number;
        DocumentTypeValue?: number;
        RecordId?: number;
        LineNumber?: number;
        ItemId?: string;
        ProductId?: number;
        QuantityOrdered?: number;
        QuantityShipped?: number;
        QuantityReceived?: number;
        QuantityCancelled?: number;
        LocationId?: string;
        OverDeliveryPercentage?: number;
        UnderDeliveryPercentage?: number;
        UnitId?: string;
        Receiver?: string;
        DataAreaId?: string;
        Note?: string;
        DocumentId?: string;
        ItemName?: string;
        ItemPrimaryImageUrl?: string;
        IsLocationActive?: boolean;
        IsLocationAllowBlankReceiptEnabled?: boolean;
        IsLocationBlankIssueAllowed?: boolean;
        HasSerialNumber?: boolean;
        IsSerialNumberBlankReceiptAllowed?: boolean;
        IsSerialNumberDuplicateCheckEnabled?: boolean;
        ProductDimensions?: Entities.ProductDimension[];
        SerialNumberLines?: Entities.InventoryDocumentSourceSerialNumberLine[];
        StatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentLineFilterCriteria entity interface.
     */
    export interface InventoryDocumentLineFilterCriteria {
        ProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentUpdateLinesAction entity interface.
     */
    export interface InventoryDocumentUpdateLinesAction {
        Quantity?: number;
        ActionTypeValue?: number;
        LocationId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentLineOperationResultSettings entity interface.
     */
    export interface InventoryDocumentLineOperationResultSettings {
        ModeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentLineSearchCriteria entity interface.
     */
    export interface InventoryDocumentLineSearchCriteria {
        SourceDocumentId?: string;
        SourceDocumentTypeValue?: number;
        WorkDocumentId?: string;
        AvailableSerializedLineOnly?: boolean;
        DocumentLineIds?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSearchCriteria entity interface.
     */
    export interface InventoryDocumentSearchCriteria {
        DocumentId?: string;
        DocumentStateValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSerialNumberLineSearchCriteria entity interface.
     */
    export interface InventoryDocumentSerialNumberLineSearchCriteria {
        DocumentLineId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSerialNumberLineUpdateAction entity interface.
     */
    export interface InventoryDocumentSerialNumberLineUpdateAction {
        DocumentLineId?: string;
        LineId?: string;
        SerialNumber?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSerialNumberLineResetAction entity interface.
     */
    export interface InventoryDocumentSerialNumberLineResetAction {
        DocumentLineId?: string;
        LineId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult entity interface.
     */
    export interface InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult {
        UpdatedLines?: Entities.InventoryInboundOutboundDocumentLine[];
        TotalLinesUpdated?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * WarehouseLocationSearchCriteria entity interface.
     */
    export interface WarehouseLocationSearchCriteria {
        WarehouseIds?: string[];
        IsLocationProfileRequired?: boolean;
        SearchText?: string;
        
    }
    
    /**
     * InventoryDocumentSerialNumberLine entity interface.
     */
    export interface InventoryDocumentSerialNumberLine {
        WorkDocumentId?: string;
        WorkDocumentLineId?: string;
        SourceLineId?: string;
        LineId?: string;
        Quantity?: number;
        SerialNumber?: string;
        StatusValue?: number;
        ProductId?: number;
        ModifiedDateTime?: Date;
        SourceLine?: Entities.InventoryDocumentSourceSerialNumberLine;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentValidationCategoryResultsSummary entity interface.
     */
    export interface InventoryDocumentValidationCategoryResultsSummary {
        CategoryName?: string;
        SeverityValue?: number;
        TotalValidationResultCount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentValidationResultSummary entity interface.
     */
    export interface InventoryDocumentValidationResultSummary {
        DocumentId?: string;
        DocumentVersion?: number;
        CategorySummaries?: Entities.InventoryDocumentValidationCategoryResultsSummary[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentValidationResultLine entity interface.
     */
    export interface InventoryDocumentValidationResultLine {
        DocumentValidationResultLineId?: string;
        CategoryName?: string;
        SeverityValue?: number;
        ErrorCode?: number;
        ErrorMessage?: string;
        DocumentId?: string;
        DocumentLongVersion?: number;
        DocumentLineId?: string;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentValidationResultSearchCriteria entity interface.
     */
    export interface InventoryDocumentValidationResultSearchCriteria {
        DocumentId?: string;
        DocumentVersion?: number;
        SeverityValue?: number;
        Categories?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductDimension entity interface.
     */
    export interface ProductDimension {
        DimensionTypeValue: number;
        DimensionValue?: Entities.ProductDimensionValue;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductDimensionValue entity interface.
     */
    export interface ProductDimensionValue {
        RecordId: number;
        Value?: string;
        DimensionId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductDimensionCombination entity interface.
     */
    export interface ProductDimensionCombination {
        ProductDimensions?: Entities.ProductDimension[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SearchRefiner entity interface.
     */
    export interface SearchRefiner {
        RecordId?: number;
        KeyName?: string;
        DataTypeValue?: number;
        RefinerTypeValue?: number;
        DisplayTemplateValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SearchRefinerValue entity interface.
     */
    export interface SearchRefinerValue {
        RefinerRecordId?: number;
        DataTypeValue?: number;
        LeftValueBoundString?: string;
        RightValueBoundString?: string;
        UnitText?: string;
        RowNumber?: number;
        Count?: number;
        LeftValueBoundLocalizedString?: string;
        RightValueBoundLocalizedString?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductRefiner entity interface.
     */
    export interface ProductRefiner extends SearchRefiner {
        SourceValue?: number;
        Values?: Entities.ProductRefinerValue[];
        IsDimension?: boolean;
        
    }
    
    /**
     * ProductRefinerValue entity interface.
     */
    export interface ProductRefinerValue extends SearchRefinerValue {
        RefinerSourceValue?: number;
        
    }
    
    /**
     * ClientBookRefiner entity interface.
     */
    export interface ClientBookRefiner extends SearchRefiner {
        SourceValue?: number;
        Values?: Entities.ClientBookRefinerValue[];
        
    }
    
    /**
     * ClientBookRefinerValue entity interface.
     */
    export interface ClientBookRefinerValue extends SearchRefinerValue {
        RefinerSourceValue?: number;
        
    }
    
    /**
     * ProductRelationType entity interface.
     */
    export interface ProductRelationType {
        Name?: string;
        RecordId: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ComponentInSlotRelation entity interface.
     */
    export interface ComponentInSlotRelation {
        ComponentId: number;
        SlotId: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductRules entity interface.
     */
    export interface ProductRules {
        HasLinkedProducts: boolean;
        IsSerialized: boolean;
        IsActiveInSalesProcess: boolean;
        IsBlocked: boolean;
        DateOfBlocking: Date;
        DateToActivate: Date;
        DateToBlock: Date;
        DefaultUnitOfMeasure?: string;
        PriceKeyingRequirementValue: number;
        QuantityKeyingRequirementValue: number;
        MustKeyInComment: boolean;
        CanQuantityBecomeNegative: boolean;
        MustScaleItem: boolean;
        CanPriceBeZero: boolean;
        ProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LocalizedString entity interface.
     */
    export interface LocalizedString {
        RecordId?: number;
        LanguageId?: string;
        TextId?: number;
        Text?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyCard entity interface.
     */
    export interface LoyaltyCard {
        CardNumber?: string;
        CardTenderTypeValue?: number;
        CustomerAccount?: string;
        LoyaltyGroups?: Entities.LoyaltyGroup[];
        RewardPoints?: Entities.LoyaltyRewardPoint[];
        LoyaltyEnrollmentDate?: Date;
        LoyaltyEnrollmentDateLocal?: Date;
        LoyaltyEnrollmentTime?: number;
        LoyaltyEnrollmentTimeLocal?: number;
        OmOperatingUnitId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductComponent entity interface.
     */
    export interface ProductComponent {
        ProductId: number;
        SlotId: number;
        Product?: Entities.SimpleProduct;
        AdditionalChargeForComponent?: number;
        Behavior?: Entities.ProductBehavior;
        Description?: string;
        Dimensions?: Entities.ProductDimension[];
        ItemId?: string;
        Name?: string;
        ProductTypeValue?: number;
        Quantity?: number;
        UnitOfMeasure?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SimpleProduct entity interface.
     */
    export interface SimpleProduct {
        RecordId: number;
        ItemId?: string;
        Name?: string;
        Description?: string;
        ProductTypeValue: number;
        DefaultUnitOfMeasure?: string;
        BasePrice: number;
        Price: number;
        AdjustedPrice: number;
        MasterProductId?: number;
        Components?: Entities.ProductComponent[];
        Dimensions?: Entities.ProductDimension[];
        Behavior?: Entities.ProductBehavior;
        LinkedProducts?: Entities.SimpleLinkedProduct[];
        PrimaryImageUrl?: string;
        ItemTypeValue?: number;
        ItemServiceTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductBehavior entity interface.
     */
    export interface ProductBehavior {
        HasSerialNumber: boolean;
        IsDiscountAllowed: boolean;
        IsManualDiscountAllowed: boolean;
        IsKitDisassemblyAllowed: boolean;
        IsNegativeQuantityAllowed: boolean;
        IsReturnAllowed: boolean;
        IsSaleAtPhysicalStoresAllowed: boolean;
        IsZeroSalePriceAllowed: boolean;
        KeyInPriceValue: number;
        KeyInQuantityValue: number;
        MustKeyInComment: boolean;
        MustPrintIndividualShelfLabelsForVariants: boolean;
        MustPromptForSerialNumberOnlyAtSale: boolean;
        MustWeighProductAtSale: boolean;
        ValidFromDateForSaleAtPhysicalStores: Date;
        ValidToDateForSaleAtPhysicalStores: Date;
        IsStorageDimensionGroupLocationActive: boolean;
        IsStorageDimensionGroupLocationAllowBlankReceiptEnabled: boolean;
        AllowNegativePhysicalInventory: boolean;
        IsBlankSerialNumberAllowed?: boolean;
        IsBlankSerialNumberReceiptAllowed?: boolean;
        IsSerialNumberControlEnabled?: boolean;
        IsStorageDimensionGroupLocationBlankIssueAllowed?: boolean;
        IsSerialNumberRequired?: boolean;
        DefaultQuantity?: number;
        MaximumQuantity?: number;
        MinimumQuantity?: number;
        MultipleOfQuantity?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SimpleLinkedProduct entity interface.
     */
    export interface SimpleLinkedProduct {
        RecordId: number;
        ItemId?: string;
        Name?: string;
        Description?: string;
        ProductTypeValue: number;
        DefaultUnitOfMeasure?: string;
        BasePrice: number;
        Price: number;
        AdjustedPrice: number;
        Quantity: number;
        Behavior?: Entities.ProductBehavior;
        Dimensions?: Entities.ProductDimension[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductSearchResult entity interface.
     */
    export interface ProductSearchResult {
        ItemId?: string;
        Name?: string;
        Price: number;
        PrimaryImageUrl?: string;
        RecordId: number;
        TrackingId?: string;
        AverageRating?: number;
        TotalRatings?: number;
        Description?: string;
        BasePrice?: number;
        DisplayOrder?: number;
        AttributeValues?: Entities.AttributeValue[];
        IsMasterProduct?: boolean;
        MasterProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SearchSuggestion entity interface.
     */
    export interface SearchSuggestion {
        Value?: string;
        Value2?: Entities.CommerceProperty;
        Value3?: Entities.CommerceProperty;
        Value4?: Entities.CommerceProperty;
        SuggestionType?: string;
        Id?: string;
        ImageUrl?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyPointRedemptionEstimate entity interface.
     */
    export interface LoyaltyPointRedemptionEstimate {
        MaxCurrencyValueOfLoyaltyPoints?: number;
        RewardPointToRedeemList?: Entities.LoyaltyRewardPointLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyGroup entity interface.
     */
    export interface LoyaltyGroup {
        Description?: string;
        Name?: string;
        RecordId: number;
        LoyaltyTiers?: Entities.LoyaltyTier[];
        LoyaltyCardTiers?: Entities.LoyaltyCardTier[];
        HighestActiveLoyaltyCardTier?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyTier entity interface.
     */
    export interface LoyaltyTier {
        Description?: string;
        RecordId: number;
        TierId?: string;
        TierLevel: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyCardTier entity interface.
     */
    export interface LoyaltyCardTier {
        RecordId: number;
        TierId?: string;
        LoyaltyTierRecordId: number;
        ValidFrom: Date;
        ValidTo: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyRewardPoint entity interface.
     */
    export interface LoyaltyRewardPoint {
        IsRedeemable: boolean;
        RewardPointCurrency?: string;
        RewardPointTypeValue: number;
        Description?: string;
        RewardPointId?: string;
        IssuedPoints?: number;
        UsedPoints?: number;
        ExpiredPoints?: number;
        ActivePoints?: number;
        PointsExpiringSoon?: number;
        UnvestedPoints?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyCardTransaction entity interface.
     */
    export interface LoyaltyCardTransaction {
        ChannelName?: string;
        EntryDateTime: Date;
        EntryTypeValue: number;
        ExpirationDate: Date;
        RewardPointAmountQuantity: number;
        TransactionId?: string;
        
    }
    
    /**
     * GiftCard entity interface.
     */
    export interface GiftCard {
        Id?: string;
        Balance?: number;
        BalanceCurrencyCode?: string;
        BalanceInCardCurrency?: number;
        CardCurrencyCode?: string;
        GiftCardIssueAmount?: number;
        GiftCardActiveFrom?: Date;
        GiftCardExpireDate?: Date;
        GiftCardHistoryDetails?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OperationPermission entity interface.
     */
    export interface OperationPermission {
        OperationName?: string;
        OperationId?: number;
        CheckUserAccess?: boolean;
        AllowAnonymousAccess?: boolean;
        AllowCustomerAccess?: boolean;
        AllowApplicationAccess?: boolean;
        IsEnabledForTaskManagement?: boolean;
        Permissions?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * StateProvinceInfo entity interface.
     */
    export interface StateProvinceInfo {
        CountryRegionId?: string;
        StateId?: string;
        StateName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TransactionLog entity interface.
     */
    export interface TransactionLog extends Transaction {
        
    }
    
    /**
     * KitTransaction entity interface.
     */
    export interface KitTransaction extends TransactionLog {
        KitTransactionLines?: Entities.KitTransactionLine[];
        
    }
    
    /**
     * SalesTaxGroup entity interface.
     */
    export interface SalesTaxGroup {
        RecordId: number;
        TaxGroup?: string;
        TaxGroupName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductProperty entity interface.
     */
    export interface ProductProperty {
        ValueString?: string;
        UnitText?: string;
        PropertyTypeValue?: number;
        KeyName?: string;
        FriendlyName?: string;
        RecordId?: number;
        IsDimensionProperty?: boolean;
        AttributeValueId?: number;
        GroupId?: number;
        GroupTypeValue?: number;
        GroupName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        ProductId?: number;
        CatalogId?: number;
        
    }
    
    /**
     * ProductCompositionInformation entity interface.
     */
    export interface ProductCompositionInformation {
        VariantInformation?: Entities.ProductVariantInformation;
        KitDefinition?: Entities.KitDefinition;
        
    }
    
    /**
     * ProductVariantInformation entity interface.
     */
    export interface ProductVariantInformation {
        ActiveVariantProductId: number;
        Variants?: Entities.ProductVariant[];
        Dimensions?: Entities.ProductDimensionSet[];
        ItemId?: string;
        MasterProductId?: number;
        
    }
    
    /**
     * ProductChangeTrackingInformation entity interface.
     */
    export interface ProductChangeTrackingInformation {
        ModifiedDateTime: Date;
        ChangeActionValue?: number;
        RequestedActionValue?: number;
        
    }
    
    /**
     * ProductDimensionSet entity interface.
     */
    export interface ProductDimensionSet {
        DimensionKey?: string;
        DimensionValues?: Entities.ProductDimensionValueSet[];
        
    }
    
    /**
     * ProductDimensionValueSet entity interface.
     */
    export interface ProductDimensionValueSet {
        DimensionId?: string;
        DimensionValue?: string;
        VariantSet?: number[];
        
    }
    
    /**
     * RichMediaLocations entity interface.
     */
    export interface RichMediaLocations {
        Items?: Entities.RichMediaLocationsRichMediaLocation[];
        
    }
    
    /**
     * RichMediaLocationsRichMediaLocation entity interface.
     */
    export interface RichMediaLocationsRichMediaLocation {
        Url?: string;
        AltText?: string;
        IsSelfHosted?: boolean;
        IsDefault?: boolean;
        
    }
    
    /**
     * KitDefinition entity interface.
     */
    export interface KitDefinition {
        DisassembleAtRegister: boolean;
        KitLineDefinitions?: Entities.KitLineDefinition[];
        KitLineProductToVariantMap?: Entities.ComponentKitVariantSet[];
        KitVariantToComponentMap?: Entities.KitVariantContent[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ComponentKitVariantSet entity interface.
     */
    export interface ComponentKitVariantSet {
        KitLineProductId: number;
        KitVariantIdList?: number[];
        
    }
    
    /**
     * KitLineDefinition entity interface.
     */
    export interface KitLineDefinition {
        ComponentProductId: number;
        KitLineIdentifier: number;
        SubstituteProductIds?: number[];
        ComponentProperties?: Entities.KitLineProductProperty[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * KitLineProductProperty entity interface.
     */
    export interface KitLineProductProperty {
        KitLineIdentifier: number;
        ProductId: number;
        Unit?: string;
        Quantity: number;
        Charge: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * KitComponentKey entity interface.
     */
    export interface KitComponentKey {
        KitLineIdentifier: number;
        DistinctProductId: number;
        
    }
    
    /**
     * KitVariantContent entity interface.
     */
    export interface KitVariantContent {
        KitVariantId: number;
        KitComponentKeyList?: Entities.KitComponentKey[];
        
    }
    
    /**
     * ProductLookupClause entity interface.
     */
    export interface ProductLookupClause {
        ItemId?: string;
        InventDimensionId?: string;
        Barcode?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductAssortmentInterval entity interface.
     */
    export interface ProductAssortmentInterval {
        ProductId?: number;
        ValidFrom?: Date;
        ValidTo?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitLocation entity interface.
     */
    export interface OrgUnitLocation {
        Contacts?: Entities.OrgUnitContact[];
        ChannelId?: number;
        Latitude?: number;
        Longitude?: number;
        OrgUnitName?: string;
        OrgUnitNumber?: string;
        Address?: string;
        Street?: string;
        StreetNumber?: string;
        City?: string;
        DistrictName?: string;
        BuildingCompliment?: string;
        Postbox?: string;
        Zip?: string;
        County?: string;
        CountyName?: string;
        State?: string;
        StateName?: string;
        Country?: string;
        Distance?: number;
        InventoryLocationId?: string;
        InventorySiteId?: string;
        PostalAddressId?: number;
        OpenFrom?: number;
        OpenTo?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitContact entity interface.
     */
    export interface OrgUnitContact {
        ChannelId: number;
        Locator?: string;
        LocatorExtension?: string;
        ContactTypeValue: number;
        IsPrimary: boolean;
        IsPrivate: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SalesLineDeliveryOption entity interface.
     */
    export interface SalesLineDeliveryOption {
        SalesLineId?: string;
        DeliveryOptions?: Entities.DeliveryOption[];
        
    }
    
    /**
     * DeliveryOption entity interface.
     */
    export interface DeliveryOption {
        ChargeGroup?: string;
        Code?: string;
        Description?: string;
        RecordId: number;
        DeliveryChargeLines?: Entities.DeliveryChargeLine[];
        TotalChargeAmount?: number;
        ShippingChargeAmount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelIdentity entity interface.
     */
    export interface ChannelIdentity {
        Name?: string;
        OperatingUnitNumber?: string;
        DataAreaId?: string;
        RecordId: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelProfileProperty entity interface.
     */
    export interface ChannelProfileProperty {
        Key: number;
        Value?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelConfiguration entity interface.
     */
    export interface ChannelConfiguration {
        RecordId: number;
        ChannelNaturalId?: string;
        MinimumDepositPercentage: number;
        QuoteExpirationDays: number;
        PickupDeliveryModeCode?: string;
        CarryoutDeliveryModeCode?: string;
        CancellationChargePercentage: number;
        InventLocation?: string;
        InventLocationDataAreaId?: string;
        BingMapsApiKey?: string;
        BingMapsEnabled: boolean;
        Currency?: string;
        CatalogDefaultImageTemplate?: string;
        CompanyCurrency?: string;
        PriceIncludesSalesTax: boolean;
        CountryRegionId?: string;
        ChannelCountryRegionISOCode?: string;
        DefaultLanguageId?: string;
        TimeZoneInfoId?: string;
        EmailDeliveryModeCode?: string;
        GiftCardItemId?: string;
        EnableProductRecommendations: boolean;
        RefundableShippingAmountWithoutApproval: number;
        RefundShippingCharges: boolean;
        ReceiptSettingsValue: number;
        CustomerAttributeGroupId: number;
        ClientBookAttributeGroupId: number;
        NotificationRefreshInterval: number;
        AllowExchangeOnReturnOrders?: boolean;
        FiscalRegistrationProcessId?: string;
        IsInventoryAutomaticValidationEnabled: boolean;
        ProfileProperties?: Entities.ChannelProfileProperty[];
        Properties?: Entities.ChannelProperty[];
        Languages?: Entities.ChannelLanguage[];
        UseAdvancedAutoCharges?: boolean;
        UseRTSForOnlineOrderCreation?: boolean;
        IsWarrantyAutoPromptEnabled?: boolean;
        EnableProductRatingsForRetailStores?: boolean;
        EnableFetchingPickingListsForPickingAndReceiving?: boolean;
        EnableReturnsForMultipleOrderInvoices?: boolean;
        VoidSuspendedTransactionsOnCloseShift?: number;
        EnableOmniChannelPayments?: boolean;
        UseAdvancedCashManagement?: boolean;
        EnableFiscalRegistrationStorageBackup?: boolean;
        UseSalesReceiptAsDefaultReceiptTypeInJournal?: boolean;
        SalesOrderHeaderAttributeGroups?: number[];
        SalesOrderLinesAttributeGroups?: number[];
        EnableReturnPolicies?: boolean;
        InventAvailabilityCalculationMode?: string;
        IsPriceInclusiveTaxExemptCalculationEnabled?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelProperty entity interface.
     */
    export interface ChannelProperty {
        Name?: string;
        Value?: string;
        Channel?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelLanguage entity interface.
     */
    export interface ChannelLanguage {
        LanguageId?: string;
        IsDefault: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * NonSalesTransaction entity interface.
     */
    export interface NonSalesTransaction extends Transaction {
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        Amount?: number;
        ForeignCurrency?: string;
        OpenDrawer?: boolean;
        DenominationDetails?: Entities.DenominationDetail[];
        
    }
    
    /**
     * DropAndDeclareTransaction entity interface.
     */
    export interface DropAndDeclareTransaction extends Transaction {
        TenderDetails?: Entities.TenderDetail[];
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        OpenDrawer?: boolean;
        
    }
    
    /**
     * ProductSearchCriteria entity interface.
     */
    export interface ProductSearchCriteria {
        Ids?: number[];
        CategoryIds?: number[];
        IncludeProductsFromDescendantCategories?: boolean;
        SearchCondition?: string;
        SkipVariantExpansion?: boolean;
        IncludeAttributes?: boolean;
        Barcodes?: string[];
        ItemIds?: Entities.ProductLookupClause[];
        Refinement?: Entities.ProductRefinerValue[];
        CustomerAccountNumber?: string;
        RecommendationListId?: string;
        DownloadProductData?: boolean;
        Context?: Entities.ProjectionDomain;
        Language?: string;
        IsOnline?: boolean;
        DataLevelValue?: number;
        
    }
    
    /**
     * ChangedProductsSearchCriteria entity interface.
     */
    export interface ChangedProductsSearchCriteria {
        SynchronizationToken?: string;
        Context?: Entities.ProjectionDomain;
        AsListings?: boolean;
        Session?: Entities.ReadChangedProductsSession;
        DataLevelValue?: number;
        
    }
    
    /**
     * EmployeeActivitySearchCriteria entity interface.
     */
    export interface EmployeeActivitySearchCriteria {
        FromDateTimeOffset?: Date;
        ToDateTimeOffset?: Date;
        StoreNumber?: string;
        EmployeeActivityTypeValues?: number[];
        DataLevelValue?: number;
        
    }
    
    /**
     * SearchSuggestionCriteria entity interface.
     */
    export interface SearchSuggestionCriteria {
        ProductSearchCriteria?: Entities.ProductSearchCriteria;
        SuggestionType?: string;
        HitPrefix?: string;
        HitSuffix?: string;
        
    }
    
    /**
     * CartLineDeliveryPreference entity interface.
     */
    export interface CartLineDeliveryPreference {
        LineId?: string;
        DeliveryPreferenceTypeValues?: number[];
        
    }
    
    /**
     * CartLinePromotion entity interface.
     */
    export interface CartLinePromotion {
        LineId?: string;
        Promotions?: string[];
        
    }
    
    /**
     * ProductVariant entity interface.
     */
    export interface ProductVariant {
        ItemId?: string;
        MasterProductId: number;
        InventoryDimensionId?: string;
        AdjustedPrice: number;
        BasePrice: number;
        Price: number;
        Color?: string;
        Style?: string;
        Size?: string;
        Configuration?: string;
        ColorId?: string;
        StyleId?: string;
        SizeId?: string;
        ConfigId?: string;
        VariantId?: string;
        Images?: Entities.RichMediaLocations[];
        DistinctProductVariantId?: number;
        ProductNumber?: string;
        PropertiesAsList?: Entities.ProductPropertyTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareProfilePrinter entity interface.
     */
    export interface HardwareProfilePrinter {
        ProfileId?: string;
        DeviceTypeValue?: number;
        DeviceName?: string;
        DeviceMake?: string;
        DeviceModel?: string;
        DeviceDescription?: string;
        CharacterSet?: number;
        ReceiptProfileId?: string;
        BinaryConversion?: boolean;
        DocInsertRemovalTimeout?: number;
        Logo?: string;
        LogoAlignment?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareProfileScanner entity interface.
     */
    export interface HardwareProfileScanner {
        ProfileId?: string;
        DeviceTypeValue?: number;
        DeviceName?: string;
        DeviceDescription?: string;
        DecodeData?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareProfileCashDrawer entity interface.
     */
    export interface HardwareProfileCashDrawer {
        ProfileId?: string;
        DeviceTypeValue?: number;
        DeviceName?: string;
        DeviceDescription?: string;
        DeviceMake?: string;
        DeviceModel?: string;
        IsSharedShiftDrawer?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TillLayout entity interface.
     */
    export interface TillLayout {
        CashChangerLayoutXml?: string;
        CustomerLayoutId?: string;
        CustomerLayoutXml?: string;
        Height?: number;
        LayoutId?: string;
        LayoutTypeValue?: number;
        LayoutXml?: string;
        LayoutXmlPortrait?: string;
        Name?: string;
        ReceiptId?: string;
        ReceiptItemsLayoutXml?: string;
        ReceiptPaymentLayoutXml?: string;
        TotalId?: string;
        TotalsLayoutXml?: string;
        Width?: number;
        RecordId?: number;
        StartScreen?: number;
        ButtonGridZones?: Entities.ButtonGridZone[];
        ImageZones?: Entities.ImageZone[];
        ReportZones?: Entities.ReportZone[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SalesInvoice entity interface.
     */
    export interface SalesInvoice {
        RecordId?: number;
        Id?: string;
        SalesId?: string;
        SalesType?: string;
        InvoiceDate?: Date;
        CurrencyCode?: string;
        Amount?: number;
        AmountPaid?: number;
        Account?: string;
        Name?: string;
        TotalManualDiscountPercentage?: number;
        TotalManualDiscountAmount?: number;
        SalesInvoiceLine?: Entities.SalesInvoiceLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrderInvoice entity interface.
     */
    export interface OrderInvoice {
        Id?: string;
        CustomerAccountNumber?: string;
        CustomerName?: string;
        InvoiceDate?: Date;
        TotalAmount?: number;
        AmountPaid?: number;
        AmountBalance?: number;
        InvoiceTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TaxOverride entity interface.
     */
    export interface TaxOverride {
        Code?: string;
        SourceTaxGroup?: string;
        DestinationTaxGroup?: string;
        SourceItemTaxGroup?: string;
        DestinationItemTaxGroup?: string;
        ChannelId?: number;
        AdditionalDescription?: string;
        Status?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TenderType entity interface.
     */
    export interface TenderType {
        Function: number;
        TenderTypeId?: string;
        Name?: string;
        OperationId?: number;
        OperationName?: string;
        ChangeTenderTypeId?: string;
        AboveMinimumChangeAmount?: number;
        AboveMinimumChangeTenderTypeId?: string;
        OpenDrawer?: boolean;
        UseSignatureCaptureDevice?: boolean;
        MinimumSignatureCaptureAmount?: number;
        IsOvertenderAllowed?: boolean;
        IsUndertenderAllowed?: boolean;
        MaximumOvertenderAmount?: number;
        MaximumUndertenderAmount?: number;
        MaximumAmountPerTransaction?: number;
        MaximumAmountPerLine?: number;
        MinimumAmountPerTransaction?: number;
        MinimumAmountPerLine?: number;
        RoundOff?: number;
        CountingRequired?: number;
        TakenToBank?: number;
        TakenToSafe?: number;
        ConnectorId?: string;
        GiftCardItem?: string;
        GiftCardCashoutOutThreshold?: number;
        ChangeLineOnReceipt?: string;
        HideCardInputDetails?: boolean;
        CashDrawerLimitEnabled?: boolean;
        CashDrawerLimit?: number;
        RestrictReturnsWithoutReceipt?: boolean;
        HasTenderDiscount?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReasonCode entity interface.
     */
    export interface ReasonCode {
        InputRequired: boolean;
        LinkedReasonCodeId?: string;
        MaximumLength: number;
        MaximumValue: number;
        MinimumLength: number;
        MinimumValue: number;
        OncePerTransaction: boolean;
        PrintInputNameOnReceipt: boolean;
        PrintInputToReceipt: boolean;
        PrintPromptToReceipt: boolean;
        Prompt?: string;
        RandomFactor: number;
        RetailUseReasonCode: boolean;
        ReasonCodeId?: string;
        Description?: string;
        InputTypeValue?: number;
        ActivityValue?: number;
        IsMultiLineText?: boolean;
        ReasonSubCodes?: Entities.ReasonSubCode[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReportDataSet entity interface.
     */
    export interface ReportDataSet {
        ReportId?: string;
        Parameters?: Entities.CommerceProperty[];
        Locale?: string;
        Output?: Entities.ReportRow[];
        HasTotalRow?: boolean;
        HasDisclaimer?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ZipCodeInfo entity interface.
     */
    export interface ZipCodeInfo {
        ZipPostalCode?: string;
        StreetName?: string;
        TimeZone?: number;
        CountryRegionId?: string;
        StateId?: string;
        CountyId?: string;
        CityName?: string;
        CityAlias?: string;
        District?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReasonCodeRequirement entity interface.
     */
    export interface ReasonCodeRequirement {
        ReasonCodeId?: string;
        SourceId?: string;
        TableRefTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * QueryResultSettings entity interface.
     */
    export interface QueryResultSettings {
        Paging?: Entities.PagingInfo;
        Sorting?: Entities.SortingInfo;
        
    }
    
    /**
     * SortingInfo entity interface.
     */
    export interface SortingInfo {
        Columns?: Entities.SortColumn[];
        
    }
    
    /**
     * SortColumn entity interface.
     */
    export interface SortColumn {
        ColumnName?: string;
        IsDescending?: boolean;
        
    }
    
    /**
     * PagingInfo entity interface.
     */
    export interface PagingInfo {
        Top?: number;
        Skip?: number;
        
    }
    
    /**
     * ProductPropertyTranslation entity interface.
     */
    export interface ProductPropertyTranslation {
        TranslationLanguage?: string;
        TranslatedProperties?: Entities.ProductProperty[];
        
    }
    
    /**
     * NumberSequenceSeedData entity interface.
     */
    export interface NumberSequenceSeedData {
        DataTypeValue?: number;
        DataValue?: number;
        LastTransactionDataValue?: number;
        LastTransactionCreatedDateTime?: Date;
        LastTransactionId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReceiptNumberResetInfo entity interface.
     */
    export interface ReceiptNumberResetInfo {
        ValidFrom?: Date;
        ValidTo?: Date;
        ResetDate?: Date;
        TypeValue?: number;
        Enabled?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DeviceActivationResult entity interface.
     */
    export interface DeviceActivationResult {
        Device?: Entities.Device;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PurchaseHistory entity interface.
     */
    export interface PurchaseHistory {
        DatePurchased?: Date;
        ImageUrl?: string;
        ItemId?: string;
        ProductId?: number;
        ProductName?: string;
        ReceiptId?: string;
        SalesId?: string;
        ChannelId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Node entity interface.
     */
    export interface Node {
        ParentScopeId?: string;
        ParentSequence?: number;
        Id?: string;
        Sequence?: number;
        Description?: string;
        ScreenshotUri?: string;
        
    }
    
    /**
     * Line entity interface.
     */
    export interface Line {
        ChildrenIds?: number[];
        Id?: number;
        Name?: string;
        Description?: string;
        IsLinked?: boolean;
        LineMetadataId?: number;
        Artifacts?: Entities.ArtifactSummary[];
        MetadataPropertyValues?: Entities.MetadataPropertyValue[];
        
    }
    
    /**
     * Scope entity interface.
     */
    export interface Scope extends Node {
        Name?: string;
        ScopeTypeValue: number;
        Children?: Entities.Node[];
        ActiveCount: number;
        IsForm?: boolean;
        
    }
    
    /**
     * Framework entity interface.
     */
    export interface Framework {
        Lines?: Entities.Line[];
        Id?: number;
        Name?: string;
        Access?: string;
        Hierarchy?: Entities.Line[];
        Publisher?: string;
        
    }
    
    /**
     * UserAction entity interface.
     */
    export interface UserAction extends Node {
        SystemGenerated?: boolean;
        GlobalId?: string;
        Annotations?: Entities.Annotation[];
        
    }
    
    /**
     * TaskUserAction entity interface.
     */
    export interface TaskUserAction extends UserAction {
        UserActionTypeValue: number;
        Name?: string;
        Comment?: string;
        TaskId?: string;
        
    }
    
    /**
     * FormUserAction entity interface.
     */
    export interface FormUserAction extends UserAction {
        FormId?: string;
        ControlLabel?: string;
        
    }
    
    /**
     * CommandUserAction entity interface.
     */
    export interface CommandUserAction extends FormUserAction {
        ReturnTypeValue: number;
        CommandName?: string;
        ControlName?: string;
        ControlType?: string;
        Arguments?: Entities.CommandArgument[];
        LabelId?: string;
        ReturnValue?: string;
        
    }
    
    /**
     * Annotation entity interface.
     */
    export interface Annotation {
        Description?: string;
        
    }
    
    /**
     * Recording entity interface.
     */
    export interface Recording {
        Scopes?: Entities.Scope[];
        FormContextEntries?: Entities.FormContextDictionaryEntry[];
        RootScope?: Entities.Scope;
        Name?: string;
        Description?: string;
        
    }
    
    /**
     * FormContextDictionaryEntry entity interface.
     */
    export interface FormContextDictionaryEntry {
        FormId?: string;
        FormContext?: Entities.FormContext;
        
    }
    
    /**
     * ProductVariantResolutionContext entity interface.
     */
    export interface ProductVariantResolutionContext {
        
    }
    
    /**
     * ProductVariantResolutionOnKitSelectionContext entity interface.
     */
    export interface ProductVariantResolutionOnKitSelectionContext extends ProductVariantResolutionContext {
        SelectedComponents?: Entities.ComponentInSlotRelation[];
        SlotId?: number;
        
    }
    
    /**
     * WarehouseLocation entity interface.
     */
    export interface WarehouseLocation {
        LocationId?: string;
        IsLicensePlateControlled: boolean;
        ProfileId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalTransaction entity interface.
     */
    export interface FiscalTransaction {
        CreatedDateTime?: Date;
        StoreId?: string;
        TerminalId?: string;
        TransactionId?: string;
        TransDateTime?: Date;
        LineNumber?: number;
        RegisterResponse?: string;
        ReceiptCopy?: boolean;
        RecordGUID?: string;
        RegisterStoreId?: string;
        RegisterTerminalId?: string;
        StaffId?: string;
        RegistrationStatusValue?: number;
        RegistrationProcessId?: string;
        ConnectorGroup?: string;
        ConnectorName?: string;
        ConnectorFunctionalityProfileId?: string;
        RegisterInfo?: string;
        DocumentNumber?: string;
        RegistrationTypeValue?: number;
        ServiceName?: string;
        CountryRegionIsoCode?: string;
        TenderLineAdjustments?: Entities.FiscalTransactionTenderLineAdjustment[];
        SalesLineAdjustments?: Entities.FiscalTransactionSalesLineAdjustment[];
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FulfillmentLine entity interface.
     */
    export interface FulfillmentLine {
        SalesId?: string;
        SalesPersonStoreId?: string;
        SalesPersonId?: string;
        SalesPersonFirstName?: string;
        SalesPersonLastName?: string;
        SalesLineNumber?: number;
        ReceiptId?: string;
        ChannelReferenceId?: string;
        CustomerId?: string;
        CustomerName?: string;
        EmailAddress?: string;
        DeliveryModeCode?: string;
        DocumentStatusValue?: number;
        FulfillmentDeliveryType?: Entities.FulfillmentLineDeliveryType;
        DeliveryTypeValue?: number;
        QuantityOrdered?: number;
        QuantityPicked?: number;
        QuantityPacked?: number;
        QuantityInvoiced?: number;
        StoreInventoryTotalQuantity?: number;
        StoreInventoryReservedQuantity?: number;
        StoreInventoryOrderedQuantity?: number;
        ItemId?: string;
        ProductId?: number;
        ProductVariant?: string;
        ItemName?: string;
        FulfillmentStatus?: Entities.FulfillmentLineStatus;
        FulfillmentStatusValue?: number;
        UnitOfMeasureSymbol?: string;
        RequestedShipDate?: Date;
        RequestedDeliveryDate?: Date;
        RequestedReceiptDate?: Date;
        CreatedDate?: Date;
        TotalAmount?: number;
        Balance?: number;
        ShippingAddress?: Entities.Address;
        DetailedOrderStatusValue?: number;
        DetailedLineStatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FulfillmentLineSearchCriteria entity interface.
     */
    export interface FulfillmentLineSearchCriteria {
        CustomerId?: string;
        CustomerName?: string;
        EmailAddress?: string;
        SalesId?: string;
        OrderCreatedStartDate?: Date;
        OrderCreatedEndDate?: Date;
        ReceiptId?: string;
        StoreId?: string;
        ChannelReferenceId?: string;
        RequestedReceiptStartDate?: Date;
        RequestedReceiptEndDate?: Date;
        RequestedDeliveryStartDate?: Date;
        RequestedDeliveryEndDate?: Date;
        FulfillmentStatusValues?: number[];
        DeliveryModeCode?: string;
        WarehouseId?: string;
        LoyaltyCardNumber?: string;
        CustomerPhoneNumber?: string;
        DeliveryTypeValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Comment entity interface.
     */
    export interface Comment {
        RecordId?: number;
        AuthorStaffId?: string;
        AuthorName?: string;
        Text?: string;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AddressPurpose entity interface.
     */
    export interface AddressPurpose {
        RecordId: number;
        AddressType: number;
        Name?: string;
        Description?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DeliveryChargeLine entity interface.
     */
    export interface DeliveryChargeLine {
        ChargeCode?: string;
        CurrencyCode?: string;
        CalculatedAmount: number;
        Description?: string;
        IsRefundable: boolean;
        IsShipping: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ExtensionPackageDefinition entity interface.
     */
    export interface ExtensionPackageDefinition {
        Name?: string;
        Publisher?: string;
        IsEnabled: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReturnPolicy entity interface.
     */
    export interface ReturnPolicy {
        RecordId: number;
        TenderTypePolicies?: Entities.TenderTypePolicy[];
        IsManagerOverrideEnabled: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TenderTypeAmount entity interface.
     */
    export interface TenderTypeAmount {
        TenderTypeId?: string;
        Amount: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FeatureState entity interface.
     */
    export interface FeatureState {
        Name?: string;
        IsEnabled?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Warranty entity interface.
     */
    export interface Warranty extends SimpleProduct {
        DurationUnitValue?: number;
        Duration?: number;
        ApplicablePriceRangeBaseTypeValue?: number;
        ApplicablePriceRangeMin?: number;
        ApplicablePriceRangeMax?: number;
        
    }
    
    /**
     * WarrantyGroup entity interface.
     */
    export interface WarrantyGroup {
        Warranties?: Entities.Warranty[];
        RecordId?: number;
        GroupName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductWarrantiesMapping entity interface.
     */
    export interface ProductWarrantiesMapping {
        WarrantyGroups?: Entities.WarrantyGroup[];
        WarrantableProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FulfillmentLineContextualOperationsMap entity interface.
     */
    export interface FulfillmentLineContextualOperationsMap {
        FulfillmentLine?: Entities.FulfillmentLine;
        ApplicableOperationsValues?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * BusinessPartnerProspect entity interface.
     */
    export interface BusinessPartnerProspect {
        FirstName?: string;
        LastName?: string;
        CompanyName?: string;
        Address?: Entities.Address;
        JobTitle?: string;
        Department?: string;
        CompanySize?: number;
        Comments?: string;
        LastOperationId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChecklistTask entity interface.
     */
    export interface ChecklistTask {
        Version?: string;
        AssignedToPersonnelNumbers?: string[];
        Id?: string;
        Name?: string;
        Description?: string;
        DueDateTime?: Date;
        DeepLinkTypeValue?: number;
        DeepLink?: string;
        DeepLinkPosOperationName?: string;
        ContactPersonPersonnelNumber?: string;
        Instructions?: string;
        StatusValue?: number;
        CompletionDateTime?: Date;
        ResolvedByPersonnelNumber?: string;
        ChecklistId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * MediaLocation entity interface.
     */
    export interface MediaLocation {
        Uri?: string;
        AltText?: string;
        IsDefault?: boolean;
        IsSelfHosted?: boolean;
        Priority?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * EmployeeActivity entity interface.
     */
    export interface EmployeeActivity {
        StaffId?: string;
        StaffName?: string;
        Activity?: string;
        ActivityDateTimeOffset?: Date;
        StoreNumber?: string;
        EmployeeActivityTypeValue?: number;
        BreakCategory?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TokenizedPaymentCard entity interface.
     */
    export interface TokenizedPaymentCard {
        IsSwipe?: boolean;
        TenderType?: string;
        CardTokenInfo?: Entities.CardTokenInfo;
        Phone?: string;
        Country?: string;
        House?: string;
        Address1?: string;
        Address2?: string;
        City?: string;
        State?: string;
        Zip?: string;
        NameOnCard?: string;
        CardTypeId?: string;
        ExpirationMonth?: number;
        ExpirationYear?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LineShippingAddress entity interface.
     */
    export interface LineShippingAddress {
        LineId?: string;
        ShippingAddress?: Entities.Address;
        
    }
    
    /**
     * CartDeliveryPreferences entity interface.
     */
    export interface CartDeliveryPreferences {
        HeaderDeliveryPreferenceTypeValues?: number[];
        CartLineDeliveryPreferences?: Entities.CartLineDeliveryPreference[];
        
    }
    
    /**
     * LineDeliverySpecification entity interface.
     */
    export interface LineDeliverySpecification {
        LineId?: string;
        DeliverySpecification?: Entities.DeliverySpecification;
        
    }
    
    /**
     * DeliverySpecification entity interface.
     */
    export interface DeliverySpecification {
        DeliveryModeId?: string;
        DeliveryPreferenceTypeValue?: number;
        DeliveryAddress?: Entities.Address;
        PickUpStoreId?: string;
        ElectronicDeliveryEmailAddress?: string;
        ElectronicDeliveryEmailContent?: string;
        ShipFromStoreId?: string;
        
    }
    
    /**
     * OrderSearchCriteria entity interface.
     */
    export interface OrderSearchCriteria {
        CustomerAccountNumber?: string;
        CustomerName?: string;
        EmailAddress?: string;
        LoyaltyCardNumber?: string;
        CustomerPhoneNumber?: string;
        SalesId?: string;
        ReceiptId?: string;
        OrderStatusValues?: number[];
        StartDateTime?: Date;
        EndDateTime?: Date;
        ChannelReferenceId?: string;
        StoreId?: string;
        OrderType?: number;
        CustomFilters?: Entities.SearchFilter[];
        
    }
    
    /**
     * ChecklistSearchCriteria entity interface.
     */
    export interface ChecklistSearchCriteria {
        ChannelId?: number;
        PersonnelNumber?: string;
        ChecklistIds?: string[];
        StatusValues?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TaskSearchCriteria entity interface.
     */
    export interface TaskSearchCriteria {
        ChannelId?: number;
        PersonnelNumber?: string;
        TaskIds?: string[];
        StatusValues?: number[];
        FilterMyTasks: boolean;
        FilterOverdueTasks: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TenderDiscountLine entity interface.
     */
    export interface TenderDiscountLine {
        DiscountAmount?: number;
        PaymentAmount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReceiptRetrievalCriteria entity interface.
     */
    export interface ReceiptRetrievalCriteria {
        IsCopy?: boolean;
        IsRemoteTransaction?: boolean;
        IsPreview?: boolean;
        QueryBySalesId?: boolean;
        ReceiptTypeValue?: number;
        ShiftId?: number;
        ShiftTerminalId?: string;
        HardwareProfileId?: string;
        
    }
    
    /**
     * CartSearchCriteria entity interface.
     */
    export interface CartSearchCriteria {
        CartId?: string;
        ExpectedCartVersion?: number;
        CustomerAccountNumber?: string;
        IncludeAnonymous?: boolean;
        SuspendedOnly?: boolean;
        CartTypeValue?: number;
        LastModifiedDateTimeFrom?: Date;
        LastModifiedDateTimeTo?: Date;
        
    }
    
    /**
     * RetrievePaymentResultSettings entity interface.
     */
    export interface RetrievePaymentResultSettings {
        ReturnUrl?: string;
        
    }
    
    /**
     * SearchReceiptCriteria entity interface.
     */
    export interface SearchReceiptCriteria {
        TransactionId?: string;
        ReceiptTypeValue?: number;
        
    }
    
    /**
     * ElectronicAddress entity interface.
     */
    export interface ElectronicAddress {
        AddressTypeValue?: number;
        Address?: string;
        
    }
    
    /**
     * FulfillmentLineParameter entity interface.
     */
    export interface FulfillmentLineParameter {
        SalesId?: string;
        SalesLineNumber?: number;
        Quantity?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShipFulfillmentLine entity interface.
     */
    export interface ShipFulfillmentLine extends FulfillmentLineParameter {
        ProductId?: number;
        
    }
    
    /**
     * RejectFulfillmentLine entity interface.
     */
    export interface RejectFulfillmentLine extends FulfillmentLineParameter {
        RejectedQuantity?: number;
        InfoCodeId?: string;
        SubInfoCodeId?: string;
        
    }
    
    /**
     * ReadChangedProductsSession entity interface.
     */
    export interface ReadChangedProductsSession {
        Id?: string;
        TotalNumberOfProducts?: number;
        NumberOfProductsRead?: number;
        NumberOfProductsReadInCurrentPage?: number;
        NextSynchronizationToken?: string;
        IsInitialSync?: boolean;
        
    }
    
    /**
     * DeletedListingsResult entity interface.
     */
    export interface DeletedListingsResult {
        HasMorePublishedListings?: boolean;
        DeletedListings?: Entities.ListingIdentity[];
        
    }
    
    /**
     * ProductRating entity interface.
     */
    export interface ProductRating {
        ProductId?: number;
        AverageRating?: number;
        TotalRatings?: number;
        RatingDistribution?: Entities.ProductRatingCount[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductDeliveryOptions entity interface.
     */
    export interface ProductDeliveryOptions {
        ProductId?: number;
        DeliveryOptions?: Entities.DeliveryOption[];
        
    }
    
    /**
     * ListingPublishStatus entity interface.
     */
    export interface ListingPublishStatus {
        PublishStatusValue?: number;
        ListingModifiedDateTime?: Date;
        ChannelListingId?: string;
        ChannelId?: number;
        CatalogId?: number;
        ProductId?: number;
        LanguageId?: string;
        AppliedActionValue?: number;
        StatusMessage?: string;
        Tag?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitLocationSearchCriteria entity interface.
     */
    export interface OrgUnitLocationSearchCriteria {
        OrgUnitNumber?: string;
        OrgUnitName?: string;
        InventoryLocationIds?: string[];
        DeliveryModeTypeFilterValue?: number;
        
    }
    
    /**
     * StoreHours entity interface.
     */
    export interface StoreHours {
        RegularStoreHours?: Entities.RegularStoreHours;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CartPromotions entity interface.
     */
    export interface CartPromotions {
        HeaderPromotions?: string[];
        CartLinePromotions?: Entities.CartLinePromotion[];
        
    }
    
    /**
     * CartPromotionLine entity interface.
     */
    export interface CartPromotionLine {
        LineId?: string;
        Promotion?: Entities.Promotion;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ItemUnit entity interface.
     */
    export interface ItemUnit {
        ItemId?: string;
        VariantInventoryDimensionId?: string;
        Product?: number;
        DistinctProductVariant?: number;
        UnitOfMeasure?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductAvailableQuantity entity interface.
     */
    export interface ProductAvailableQuantity {
        ProductId?: number;
        AvailableQuantity?: number;
        UnitOfMeasure?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitAvailabilitySearchCriteria entity interface.
     */
    export interface OrgUnitAvailabilitySearchCriteria {
        OrgUnitName?: string;
        OrgUnitNumber?: string;
        
    }
    
    /**
     * InvoiceSearchCriteria entity interface.
     */
    export interface InvoiceSearchCriteria {
        CustomerId?: string;
        InvoiceIds?: string[];
        InvoiceTypeValues?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PickAndPackSalesLineParameter entity interface.
     */
    export interface PickAndPackSalesLineParameter {
        SalesLineNumber?: number;
        Quantity?: number;
        
    }
    
    /**
     * ProductListSearchCriteria entity interface.
     */
    export interface ProductListSearchCriteria {
        CustomerId?: string;
        ProductListId?: string;
        
    }
    
    /**
     * ProjectionDomain entity interface.
     */
    export interface ProjectionDomain {
        ChannelId?: number;
        CatalogId?: number;
        
    }
    
    /**
     * AffiliationLoyaltyTier entity interface.
     */
    export interface AffiliationLoyaltyTier {
        AffiliationId?: number;
        LoyaltyTierId?: number;
        AffiliationTypeValue?: number;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        CustomerId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ClientBookCustomerSearchCriteria entity interface.
     */
    export interface ClientBookCustomerSearchCriteria {
        FilterByCurrentEmployee?: boolean;
        Refinement?: Entities.ClientBookRefinerValue[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ClientBookCustomer entity interface.
     */
    export interface ClientBookCustomer {
        CustomerId?: string;
        Name?: string;
        Phone?: string;
        Email?: string;
        StaffId?: string;
        ImageUris?: Entities.MediaLocation[];
        Attributes?: Entities.CustomerAttribute[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ClientBookChanges entity interface.
     */
    export interface ClientBookChanges {
        Changes?: Entities.ClientBookChange[];
        
    }
    
    /**
     * ChargeCode entity interface.
     */
    export interface ChargeCode {
        Code?: string;
        ModuleTypeValue?: number;
        Description?: string;
        ItemTaxGroupId?: string;
        IsRefundable?: boolean;
        IsShipping?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PaymentMerchantInformation entity interface.
     */
    export interface PaymentMerchantInformation {
        PaymentConnectorPropertiesXml?: string;
        MerchantPropertiesHashValue?: string;
        ServiceAccountId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * StoreSafe entity interface.
     */
    export interface StoreSafe {
        SafeNumber?: string;
        Name?: string;
        StoreNumber?: string;
        SafeBalance?: number;
        LastUpdatedTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CreateHardwareStationTokenResult entity interface.
     */
    export interface CreateHardwareStationTokenResult {
        HardwareStationToken?: string;
        PairingKey?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ValidateHardwareStationTokenResult entity interface.
     */
    export interface ValidateHardwareStationTokenResult {
        PairingKey?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TerminalDataDownloadRequestInfo entity interface.
     */
    export interface TerminalDataDownloadRequestInfo {
        TerminalId?: string;
        RequiresDataInitialization?: boolean;
        
    }
    
    /**
     * DataDownloadParameters entity interface.
     */
    export interface DataDownloadParameters {
        DownloadInterval?: number;
        DownloadSessions?: Entities.DownloadSession[];
        FeatureControlList?: Entities.RetailSharedConfigurationParameter[];
        DataStore?: Entities.CDXDataStore;
        
    }
    
    /**
     * TerminalDataUploadRequestInfo entity interface.
     */
    export interface TerminalDataUploadRequestInfo {
        TerminalId?: string;
        
    }
    
    /**
     * DataUploadParameters entity interface.
     */
    export interface DataUploadParameters {
        UploadInterval?: number;
        UploadJobPackageRequests?: Entities.UploadJobPackageRequest[];
        FeatureControlList?: Entities.RetailSharedConfigurationParameter[];
        DataStore?: Entities.CDXDataStore;
        
    }
    
    /**
     * DownloadSession entity interface.
     */
    export interface DownloadSession {
        Id?: number;
        JobId?: string;
        JobDescription?: string;
        FileSize?: number;
        RowsAffected?: number;
        Checksum?: string;
        DateDownloaded?: string;
        DateRequested?: string;
        DataStoreName?: string;
        StatusValue?: number;
        Message?: string;
        DownloadLink?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyRewardPointActivity entity interface.
     */
    export interface LoyaltyRewardPointActivity {
        ActivityDate?: Date;
        LoyaltyRewardPointTimelineEntryType?: string;
        ExtensibleLoyaltyRewardPointActivityEntryTypeValue?: number;
        LoyaltyPoints?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CurrencyRequest entity interface.
     */
    export interface CurrencyRequest {
        AmountToConvert?: number;
        CurrencyCode?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareStationProfile entity interface.
     */
    export interface HardwareStationProfile {
        RecordId?: number;
        HardwareStationId?: string;
        HardwareStationTypeValue?: number;
        HardwareProfileId?: string;
        HardwareStationName?: string;
        HardwareStationDescription?: string;
        HardwareStationUrl?: string;
        HardwareStationHostName?: string;
        HardwareStationEftTerminalId?: string;
        HardwareConfigurations?: Entities.HardwareConfigurations;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * NameValuePair entity interface.
     */
    export interface NameValuePair {
        Name?: string;
        Value?: string;
        
    }
    
    /**
     * LinkToExistingCustomerResult entity interface.
     */
    export interface LinkToExistingCustomerResult {
        EmailAddress?: string;
        ExternalIdentityProvider?: string;
        ExternalIdentityLinkRecordId?: number;
        
    }
    
    /**
     * OfflineSyncStatsLine entity interface.
     */
    export interface OfflineSyncStatsLine {
        IsUploadJob?: boolean;
        JobDescription?: string;
        LastSyncDateTime?: Date;
        Status?: string;
        FileSize?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * StorageAccessToken entity interface.
     */
    export interface StorageAccessToken {
        Url?: string;
        SasKey?: string;
        
    }
    
    /**
     * TaskGuidesSearchResult entity interface.
     */
    export interface TaskGuidesSearchResult {
        Lines?: Entities.Line[];
        FrameworkPublisherName?: string;
        FrameworkName?: string;
        
    }
    
    /**
     * AuditEvent entity interface.
     */
    export interface AuditEvent {
        EventId?: number;
        EventIdString?: string;
        Channel?: number;
        Store?: string;
        Terminal?: string;
        UploadType?: string;
        EventType?: string;
        DurationInMilliseconds?: number;
        Source?: string;
        EventMessage?: string;
        LogLevel?: string;
        Staff?: string;
        ShiftId?: number;
        ReferenceId?: number;
        RefChannel?: number;
        RefStore?: string;
        RefTerminal?: string;
        RefTransactionId?: string;
        AuditEventTypeValue?: number;
        FiscalTransactions?: Entities.AuditEventFiscalTransaction[];
        FiscalRegistrationLines?: Entities.AuditEventFiscalRegistrationLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ItemAvailability entity interface.
     */
    export interface ItemAvailability {
        ItemId?: string;
        VariantInventoryDimensionId?: string;
        InventoryLocationId?: string;
        ProductId?: number;
        AvailableQuantity?: number;
        OrderedSum?: number;
        PhysicalReserved?: number;
        UnitOfMeasure?: string;
        InventoryUnitOfMeasure?: string;
        InventoryUnitOfMeasureDescription?: string;
        ProductDimensions?: Entities.ProductDimension[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryAvailableToPromise entity interface.
     */
    export interface InventoryAvailableToPromise extends ItemAvailability {
        Date?: string;
        
    }
    
    /**
     * NotificationItem entity interface.
     */
    export interface NotificationItem {
        Action?: number;
        ActionName?: string;
        NotificationDetails?: Entities.NotificationDetail[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationDocumentRetrievalCriteria entity interface.
     */
    export interface FiscalIntegrationDocumentRetrievalCriteria {
        TransactionId?: string;
        IsRemoteTransaction?: boolean;
        QueryBySalesId?: boolean;
        FiscalRegistrationEventTypeValue?: number;
        ShiftId?: number;
        ShiftTerminalId?: string;
        DocumentContext?: Entities.FiscalIntegrationDocumentContext;
        
    }
    
    /**
     * FiscalIntegrationDocument entity interface.
     */
    export interface FiscalIntegrationDocument {
        Document?: string;
        DocumentGenerationResultTypeValue?: number;
        FiscalConnectorTechnicalProfile?: Entities.FiscalIntegrationTechnicalProfile;
        DocumentAdjustment?: Entities.FiscalIntegrationDocumentAdjustment;
        SequentialSignatureDataContext?: Entities.FiscalIntegrationSignatureDataContext;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationRegistrationResult entity interface.
     */
    export interface FiscalIntegrationRegistrationResult {
        TransactionID?: string;
        AuditEventId?: string;
        Response?: string;
        SubmittedDocument?: string;
        RegisterInfo?: string;
        RegistrationStatusValue?: number;
        FiscalRegistrationEventTypeValue?: number;
        DocumentAdjustment?: Entities.FiscalIntegrationDocumentAdjustment;
        ReasonCodeLines?: Entities.ReasonCodeLine[];
        SequentialSignatureData?: Entities.FiscalIntegrationSequentialSignatureData;
        
    }
    
    /**
     * FiscalIntegrationRegistrationProcess entity interface.
     */
    export interface FiscalIntegrationRegistrationProcess {
        RecordId?: number;
        RegistrationProcessId?: string;
        Description?: string;
        RegistrationProcessLines?: Entities.FiscalIntegrationRegistrationProcessLine[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationSupportedEvents entity interface.
     */
    export interface FiscalIntegrationSupportedEvents {
        FunctionalityProfileGroupId?: string;
        SupportedFiscalEventTypes?: number[];
        SupportedNonFiscalEventTypes?: number[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationTechnicalProfile entity interface.
     */
    export interface FiscalIntegrationTechnicalProfile {
        ProfileId?: string;
        Description?: string;
        ConnectorName?: string;
        ConnectorTypeValue?: number;
        TechnicalProfile?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationTechnicalProfileSearchCriteria entity interface.
     */
    export interface FiscalIntegrationTechnicalProfileSearchCriteria {
        ExcludeOptionalProcessLines?: boolean;
        FunctionalityProfileGroupIds?: string[];
        
    }
    
    /**
     * FiscalIntegrationServiceInfo entity interface.
     */
    export interface FiscalIntegrationServiceInfo {
        ServiceName?: string;
        ServiceProperties?: string;
        
    }
    
    /**
     * FiscalIntegrationServiceStatus entity interface.
     */
    export interface FiscalIntegrationServiceStatus {
        IsReady?: boolean;
        
    }
    
    /**
     * FiscalIntegrationServiceCommunicationResult entity interface.
     */
    export interface FiscalIntegrationServiceCommunicationResult {
        Response?: string;
        CommunicationResultTypeValue?: number;
        FailureDetails?: Entities.FiscalIntegrationServiceFailureDetails;
        FiscalIntegrationServiceInfo?: string;
        UserNotificationMessage?: string;
        
    }
    
    /**
     * FiscalIntegrationSequentialSignatureData entity interface.
     */
    export interface FiscalIntegrationSequentialSignatureData {
        LastRegisterResponse?: string;
        SequenceKey?: string;
        IsOffline?: boolean;
        SequentialNumber?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DiscountsSearchCriteria entity interface.
     */
    export interface DiscountsSearchCriteria {
        ChannelId?: number;
        Keyword?: string;
        IsDiscountCodeRequired?: boolean;
        StartDate?: Date;
        EndDate?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * Promotion entity interface.
     */
    export interface Promotion {
        OfferId?: string;
        OfferName?: string;
        PeriodicDiscountTypeValue?: number;
        IsDiscountCodeRequired?: boolean;
        ValidationPeriodId?: string;
        AdditionalRestrictions?: string;
        Description?: string;
        ValidFromDate?: Date;
        ValidToDate?: Date;
        ValidationPeriod?: Entities.ValidationPeriod;
        CouponCodes?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CategoryPathLookup entity interface.
     */
    export interface CategoryPathLookup {
        ProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CategoryPathResult entity interface.
     */
    export interface CategoryPathResult {
        ProductId?: number;
        CategoryPath?: Entities.CategoryPath[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ExtensionProfile entity interface.
     */
    export interface ExtensionProfile {
        ExtensionServiceUrl?: string;
        AttachedServices?: Entities.AttachedService[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelInventoryConfiguration entity interface.
     */
    export interface ChannelInventoryConfiguration {
        RecordId?: number;
        ChannelId?: string;
        AllowTransferOrderOverDelivery?: boolean;
        AllowTransferOrderUnderDelivery?: boolean;
        UserLocationProfileId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShiftRetrievalCriteria entity interface.
     */
    export interface ShiftRetrievalCriteria {
        ShiftStatusValue?: number;
        FilterByUserRole?: boolean;
        IncludeAllShiftsForStore?: boolean;
        
    }
    
    /**
     * MediaBlob entity interface.
     */
    export interface MediaBlob {
        MediaType?: string;
        Content?: string;
        IsDefault?: boolean;
        AltText?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TerminalInfo entity interface.
     */
    export interface TerminalInfo {
        TerminalId?: string;
        DeviceNumber?: string;
        Name?: string;
        DeviceType?: number;
        ActivationStatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerTimelineItemTypeMap entity interface.
     */
    export interface CustomerTimelineItemTypeMap {
        EntityType?: string;
        Types?: Entities.CustomerTimelineItemType[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerTimelineRefiner entity interface.
     */
    export interface CustomerTimelineRefiner {
        RefinedResultsCount?: number;
        EntityType?: string;
        TypeId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerTitle entity interface.
     */
    export interface CustomerTitle {
        Text?: string;
        RecordId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductWarehouse entity interface.
     */
    export interface ProductWarehouse {
        ProductId?: number;
        InventLocationId?: string;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductWarehouseInventoryInformation entity interface.
     */
    export interface ProductWarehouseInventoryInformation {
        ProductWarehouseInventoryAvailabilities?: Entities.ProductWarehouseInventoryAvailability[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryAvailabilitySearchCriteria entity interface.
     */
    export interface InventoryAvailabilitySearchCriteria {
        ProductIds?: number[];
        DefaultWarehouseOnly?: boolean;
        SearchArea?: Entities.SearchArea;
        FilterByChannelFulfillmentGroup?: boolean;
        DataLevelValue?: number;
        
    }
    
    /**
     * ExtensibleEnumerationContainer entity interface.
     */
    export interface ExtensibleEnumerationContainer {
        TypeName?: string;
        ExtensibleEnumerations?: Entities.ExtensibleEnumeration[];
        
    }
    
    /**
     * PackingSlipData entity interface.
     */
    export interface PackingSlipData {
        PackingSlipId?: string;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * OrgUnitAddress entity interface.
     */
    export interface OrgUnitAddress extends Address {
        
    }
    
    /**
     * WarehouseDetails entity interface.
     */
    export interface WarehouseDetails extends Address {
        InventoryLocationId?: string;
        
    }
    
    /**
     * AttributeBooleanValue entity interface.
     */
    export interface AttributeBooleanValue extends AttributeValueBase {
        Value?: boolean;
        
    }
    
    /**
     * AttributeCurrencyValue entity interface.
     */
    export interface AttributeCurrencyValue extends AttributeValueBase {
        CurrencyValue?: number;
        CurrencyCode?: string;
        
    }
    
    /**
     * AttributeDateTimeOffsetValue entity interface.
     */
    export interface AttributeDateTimeOffsetValue extends AttributeValueBase {
        Value?: Date;
        
    }
    
    /**
     * AttributeFloatValue entity interface.
     */
    export interface AttributeFloatValue extends AttributeValueBase {
        Value?: number;
        UnitSymbol?: string;
        
    }
    
    /**
     * AttributeIntValue entity interface.
     */
    export interface AttributeIntValue extends AttributeValueBase {
        Value?: number;
        UnitSymbol?: string;
        
    }
    
    /**
     * AttributeMediaLocationValue entity interface.
     */
    export interface AttributeMediaLocationValue extends AttributeValueBase {
        Value?: Entities.MediaLocation[];
        
    }
    
    /**
     * AttributeTextValue entity interface.
     */
    export interface AttributeTextValue extends AttributeValueBase {
        TextValue?: string;
        TextValueTranslations?: Entities.TextValueTranslation[];
        
    }
    
    /**
     * ButtonGridButton entity interface.
     */
    export interface ButtonGridButton {
        Action?: number;
        ActionProperty?: string;
        BackColorAsARGB?: Entities.ARGBColor;
        BorderColorAsARGB?: Entities.ARGBColor;
        Column?: number;
        ColumnSpan?: number;
        DisplayText?: string;
        FontColorAsARGB?: Entities.ARGBColor;
        ButtonId?: number;
        Row?: number;
        RowSpan?: number;
        UseCustomLookAndFeel?: boolean;
        PictureAsBase64?: string;
        FontStyle?: number;
        FontSize?: number;
        EnableCustomFontForPOS?: boolean;
        HideButtonText?: boolean;
        Tooltip?: string;
        EnableLiveContent?: boolean;
        NotificationContentAlignment?: number;
        ImageAlignment?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ARGBColor entity interface.
     */
    export interface ARGBColor {
        A?: number;
        R?: number;
        G?: number;
        B?: number;
        
    }
    
    /**
     * ExtensiblePeriodicDiscountOfferType entity interface.
     */
    export interface ExtensiblePeriodicDiscountOfferType extends ExtensibleEnumeration {
        
    }
    
    /**
     * ChargeLineOverride entity interface.
     */
    export interface ChargeLineOverride {
        OriginalAmount?: number;
        OverrideAmount?: number;
        OverrideReasonDescription?: string;
        OverrideDateTime?: Date;
        UserId?: string;
        
    }
    
    /**
     * TaxLineGTE entity interface.
     */
    export interface TaxLineGTE extends TaxLine {
        TaxComponent?: string;
        
    }
    
    /**
     * TaxMeasure entity interface.
     */
    export interface TaxMeasure {
        Path?: string;
        Value?: number;
        DataAreaId?: string;
        SaleLineNumber?: number;
        StoreId?: string;
        TerminalId?: string;
        TransactionId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CardTokenInfo entity interface.
     */
    export interface CardTokenInfo {
        CardToken?: string;
        UniqueCardId?: string;
        ServiceAccountId?: string;
        MaskedCardNumber?: string;
        
    }
    
    /**
     * ProductAttributeMetadataFlags entity interface.
     */
    export interface ProductAttributeMetadataFlags {
        IsSearchable?: boolean;
        IsRetrievable?: boolean;
        IsQueryable?: boolean;
        IsRefinable?: boolean;
        IsSortable?: boolean;
        IsMultiValue?: boolean;
        IsTokenNormalization?: boolean;
        IsCompleteMatch?: boolean;
        
    }
    
    /**
     * UnitOfMeasureConversion entity interface.
     */
    export interface UnitOfMeasureConversion {
        ItemId?: string;
        FromUnitOfMeasureId?: string;
        ToUnitOfMeasureId?: string;
        FromUnitOfMeasureSymbol?: string;
        ToUnitOfMeasureSymbol?: string;
        IsBackward?: boolean;
        RecordId?: number;
        ProductRecordId?: number;
        Factor?: number;
        Numerator?: number;
        Denominator?: number;
        InnerOffset?: number;
        OuterOffset?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PriceLine entity interface.
     */
    export interface PriceLine {
        RecordId?: number;
        Value?: number;
        PriceMethod?: string;
        OriginId?: string;
        PriceChangedByExtensions?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * BasePriceLine entity interface.
     */
    export interface BasePriceLine extends PriceLine {
        
    }
    
    /**
     * PriceAdjustmentPriceLine entity interface.
     */
    export interface PriceAdjustmentPriceLine extends PriceLine {
        IsCompoundable?: boolean;
        Concurrency?: string;
        
    }
    
    /**
     * TradeAgreementPriceLine entity interface.
     */
    export interface TradeAgreementPriceLine extends PriceLine {
        
    }
    
    /**
     * ReturnLabelContent entity interface.
     */
    export interface ReturnLabelContent {
        ReturnLocationText?: string;
        ReturnWarehouseText?: string;
        ReturnReasonText?: string;
        ReturnPalleteText?: string;
        ItemId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LoyaltyRewardPointLine entity interface.
     */
    export interface LoyaltyRewardPointLine {
        TransactionId?: string;
        SaleLineNumber?: number;
        LoyaltyGroupRecordId?: number;
        LoyaltyCardNumber?: string;
        CustomerAccount?: string;
        EntryDate?: Date;
        EntryTime?: number;
        EntryTypeValue?: number;
        ExpirationDate?: Date;
        LineNumber?: number;
        LoyaltyTierRecordId?: number;
        RewardPointRecordId?: number;
        RewardPointAmountQuantity?: number;
        RewardPointId?: string;
        RewardPointIsRedeemable?: boolean;
        RewardPointType?: string;
        RewardPointCurrency?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TrackingInfo entity interface.
     */
    export interface TrackingInfo {
        TrackingNumber?: string;
        ServiceType?: string;
        PackageWeight?: Entities.Weight;
        ShippedOnDate?: Date;
        Status?: string;
        DeliveredOnDate?: Date;
        EstimatedDeliveryDate?: Date;
        TrackingUrl?: string;
        PackagingType?: string;
        DestinationAddress?: Entities.Address;
        OriginAddress?: Entities.Address;
        ShipmentProgress?: Entities.ShipmentProgress[];
        ShippingCharge?: number;
        
    }
    
    /**
     * Weight entity interface.
     */
    export interface Weight {
        Value?: number;
        Unit?: string;
        
    }
    
    /**
     * ShipmentProgress entity interface.
     */
    export interface ShipmentProgress {
        Location?: Entities.Address;
        DateTime?: Date;
        Activity?: string;
        
    }
    
    /**
     * ShiftKey entity interface.
     */
    export interface ShiftKey {
        ShiftTerminalId?: string;
        ShiftId?: number;
        Store?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AddressFormattingInfo entity interface.
     */
    export interface AddressFormattingInfo {
        AddressComponentNameValue?: number;
        LineNumber?: number;
        IsDataEntryOnly?: boolean;
        NewLine?: boolean;
        Expand?: boolean;
        Inactive?: boolean;
        Special?: boolean;
        NumberOfSpaces?: number;
        Separator?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ScaleUnitConfiguration entity interface.
     */
    export interface ScaleUnitConfiguration {
        Id?: string;
        Name?: string;
        Region?: string;
        
    }
    
    /**
     * HardwareConfigurations entity interface.
     */
    export interface HardwareConfigurations {
        CashDrawerConfigurations?: Entities.HardwareConfiguration[];
        PrinterConfigurations?: Entities.HardwareConfiguration[];
        PinPadConfiguration?: Entities.HardwareConfiguration;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * HardwareConfiguration entity interface.
     */
    export interface HardwareConfiguration {
        RecordId?: number;
        HardwareStationRecordId?: number;
        TerminalId?: string;
        DeviceName?: string;
        IPAddress?: string;
        Port?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * PaymentError entity interface.
     */
    export interface PaymentError {
        Code?: string;
        Message?: string;
        IsLocalized?: boolean;
        
    }
    
    /**
     * Printer entity interface.
     */
    export interface Printer {
        Name?: string;
        PrinterType?: number;
        Terminal?: number;
        PrintBehaviorValue?: number;
        ReceiptLayoutId?: string;
        HardwareProfileId?: string;
        ReceiptType?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TransferOrderJournalLine entity interface.
     */
    export interface TransferOrderJournalLine {
        ItemId?: string;
        ItemName?: string;
        InventDimId?: string;
        TotalQuantityShipped?: number;
        QuantityShipped?: number;
        TransferQuantity?: number;
        UnitId?: string;
        ConfigId?: string;
        InventSizeId?: string;
        InventColorId?: string;
        InventStyleId?: string;
        DeliveryMethod?: string;
        Barcode?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * InventoryDocumentSourceSerialNumberLine entity interface.
     */
    export interface InventoryDocumentSourceSerialNumberLine {
        SourceDocumentTypeValue?: number;
        SourceDocumentId?: string;
        DocumentLineRecordId?: number;
        InventTransRecordId?: number;
        LineId?: string;
        Quantity?: number;
        SerialNumber?: string;
        StatusValue?: number;
        ProductId?: number;
        DataAreaId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * KitTransactionLine entity interface.
     */
    export interface KitTransactionLine {
        ItemId?: string;
        Quantity?: number;
        InventoryDimensionId?: string;
        ProductId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ExtensibleRetailChannelType entity interface.
     */
    export interface ExtensibleRetailChannelType extends ExtensibleEnumeration {
        
    }
    
    /**
     * TenderDetail entity interface.
     */
    export interface TenderDetail {
        LineNumber?: number;
        Amount?: number;
        AmountInForeignCurrency?: number;
        ForeignCurrencyExchangeRate?: number;
        ForeignCurrency?: string;
        BankBagNumber?: string;
        TenderTypeId?: string;
        TenderRecount?: number;
        DenominationDetails?: Entities.DenominationDetail[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DenominationDetail entity interface.
     */
    export interface DenominationDetail {
        Type?: number;
        Currency?: string;
        DenominationAmount?: number;
        QuantityDeclared?: number;
        AmountDeclared?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ButtonGridZone entity interface.
     */
    export interface ButtonGridZone {
        ButtonGridId?: string;
        ZoneId?: string;
        ZoneName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ImageZone entity interface.
     */
    export interface ImageZone {
        PictureId?: number;
        PictureAsBase64?: string;
        ZoneId?: string;
        ZoneName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReportZone entity interface.
     */
    export interface ReportZone {
        ReportRecordId?: number;
        ZoneId?: string;
        ZoneName?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * SalesInvoiceLine entity interface.
     */
    export interface SalesInvoiceLine {
        RecordId?: number;
        ItemId?: string;
        ProductName?: string;
        InventDimensionId?: string;
        InventTransactionId?: string;
        Quantity?: number;
        Price?: number;
        DiscountPercent?: number;
        DiscountAmount?: number;
        BatchId?: string;
        NetAmount?: number;
        Site?: string;
        Warehouse?: string;
        SerialId?: string;
        ColorId?: string;
        SizeId?: string;
        StyleId?: string;
        ConfigId?: string;
        ColorName?: string;
        SizeName?: string;
        StyleName?: string;
        ConfigName?: string;
        SalesTaxGroup?: string;
        ItemTaxGroup?: string;
        SalesMarkup?: number;
        TotalDiscount?: number;
        TotalPercentageDiscount?: number;
        LineDiscount?: number;
        PeriodicDiscount?: number;
        PeriodicPercentageDiscount?: number;
        LineManualDiscountPercentage?: number;
        LineManualDiscountAmount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ReportRow entity interface.
     */
    export interface ReportRow {
        RowData?: Entities.CommerceProperty[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FormAnnotation entity interface.
     */
    export interface FormAnnotation extends Annotation {
        MenuItemLabel?: string;
        MenuItemName?: string;
        MenuItemType?: string;
        
    }
    
    /**
     * TaskGuideAnnotation entity interface.
     */
    export interface TaskGuideAnnotation extends Annotation {
        RecordingValueType?: string;
        Title?: string;
        ExampleText?: string;
        Hidden?: boolean;
        GlobalId?: string;
        
    }
    
    /**
     * CommandArgument entity interface.
     */
    export interface CommandArgument {
        Value?: string;
        IsReference?: boolean;
        
    }
    
    /**
     * PropertyUserAction entity interface.
     */
    export interface PropertyUserAction extends FormUserAction {
        Value?: string;
        ValueLabel?: string;
        PropertyName?: string;
        ControlName?: string;
        ControlType?: string;
        UserActionType?: string;
        IsReference?: boolean;
        LabelId?: string;
        
    }
    
    /**
     * InfoUserAction entity interface.
     */
    export interface InfoUserAction extends UserAction {
        FormId?: string;
        ControlLabel?: string;
        ControlLabelId?: string;
        ControlName?: string;
        Text?: string;
        Notes?: string;
        
    }
    
    /**
     * MenuItemUserAction entity interface.
     */
    export interface MenuItemUserAction extends UserAction {
        MenuItemName?: string;
        MenuItemType?: string;
        NavigationPath?: string[];
        
    }
    
    /**
     * ValidationUserAction entity interface.
     */
    export interface ValidationUserAction extends UserAction {
        Name?: string;
        Comment?: string;
        
    }
    
    /**
     * ArtifactSummary entity interface.
     */
    export interface ArtifactSummary {
        ArtifactType?: string;
        LanguageTags?: string[];
        
    }
    
    /**
     * MetadataPropertyValue entity interface.
     */
    export interface MetadataPropertyValue {
        PropertyId?: string;
        SingleValue?: string;
        MultiValue?: Entities.MetadataText[];
        Tags?: string[];
        ComboBox?: string;
        MultiSelect?: string[];
        Links?: Entities.MetadataHypertextLink[];
        
    }
    
    /**
     * MetadataText entity interface.
     */
    export interface MetadataText {
        Id?: string;
        Text?: string;
        
    }
    
    /**
     * MetadataHypertextLink entity interface.
     */
    export interface MetadataHypertextLink {
        Id?: string;
        DisplayName?: string;
        Url?: string;
        
    }
    
    /**
     * FormContext entity interface.
     */
    export interface FormContext {
        FormID?: string;
        FormName?: string;
        RecordingName?: string;
        HasMetadata?: boolean;
        Sequence?: number;
        Annotations?: Entities.Annotation[];
        
    }
    
    /**
     * ExtensibleFiscalRegistrationType entity interface.
     */
    export interface ExtensibleFiscalRegistrationType extends ExtensibleEnumeration {
        
    }
    
    /**
     * FiscalTransactionTenderLineAdjustment entity interface.
     */
    export interface FiscalTransactionTenderLineAdjustment {
        TenderLineNumber?: number;
        AdjustmentAmount?: number;
        RecordGuid?: string;
        TransactionId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalTransactionSalesLineAdjustment entity interface.
     */
    export interface FiscalTransactionSalesLineAdjustment {
        SalesLineNumber?: number;
        Exclude?: boolean;
        RecordGuid?: string;
        TransactionId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DetailedOrderStatus entity interface.
     */
    export interface DetailedOrderStatus extends ExtensibleEnumeration {
        
    }
    
    /**
     * DetailedLineStatus entity interface.
     */
    export interface DetailedLineStatus extends ExtensibleEnumeration {
        
    }
    
    /**
     * SalesAffiliationLoyaltyTier entity interface.
     */
    export interface SalesAffiliationLoyaltyTier extends AffiliationLoyaltyTier {
        TransactionId?: string;
        ChannelId?: number;
        TerminalId?: string;
        ReceiptId?: string;
        StaffId?: string;
        
    }
    
    /**
     * TaxViewLine entity interface.
     */
    export interface TaxViewLine {
        TaxId?: string;
        TaxAmount?: number;
        
    }
    
    /**
     * Coupon entity interface.
     */
    export interface Coupon {
        CodeId?: string;
        Code?: string;
        DiscountOfferId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerAccountDepositLine entity interface.
     */
    export interface CustomerAccountDepositLine {
        Amount?: number;
        CustomerAccount?: string;
        Comment?: string;
        StoreNumber?: string;
        Terminal?: string;
        Shift?: string;
        TransactionStatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerAttribute entity interface.
     */
    export interface CustomerAttribute {
        AttributeValue?: Entities.CommercePropertyValue;
        Units?: string;
        RecordId?: number;
        Name?: string;
        KeyName?: string;
        DataTypeValue?: number;
        Attribute?: number;
        NameTranslations?: Entities.TextValueTranslation[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ContactInfo entity interface.
     */
    export interface ContactInfo {
        AddressTypeValue?: number;
        RecordId?: number;
        PartyLocationRecordId?: number;
        PartyRecordId?: number;
        PartyNumber?: string;
        Description?: string;
        Value?: string;
        ValueExtension?: string;
        LogisticsLocationId?: string;
        LogisticsLocationRecordId?: number;
        ParentLocation?: number;
        IsPrimary?: boolean;
        IsMobilePhone?: boolean;
        IsPrivate?: boolean;
        IsOptedInMarketing?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ShiftTaxLine entity interface.
     */
    export interface ShiftTaxLine {
        TaxCode?: string;
        TaxAmount?: number;
        TaxRate?: number;
        NetAmount?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * TaxRegistration entity interface.
     */
    export interface TaxRegistration {
        RecordId?: number;
        Name?: string;
        CountryRegionId?: string;
        IsRegistrationNumberUnique?: boolean;
        IsPrimaryAddressRestricted?: boolean;
        TypeApplicabilityRuleRecordId?: number;
        TypeValue?: number;
        Description?: string;
        DirPartyLocationRecordId?: number;
        RegistrationNumber?: string;
        ValidFrom?: Date;
        ValidTo?: Date;
        Issuer?: string;
        IssueDate?: Date;
        Section?: string;
        DirectoryPartyRecordId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ChannelTaxRegistration entity interface.
     */
    export interface ChannelTaxRegistration extends TaxRegistration {
        ChannelId?: number;
        
    }
    
    /**
     * LinkedProduct entity interface.
     */
    export interface LinkedProduct {
        ProductRecordId?: number;
        LinkedProductRecordId?: number;
        Quantity?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * DisplayOrderInCategory entity interface.
     */
    export interface DisplayOrderInCategory {
        CategoryRecordId?: number;
        DisplayOrder?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * RelatedProduct entity interface.
     */
    export interface RelatedProduct {
        ProductRecordId?: number;
        RelatedProductRecordId?: number;
        CatalogId?: number;
        RelationName?: string;
        IsExcludedRelation?: boolean;
        IsDirectRelation?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * KitComponent entity interface.
     */
    export interface KitComponent {
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ListingIdentity entity interface.
     */
    export interface ListingIdentity {
        ProductId?: number;
        LanguageId?: string;
        CatalogId?: number;
        Tag?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductRatingCount entity interface.
     */
    export interface ProductRatingCount {
        Rating?: number;
        Count?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * RegularStoreHours entity interface.
     */
    export interface RegularStoreHours {
        MondayOpenTime?: number;
        MondayCloseTime?: number;
        IsClosedOnMonday?: boolean;
        TuesdayOpenTime?: number;
        TuesdayCloseTime?: number;
        IsClosedOnTuesday?: boolean;
        WednesdayOpenTime?: number;
        WednesdayCloseTime?: number;
        IsClosedOnWednesday?: boolean;
        ThursdayOpenTime?: number;
        ThursdayCloseTime?: number;
        IsClosedOnThursday?: boolean;
        FridayOpenTime?: number;
        FridayCloseTime?: number;
        IsClosedOnFriday?: boolean;
        SaturdayOpenTime?: number;
        SaturdayCloseTime?: number;
        IsClosedOnSaturday?: boolean;
        SundayOpenTime?: number;
        SundayCloseTime?: number;
        IsClosedOnSunday?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ValidationPeriod entity interface.
     */
    export interface ValidationPeriod {
        RecordId?: number;
        PeriodId?: string;
        Description?: string;
        ValidFrom?: Date;
        ValidTo?: Date;
        StartingTime?: number;
        EndingTime?: number;
        IsTimeBounded?: number;
        MondayStartingTime?: number;
        MondayEndingTime?: number;
        IsMondayTimeBounded?: number;
        TuesdayStartingTime?: number;
        TuesdayEndingTime?: number;
        IsTuesdayTimeBounded?: number;
        WednesdayStartingTime?: number;
        WednesdayEndingTime?: number;
        IsWednesdayTimeBounded?: number;
        ThursdayStartingTime?: number;
        ThursdayEndingTime?: number;
        IsThursdayTimeBounded?: number;
        FridayStartingTime?: number;
        FridayEndingTime?: number;
        IsFridayTimeBounded?: number;
        SaturdayStartingTime?: number;
        SaturdayEndingTime?: number;
        IsSaturdayTimeBounded?: number;
        SundayStartingTime?: number;
        SundayEndingTime?: number;
        IsSundayTimeBounded?: number;
        IsEndTimeAfterMidnight?: number;
        IsMondayEndTimeAfterMidnight?: number;
        IsTuesdayEndTimeAfterMidnight?: number;
        IsWednesdayEndTimeAfterMidnight?: number;
        IsThursdayEndTimeAfterMidnight?: number;
        IsFridayEndTimeAfterMidnight?: number;
        IsSaturdayEndTimeAfterMidnight?: number;
        IsSundayEndTimeAfterMidnight?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ClientBookChange entity interface.
     */
    export interface ClientBookChange {
        FromStaffId?: string;
        ToStaffId?: string;
        CustomerId?: string;
        
    }
    
    /**
     * RetailSharedConfigurationParameter entity interface.
     */
    export interface RetailSharedConfigurationParameter {
        RecordId?: number;
        Name?: string;
        Value?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CDXDataStore entity interface.
     */
    export interface CDXDataStore {
        Name?: string;
        RecId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * UploadJobPackageRequest entity interface.
     */
    export interface UploadJobPackageRequest {
        JobId?: string;
        RerunUploadSessionId?: number;
        TargetStorage?: string;
        UploadJobDefintion?: string;
        UploadUrl?: string;
        
    }
    
    /**
     * ExtensibleAuditEventType entity interface.
     */
    export interface ExtensibleAuditEventType extends ExtensibleEnumeration {
        
    }
    
    /**
     * AuditEventFiscalTransaction entity interface.
     */
    export interface AuditEventFiscalTransaction {
        EventId?: number;
        LineNumber?: number;
        RegisterResponse?: string;
        Store?: string;
        TransDateTime?: Date;
        Terminal?: string;
        UploadType?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AuditEventFiscalRegistrationLine entity interface.
     */
    export interface AuditEventFiscalRegistrationLine {
        EventId?: number;
        RegisterResponse?: string;
        StoreId?: string;
        TransactionDateTime?: Date;
        TerminalId?: string;
        UploadType?: string;
        UploadTypeValue?: number;
        StaffId?: string;
        RecordGuid?: string;
        RegistrationStatusValue?: number;
        RegistrationProcessId?: string;
        ConnectorGroup?: string;
        ConnectorName?: string;
        ConnectorFunctionalityProfileId?: string;
        RegisterInfo?: string;
        CreatedDateTime?: Date;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * NotificationDetail entity interface.
     */
    export interface NotificationDetail {
        ActionProperty?: string;
        ItemCount?: number;
        DisplayText?: string;
        IsNew?: boolean;
        LastUpdatedDateTimeStr?: string;
        IsSuccess?: boolean;
        IsLiveContentOnly?: boolean;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationDocumentContext entity interface.
     */
    export interface FiscalIntegrationDocumentContext {
        AuditEvent?: Entities.AuditEvent;
        SignatureData?: Entities.FiscalIntegrationSequentialSignatureData[];
        
    }
    
    /**
     * FiscalIntegrationDocumentAdjustment entity interface.
     */
    export interface FiscalIntegrationDocumentAdjustment {
        TenderLineAdjustments?: Entities.FiscalTransactionTenderLineAdjustment[];
        SalesLineAdjustments?: Entities.FiscalTransactionSalesLineAdjustment[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationSignatureDataContext entity interface.
     */
    export interface FiscalIntegrationSignatureDataContext {
        SequentialSignatureKey?: string;
        SequentialNumber?: number;
        
    }
    
    /**
     * FiscalIntegrationRegistrationProcessLine entity interface.
     */
    export interface FiscalIntegrationRegistrationProcessLine {
        RegistrationProcessId?: string;
        SequenceNumber?: number;
        Priority?: number;
        ConnectorTypeValue?: number;
        FunctionalityProfileGroupId?: string;
        AllowSkip?: boolean;
        AllowMarkAsRegistered?: boolean;
        Optional?: boolean;
        RegistrationSettings?: Entities.FiscalIntegrationRegistrationSettings;
        SupportedFiscalEventTypes?: number[];
        SupportedNonFiscalEventTypes?: number[];
        SequentialKeys?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * FiscalIntegrationRegistrationSettings entity interface.
     */
    export interface FiscalIntegrationRegistrationSettings {
        SkipReasonCode?: string;
        MarkAsRegisteredReasonCode?: string;
        
    }
    
    /**
     * FiscalIntegrationServiceFailureDetails entity interface.
     */
    export interface FiscalIntegrationServiceFailureDetails {
        FailureTypeValue?: number;
        IsRetryAllowed?: boolean;
        ErrorCode?: string;
        ErrorMessage?: string;
        
    }
    
    /**
     * CategoryPath entity interface.
     */
    export interface CategoryPath {
        Segments?: Entities.CategoryPathSegment[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CategoryPathSegment entity interface.
     */
    export interface CategoryPathSegment {
        CategoryName?: string;
        CategoryId?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * AttachedService entity interface.
     */
    export interface AttachedService {
        BaseUrl?: string;
        ServiceId?: string;
        StatusValue?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * CustomerTimelineItemType entity interface.
     */
    export interface CustomerTimelineItemType {
        Description?: string;
        TypeId?: string;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ProductWarehouseInventoryAvailability entity interface.
     */
    export interface ProductWarehouseInventoryAvailability {
        ProductId?: number;
        InventLocationId?: string;
        DataAreaId?: string;
        PhysicalInventory?: number;
        PhysicalReserved?: number;
        TotalAvailable?: number;
        TotalAvailableInventoryLevelLabel?: string;
        TotalAvailableInventoryLevelCode?: string;
        OrderedInTotal?: number;
        PhysicalAvailable?: number;
        PhysicalAvailableInventoryLevelLabel?: string;
        PhysicalAvailableInventoryLevelCode?: string;
        LastInventoryTransactionId?: number;
        UnpostedOnlineOrderedQuantity?: number;
        IsInventoryAvailabilityQuantityReturned?: boolean;
        SumUncountedTransactions?: number;
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * ParameterSet entity interface.
     */
    export interface ParameterSet {
        
    }
    
    /**
     * CartLineValidationResults entity interface.
     */
    export interface CartLineValidationResults {
        ValidationFailuresByCartLines?: Entities.LineDataValidationFailure[];
        
    }
    
    /**
     * CommerceException entity interface.
     */
    export interface CommerceException {
        LocalizedMessage?: string;
        ErrorResourceId?: string;
        
    }
    
    /**
     * DataValidationException entity interface.
     */
    export interface DataValidationException extends CommerceException {
        ValidationResults?: Entities.DataValidationFailure[];
        
    }
    
    /**
     * MissingRequiredReasonCodeException entity interface.
     */
    export interface MissingRequiredReasonCodeException extends DataValidationException {
        RequiredReasonCodes?: Entities.ReasonCode[];
        TransactionRequiredReasonCodeIds?: string[];
        ReasonCodeRequirements?: Entities.ReasonCodeRequirement[];
        
    }
    
    /**
     * SecurityException entity interface.
     */
    export interface SecurityException extends CommerceException {
        
    }
    
    /**
     * DeviceAuthenticationException entity interface.
     */
    export interface DeviceAuthenticationException extends SecurityException {
        
    }
    
    /**
     * HeadquarterTransactionServiceException entity interface.
     */
    export interface HeadquarterTransactionServiceException extends CommerceException {
        
    }
    
    /**
     * UserAuthenticationException entity interface.
     */
    export interface UserAuthenticationException extends SecurityException {
        
    }
    
    /**
     * UserAuthorizationException entity interface.
     */
    export interface UserAuthorizationException extends SecurityException {
        
    }
    
    /**
     * FeatureNotSupportedException entity interface.
     */
    export interface FeatureNotSupportedException extends CommerceException {
        
    }
    
    /**
     * CartValidationException entity interface.
     */
    export interface CartValidationException extends DataValidationException {
        
    }
    
    /**
     * TenderValidationException entity interface.
     */
    export interface TenderValidationException extends DataValidationException {
        TenderTypeId?: string;
        
    }
    
    /**
     * PaymentException entity interface.
     */
    export interface PaymentException extends CommerceException {
        PaymentSdkErrors?: Entities.PaymentError[];
        
    }
    
    /**
     * CommerceDataExchangeException entity interface.
     */
    export interface CommerceDataExchangeException extends CommerceException {
        
    }
    
    /**
     * ExtensibleEnumerationException entity interface.
     */
    export interface ExtensibleEnumerationException extends CommerceException {
        
    }
    
    /**
     * DataValidationFailure entity interface.
     */
    export interface DataValidationFailure {
        ErrorContext?: string;
        ErrorResourceId?: string;
        MemberNames?: string[];
        LocalizedMessage?: string;
        
    }
    
    /**
     * ItemDiscontinuedException entity interface.
     */
    export interface ItemDiscontinuedException extends CommerceException {
        RemovedUnavailableItemIds?: string;
        
    }
    
    /**
     * InventoryDocumentLockedByOtherTerminalException entity interface.
     */
    export interface InventoryDocumentLockedByOtherTerminalException extends DataValidationException {
        WorkingTerminalId?: string;
        CurrentTerminalId?: string;
        
    }
    
    /**
     * InventoryDocumentExceedMaximumQuantityException entity interface.
     */
    export interface InventoryDocumentExceedMaximumQuantityException extends DataValidationException {
        MaximumQuantity: number;
        AllowOverDelivery: boolean;
        
    }
    
    /**
     * CommerceRuntimeCompositionException entity interface.
     */
    export interface CommerceRuntimeCompositionException extends CommerceException {
        
    }
    
    /**
     * ChecklistTaskValidationException entity interface.
     */
    export interface ChecklistTaskValidationException extends DataValidationException {
        
    }
    
    /**
     * InsufficientCredentialLengthException entity interface.
     */
    export interface InsufficientCredentialLengthException extends DataValidationException {
        ActualLength?: number;
        MinLength?: number;
        
    }
    
    /**
     * ExtensibleEnumerationCacheException entity interface.
     */
    export interface ExtensibleEnumerationCacheException extends CommerceException {
        
    }
    
    /**
     * StaffPasswordExpiredException entity interface.
     */
    export interface StaffPasswordExpiredException extends UserAuthenticationException {
        StaffId?: string;
        
    }
    
    /**
     * TenderTypePolicy entity interface.
     */
    export interface TenderTypePolicy {
        OriginalTenderType?: string;
        AllowedReturnTenderTypes?: string[];
        ExtensionProperties?: Entities.CommerceProperty[];
        
    }
    
    /**
     * LineDataValidationFailure entity interface.
     */
    export interface LineDataValidationFailure {
        DataValidationFailure?: Entities.DataValidationFailure;
        LineIndex?: number;
        
    }
    
    /**
     * WrongEndpointException entity interface.
     */
    export interface WrongEndpointException extends CommerceException {
        RedirectUri?: string;
        
    }
    
    /**
     * BadRequestException entity interface.
     */
    export interface BadRequestException extends CommerceException {
        
    }
    
    /**
     * Category entity class.
     */
    export class CategoryClass implements Category {
        public RecordId: number;
        public OfflineImage: string;
        public Name: string;
        public ParentCategory: number;
        public DisplayOrder: number;
        public Images: Entities.MediaLocation[];
        public NameTranslations: Entities.TextValueTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.OfflineImage = odataObject.OfflineImage;
          this.Name = odataObject.Name;
          this.ParentCategory = (odataObject.ParentCategory != null) ? parseInt(odataObject.ParentCategory, 10) : undefined;
          this.DisplayOrder = (odataObject.DisplayOrder != null) ? parseFloat(odataObject.DisplayOrder) : undefined;
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.NameTranslations = undefined;
          if (odataObject.NameTranslations) {
              this.NameTranslations = [];
              for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                  if (odataObject.NameTranslations[i] != null) {
                      if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.NameTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i])
                          }
                      } else {
                          this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                      }
                  } else {
                      this.NameTranslations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Cart entity class.
     */
    export class CartClass implements Cart {
        public AffiliationLines: Entities.AffiliationLoyaltyTier[];
        public IsRequiredAmountPaid: boolean;
        public IsDiscountFullyCalculated: boolean;
        public IgnoreDiscountCalculation: boolean;
        public AmountDue: number;
        public AmountPaid: number;
        public AttributeValues: Entities.AttributeValueBase[];
        public BeginDateTime: Date;
        public BusinessDate: Date;
        public CancellationChargeAmount: number;
        public EstimatedShippingAmount: number;
        public CartLines: Entities.CartLine[];
        public CartTypeValue: number;
        public ChannelId: number;
        public ChargeAmount: number;
        public CustomerOrderRemainingBalance: number;
        public ChargeLines: Entities.ChargeLine[];
        public TaxViewLines: Entities.TaxViewLine[];
        public Comment: string;
        public InvoiceComment: string;
        public Coupons: Entities.Coupon[];
        public CustomerId: string;
        public CustomerOrderModeValue: number;
        public DeliveryMode: string;
        public DeliveryModeChargeAmount: number;
        public DiscountAmount: number;
        public DiscountAmountWithoutTax: number;
        public DiscountCodes: string[];
        public Id: string;
        public SuspendedCartId: string;
        public TransactionTypeValue: number;
        public CustomerAccountDepositLines: Entities.CustomerAccountDepositLine[];
        public IncomeExpenseLines: Entities.IncomeExpenseLine[];
        public IncomeExpenseTotalAmount: number;
        public IsReturnByReceipt: boolean;
        public ReturnTransactionHasLoyaltyPayment: boolean;
        public IsFavorite: boolean;
        public IsRecurring: boolean;
        public IsSuspended: boolean;
        public LoyaltyCardId: string;
        public ModifiedDateTime: Date;
        public Name: string;
        public OrderNumber: string;
        public AvailableDepositAmount: number;
        public OverriddenDepositAmount: number;
        public OverriddenDepositWithoutCarryoutAmount: number;
        public PrepaymentAmountPaid: number;
        public PrepaymentAppliedOnPickup: number;
        public PromotionLines: string[];
        public QuotationExpiryDate: Date;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public ReceiptEmail: string;
        public RequestedDeliveryDate: Date;
        public RequiredDepositAmount: number;
        public RequiredDepositWithoutCarryoutAmount: number;
        public SalesId: string;
        public ShippingAddress: Entities.Address;
        public StaffId: string;
        public SubtotalAmount: number;
        public SubtotalAmountWithoutTax: number;
        public NetPrice: number;
        public SubtotalSalesAmount: number;
        public TaxAmount: number;
        public TaxOnCancellationCharge: number;
        public TaxOverrideCode: string;
        public TenderLines: Entities.TenderLine[];
        public RefundableTenderLines: Entities.TenderLine[];
        public TerminalId: string;
        public TotalAmount: number;
        public TotalSalesAmount: number;
        public TotalReturnAmount: number;
        public TotalCarryoutSalesAmount: number;
        public TotalCustomerOrderSalesAmount: number;
        public TotalManualDiscountAmount: number;
        public TotalManualDiscountPercentage: number;
        public WarehouseId: string;
        public IsCreatedOffline: boolean;
        public CartStatusValue: number;
        public ReceiptTransactionTypeValue: number;
        public CommissionSalesGroup: string;
        public Version: number;
        public TotalItems: number;
        public HasTaxCalculationTriggered: boolean;
        public MerchantProperties: Entities.PaymentMerchantInformation[];
        public HasChargeCalculationTriggered: boolean;
        public FiscalTransactions: Entities.FiscalTransaction[];
        public ShippingChargeAmount: number;
        public OtherChargeAmount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AffiliationLines = undefined;
          if (odataObject.AffiliationLines) {
              this.AffiliationLines = [];
              for (var i = 0; i < odataObject.AffiliationLines.length; i++) {
                  if (odataObject.AffiliationLines[i] != null) {
                      if (odataObject.AffiliationLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.AffiliationLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AffiliationLines[i] = new Commerce.Proxy.Entities[className](odataObject.AffiliationLines[i])
                          }
                      } else {
                          this.AffiliationLines[i] = new AffiliationLoyaltyTierClass(odataObject.AffiliationLines[i]);
                      }
                  } else {
                      this.AffiliationLines[i] = undefined;
                  }
              }
          }
          this.IsRequiredAmountPaid = odataObject.IsRequiredAmountPaid;
          this.IsDiscountFullyCalculated = odataObject.IsDiscountFullyCalculated;
          this.IgnoreDiscountCalculation = odataObject.IgnoreDiscountCalculation;
          this.AmountDue = (odataObject.AmountDue != null) ? parseFloat(odataObject.AmountDue) : undefined;
          this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
          this.AttributeValues = undefined;
          if (odataObject.AttributeValues) {
              this.AttributeValues = [];
              for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                  if (odataObject.AttributeValues[i] != null) {
                      if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i])
                          }
                      } else {
                          this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                      }
                  } else {
                      this.AttributeValues[i] = undefined;
                  }
              }
          }
          this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
            : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.BusinessDate = (odataObject.BusinessDate instanceof Date) ? odataObject.BusinessDate
            : (odataObject.BusinessDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BusinessDate, "Edm.DateTimeOffset", false) : undefined;
          this.CancellationChargeAmount = (odataObject.CancellationChargeAmount != null) ? parseFloat(odataObject.CancellationChargeAmount) : undefined;
          this.EstimatedShippingAmount = (odataObject.EstimatedShippingAmount != null) ? parseFloat(odataObject.EstimatedShippingAmount) : undefined;
          this.CartLines = undefined;
          if (odataObject.CartLines) {
              this.CartLines = [];
              for (var i = 0; i < odataObject.CartLines.length; i++) {
                  if (odataObject.CartLines[i] != null) {
                      if (odataObject.CartLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.CartLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CartLines[i] = new Commerce.Proxy.Entities[className](odataObject.CartLines[i])
                          }
                      } else {
                          this.CartLines[i] = new CartLineClass(odataObject.CartLines[i]);
                      }
                  } else {
                      this.CartLines[i] = undefined;
                  }
              }
          }
          this.CartTypeValue = odataObject.CartTypeValue;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.ChargeAmount = (odataObject.ChargeAmount != null) ? parseFloat(odataObject.ChargeAmount) : undefined;
          this.CustomerOrderRemainingBalance = (odataObject.CustomerOrderRemainingBalance != null) ? parseFloat(odataObject.CustomerOrderRemainingBalance) : undefined;
          this.ChargeLines = undefined;
          if (odataObject.ChargeLines) {
              this.ChargeLines = [];
              for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                  if (odataObject.ChargeLines[i] != null) {
                      if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ChargeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i])
                          }
                      } else {
                          this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                      }
                  } else {
                      this.ChargeLines[i] = undefined;
                  }
              }
          }
          this.TaxViewLines = undefined;
          if (odataObject.TaxViewLines) {
              this.TaxViewLines = [];
              for (var i = 0; i < odataObject.TaxViewLines.length; i++) {
                  if (odataObject.TaxViewLines[i] != null) {
                      if (odataObject.TaxViewLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxViewLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxViewLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxViewLines[i])
                          }
                      } else {
                          this.TaxViewLines[i] = new TaxViewLineClass(odataObject.TaxViewLines[i]);
                      }
                  } else {
                      this.TaxViewLines[i] = undefined;
                  }
              }
          }
          this.Comment = odataObject.Comment;
          this.InvoiceComment = odataObject.InvoiceComment;
          this.Coupons = undefined;
          if (odataObject.Coupons) {
              this.Coupons = [];
              for (var i = 0; i < odataObject.Coupons.length; i++) {
                  if (odataObject.Coupons[i] != null) {
                      if (odataObject.Coupons[i]['@odata.type'] != null) {
                          var className: string = odataObject.Coupons[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Coupons[i] = new Commerce.Proxy.Entities[className](odataObject.Coupons[i])
                          }
                      } else {
                          this.Coupons[i] = new CouponClass(odataObject.Coupons[i]);
                      }
                  } else {
                      this.Coupons[i] = undefined;
                  }
              }
          }
          this.CustomerId = odataObject.CustomerId;
          this.CustomerOrderModeValue = odataObject.CustomerOrderModeValue;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
          this.DiscountCodes = undefined;
          if (odataObject.DiscountCodes) {
              this.DiscountCodes = [];
              for (var i = 0; i < odataObject.DiscountCodes.length; i++) {
                  if (odataObject.DiscountCodes[i] != null) {
                      this.DiscountCodes[i] = odataObject.DiscountCodes[i];              } else {
                      this.DiscountCodes[i] = undefined;
                  }
              }
          }
          this.Id = odataObject.Id;
          this.SuspendedCartId = odataObject.SuspendedCartId;
          this.TransactionTypeValue = odataObject.TransactionTypeValue;
          this.CustomerAccountDepositLines = undefined;
          if (odataObject.CustomerAccountDepositLines) {
              this.CustomerAccountDepositLines = [];
              for (var i = 0; i < odataObject.CustomerAccountDepositLines.length; i++) {
                  if (odataObject.CustomerAccountDepositLines[i] != null) {
                      if (odataObject.CustomerAccountDepositLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.CustomerAccountDepositLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CustomerAccountDepositLines[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAccountDepositLines[i])
                          }
                      } else {
                          this.CustomerAccountDepositLines[i] = new CustomerAccountDepositLineClass(odataObject.CustomerAccountDepositLines[i]);
                      }
                  } else {
                      this.CustomerAccountDepositLines[i] = undefined;
                  }
              }
          }
          this.IncomeExpenseLines = undefined;
          if (odataObject.IncomeExpenseLines) {
              this.IncomeExpenseLines = [];
              for (var i = 0; i < odataObject.IncomeExpenseLines.length; i++) {
                  if (odataObject.IncomeExpenseLines[i] != null) {
                      if (odataObject.IncomeExpenseLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.IncomeExpenseLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.IncomeExpenseLines[i] = new Commerce.Proxy.Entities[className](odataObject.IncomeExpenseLines[i])
                          }
                      } else {
                          this.IncomeExpenseLines[i] = new IncomeExpenseLineClass(odataObject.IncomeExpenseLines[i]);
                      }
                  } else {
                      this.IncomeExpenseLines[i] = undefined;
                  }
              }
          }
          this.IncomeExpenseTotalAmount = (odataObject.IncomeExpenseTotalAmount != null) ? parseFloat(odataObject.IncomeExpenseTotalAmount) : undefined;
          this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
          this.ReturnTransactionHasLoyaltyPayment = odataObject.ReturnTransactionHasLoyaltyPayment;
          this.IsFavorite = odataObject.IsFavorite;
          this.IsRecurring = odataObject.IsRecurring;
          this.IsSuspended = odataObject.IsSuspended;
          this.LoyaltyCardId = odataObject.LoyaltyCardId;
          this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
            : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Name = odataObject.Name;
          this.OrderNumber = odataObject.OrderNumber;
          this.AvailableDepositAmount = (odataObject.AvailableDepositAmount != null) ? parseFloat(odataObject.AvailableDepositAmount) : undefined;
          this.OverriddenDepositAmount = (odataObject.OverriddenDepositAmount != null) ? parseFloat(odataObject.OverriddenDepositAmount) : undefined;
          this.OverriddenDepositWithoutCarryoutAmount = (odataObject.OverriddenDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.OverriddenDepositWithoutCarryoutAmount) : undefined;
          this.PrepaymentAmountPaid = (odataObject.PrepaymentAmountPaid != null) ? parseFloat(odataObject.PrepaymentAmountPaid) : undefined;
          this.PrepaymentAppliedOnPickup = (odataObject.PrepaymentAppliedOnPickup != null) ? parseFloat(odataObject.PrepaymentAppliedOnPickup) : undefined;
          this.PromotionLines = undefined;
          if (odataObject.PromotionLines) {
              this.PromotionLines = [];
              for (var i = 0; i < odataObject.PromotionLines.length; i++) {
                  if (odataObject.PromotionLines[i] != null) {
                      this.PromotionLines[i] = odataObject.PromotionLines[i];              } else {
                      this.PromotionLines[i] = undefined;
                  }
              }
          }
          this.QuotationExpiryDate = (odataObject.QuotationExpiryDate instanceof Date) ? odataObject.QuotationExpiryDate
            : (odataObject.QuotationExpiryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.QuotationExpiryDate, "Edm.DateTimeOffset", false) : undefined;
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.ReceiptEmail = odataObject.ReceiptEmail;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequiredDepositAmount = (odataObject.RequiredDepositAmount != null) ? parseFloat(odataObject.RequiredDepositAmount) : undefined;
          this.RequiredDepositWithoutCarryoutAmount = (odataObject.RequiredDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.RequiredDepositWithoutCarryoutAmount) : undefined;
          this.SalesId = odataObject.SalesId;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
          this.StaffId = odataObject.StaffId;
          this.SubtotalAmount = (odataObject.SubtotalAmount != null) ? parseFloat(odataObject.SubtotalAmount) : undefined;
          this.SubtotalAmountWithoutTax = (odataObject.SubtotalAmountWithoutTax != null) ? parseFloat(odataObject.SubtotalAmountWithoutTax) : undefined;
          this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
          this.SubtotalSalesAmount = (odataObject.SubtotalSalesAmount != null) ? parseFloat(odataObject.SubtotalSalesAmount) : undefined;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.TaxOnCancellationCharge = (odataObject.TaxOnCancellationCharge != null) ? parseFloat(odataObject.TaxOnCancellationCharge) : undefined;
          this.TaxOverrideCode = odataObject.TaxOverrideCode;
          this.TenderLines = undefined;
          if (odataObject.TenderLines) {
              this.TenderLines = [];
              for (var i = 0; i < odataObject.TenderLines.length; i++) {
                  if (odataObject.TenderLines[i] != null) {
                      if (odataObject.TenderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i])
                          }
                      } else {
                          this.TenderLines[i] = new TenderLineClass(odataObject.TenderLines[i]);
                      }
                  } else {
                      this.TenderLines[i] = undefined;
                  }
              }
          }
          this.RefundableTenderLines = undefined;
          if (odataObject.RefundableTenderLines) {
              this.RefundableTenderLines = [];
              for (var i = 0; i < odataObject.RefundableTenderLines.length; i++) {
                  if (odataObject.RefundableTenderLines[i] != null) {
                      if (odataObject.RefundableTenderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.RefundableTenderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RefundableTenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.RefundableTenderLines[i])
                          }
                      } else {
                          this.RefundableTenderLines[i] = new TenderLineClass(odataObject.RefundableTenderLines[i]);
                      }
                  } else {
                      this.RefundableTenderLines[i] = undefined;
                  }
              }
          }
          this.TerminalId = odataObject.TerminalId;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.TotalSalesAmount = (odataObject.TotalSalesAmount != null) ? parseFloat(odataObject.TotalSalesAmount) : undefined;
          this.TotalReturnAmount = (odataObject.TotalReturnAmount != null) ? parseFloat(odataObject.TotalReturnAmount) : undefined;
          this.TotalCarryoutSalesAmount = (odataObject.TotalCarryoutSalesAmount != null) ? parseFloat(odataObject.TotalCarryoutSalesAmount) : undefined;
          this.TotalCustomerOrderSalesAmount = (odataObject.TotalCustomerOrderSalesAmount != null) ? parseFloat(odataObject.TotalCustomerOrderSalesAmount) : undefined;
          this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
          this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
          this.WarehouseId = odataObject.WarehouseId;
          this.IsCreatedOffline = odataObject.IsCreatedOffline;
          this.CartStatusValue = odataObject.CartStatusValue;
          this.ReceiptTransactionTypeValue = odataObject.ReceiptTransactionTypeValue;
          this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
          this.Version = (odataObject.Version != null) ? parseInt(odataObject.Version, 10) : undefined;
          this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
          this.HasTaxCalculationTriggered = odataObject.HasTaxCalculationTriggered;
          this.MerchantProperties = undefined;
          if (odataObject.MerchantProperties) {
              this.MerchantProperties = [];
              for (var i = 0; i < odataObject.MerchantProperties.length; i++) {
                  if (odataObject.MerchantProperties[i] != null) {
                      if (odataObject.MerchantProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.MerchantProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.MerchantProperties[i] = new Commerce.Proxy.Entities[className](odataObject.MerchantProperties[i])
                          }
                      } else {
                          this.MerchantProperties[i] = new PaymentMerchantInformationClass(odataObject.MerchantProperties[i]);
                      }
                  } else {
                      this.MerchantProperties[i] = undefined;
                  }
              }
          }
          this.HasChargeCalculationTriggered = odataObject.HasChargeCalculationTriggered;
          this.FiscalTransactions = undefined;
          if (odataObject.FiscalTransactions) {
              this.FiscalTransactions = [];
              for (var i = 0; i < odataObject.FiscalTransactions.length; i++) {
                  if (odataObject.FiscalTransactions[i] != null) {
                      if (odataObject.FiscalTransactions[i]['@odata.type'] != null) {
                          var className: string = odataObject.FiscalTransactions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FiscalTransactions[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalTransactions[i])
                          }
                      } else {
                          this.FiscalTransactions[i] = new FiscalTransactionClass(odataObject.FiscalTransactions[i]);
                      }
                  } else {
                      this.FiscalTransactions[i] = undefined;
                  }
              }
          }
          this.ShippingChargeAmount = (odataObject.ShippingChargeAmount != null) ? parseFloat(odataObject.ShippingChargeAmount) : undefined;
          this.OtherChargeAmount = (odataObject.OtherChargeAmount != null) ? parseFloat(odataObject.OtherChargeAmount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Customer entity class.
     */
    export class CustomerClass implements Customer {
        public AccountNumber: string;
        public RecordId: number;
        public CreatedDateTime: Date;
        public ChargeGroup: string;
        public PriceGroup: string;
        public IsCustomerTaxInclusive: boolean;
        public Phone: string;
        public PhoneRecordId: number;
        public PhoneExt: string;
        public Cellphone: string;
        public Email: string;
        public EmailRecordId: number;
        public Url: string;
        public UrlRecordId: number;
        public Name: string;
        public PersonNameId: number;
        public FirstName: string;
        public MiddleName: string;
        public LastName: string;
        public DirectoryPartyRecordId: number;
        public PartyNumber: string;
        public CustomerTypeValue: number;
        public Language: string;
        public CustomerGroup: string;
        public CurrencyCode: string;
        public CNPJCPFNumber: string;
        public IdentificationNumber: string;
        public InvoiceAccount: string;
        public MandatoryCreditLimit: boolean;
        public CreditRating: string;
        public CreditLimit: number;
        public Balance: number;
        public Blocked: boolean;
        public BlockedType: number;
        public UseOrderNumberReference: boolean;
        public OrganizationId: string;
        public UsePurchaseRequest: boolean;
        public MultilineDiscountGroup: string;
        public TotalDiscountGroup: string;
        public LineDiscountGroup: string;
        public TaxGroup: string;
        public SalesTaxGroup: string;
        public CommissionSalesGroupId: string;
        public TaxExemptNumber: string;
        public VatNumber: string;
        public TaxOffice: string;
        public NonChargeableAccount: boolean;
        public Tag: string;
        public ReceiptSettings: number;
        public ReceiptEmail: string;
        public OptOutPersonalization: boolean;
        public OptOutWebActivityTracking: boolean;
        public RetailCustomerTableRecordId: number;
        public OfflineImage: string;
        public IsAsyncCustomer: boolean;
        public NewCustomerPartyNumber: string;
        public CustomerAffiliations: Entities.CustomerAffiliation[];
        public Addresses: Entities.Address[];
        public Attributes: Entities.CustomerAttribute[];
        public Images: Entities.MediaLocation[];
        public TitleRecordId: number;
        public IsFloorLimitBlocked: boolean;
        public IsB2b: boolean;
        public IsB2bAdmin: boolean;
        public Contacts: Entities.ContactInfo[];
        public AllowOnAccountPayment: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AccountNumber = odataObject.AccountNumber;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ChargeGroup = odataObject.ChargeGroup;
          this.PriceGroup = odataObject.PriceGroup;
          this.IsCustomerTaxInclusive = odataObject.IsCustomerTaxInclusive;
          this.Phone = odataObject.Phone;
          this.PhoneRecordId = (odataObject.PhoneRecordId != null) ? parseInt(odataObject.PhoneRecordId, 10) : undefined;
          this.PhoneExt = odataObject.PhoneExt;
          this.Cellphone = odataObject.Cellphone;
          this.Email = odataObject.Email;
          this.EmailRecordId = (odataObject.EmailRecordId != null) ? parseInt(odataObject.EmailRecordId, 10) : undefined;
          this.Url = odataObject.Url;
          this.UrlRecordId = (odataObject.UrlRecordId != null) ? parseInt(odataObject.UrlRecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.PersonNameId = (odataObject.PersonNameId != null) ? parseInt(odataObject.PersonNameId, 10) : undefined;
          this.FirstName = odataObject.FirstName;
          this.MiddleName = odataObject.MiddleName;
          this.LastName = odataObject.LastName;
          this.DirectoryPartyRecordId = (odataObject.DirectoryPartyRecordId != null) ? parseInt(odataObject.DirectoryPartyRecordId, 10) : undefined;
          this.PartyNumber = odataObject.PartyNumber;
          this.CustomerTypeValue = odataObject.CustomerTypeValue;
          this.Language = odataObject.Language;
          this.CustomerGroup = odataObject.CustomerGroup;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CNPJCPFNumber = odataObject.CNPJCPFNumber;
          this.IdentificationNumber = odataObject.IdentificationNumber;
          this.InvoiceAccount = odataObject.InvoiceAccount;
          this.MandatoryCreditLimit = odataObject.MandatoryCreditLimit;
          this.CreditRating = odataObject.CreditRating;
          this.CreditLimit = (odataObject.CreditLimit != null) ? parseFloat(odataObject.CreditLimit) : undefined;
          this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
          this.Blocked = odataObject.Blocked;
          this.BlockedType = odataObject.BlockedType;
          this.UseOrderNumberReference = odataObject.UseOrderNumberReference;
          this.OrganizationId = odataObject.OrganizationId;
          this.UsePurchaseRequest = odataObject.UsePurchaseRequest;
          this.MultilineDiscountGroup = odataObject.MultilineDiscountGroup;
          this.TotalDiscountGroup = odataObject.TotalDiscountGroup;
          this.LineDiscountGroup = odataObject.LineDiscountGroup;
          this.TaxGroup = odataObject.TaxGroup;
          this.SalesTaxGroup = odataObject.SalesTaxGroup;
          this.CommissionSalesGroupId = odataObject.CommissionSalesGroupId;
          this.TaxExemptNumber = odataObject.TaxExemptNumber;
          this.VatNumber = odataObject.VatNumber;
          this.TaxOffice = odataObject.TaxOffice;
          this.NonChargeableAccount = odataObject.NonChargeableAccount;
          this.Tag = odataObject.Tag;
          this.ReceiptSettings = odataObject.ReceiptSettings;
          this.ReceiptEmail = odataObject.ReceiptEmail;
          this.OptOutPersonalization = odataObject.OptOutPersonalization;
          this.OptOutWebActivityTracking = odataObject.OptOutWebActivityTracking;
          this.RetailCustomerTableRecordId = (odataObject.RetailCustomerTableRecordId != null) ? parseInt(odataObject.RetailCustomerTableRecordId, 10) : undefined;
          this.OfflineImage = odataObject.OfflineImage;
          this.IsAsyncCustomer = odataObject.IsAsyncCustomer;
          this.NewCustomerPartyNumber = odataObject.NewCustomerPartyNumber;
          this.CustomerAffiliations = undefined;
          if (odataObject.CustomerAffiliations) {
              this.CustomerAffiliations = [];
              for (var i = 0; i < odataObject.CustomerAffiliations.length; i++) {
                  if (odataObject.CustomerAffiliations[i] != null) {
                      if (odataObject.CustomerAffiliations[i]['@odata.type'] != null) {
                          var className: string = odataObject.CustomerAffiliations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CustomerAffiliations[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAffiliations[i])
                          }
                      } else {
                          this.CustomerAffiliations[i] = new CustomerAffiliationClass(odataObject.CustomerAffiliations[i]);
                      }
                  } else {
                      this.CustomerAffiliations[i] = undefined;
                  }
              }
          }
          this.Addresses = undefined;
          if (odataObject.Addresses) {
              this.Addresses = [];
              for (var i = 0; i < odataObject.Addresses.length; i++) {
                  if (odataObject.Addresses[i] != null) {
                      if (odataObject.Addresses[i]['@odata.type'] != null) {
                          var className: string = odataObject.Addresses[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Addresses[i] = new Commerce.Proxy.Entities[className](odataObject.Addresses[i])
                          }
                      } else {
                          this.Addresses[i] = new AddressClass(odataObject.Addresses[i]);
                      }
                  } else {
                      this.Addresses[i] = undefined;
                  }
              }
          }
          this.Attributes = undefined;
          if (odataObject.Attributes) {
              this.Attributes = [];
              for (var i = 0; i < odataObject.Attributes.length; i++) {
                  if (odataObject.Attributes[i] != null) {
                      if (odataObject.Attributes[i]['@odata.type'] != null) {
                          var className: string = odataObject.Attributes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Attributes[i] = new Commerce.Proxy.Entities[className](odataObject.Attributes[i])
                          }
                      } else {
                          this.Attributes[i] = new CustomerAttributeClass(odataObject.Attributes[i]);
                      }
                  } else {
                      this.Attributes[i] = undefined;
                  }
              }
          }
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.TitleRecordId = (odataObject.TitleRecordId != null) ? parseInt(odataObject.TitleRecordId, 10) : undefined;
          this.IsFloorLimitBlocked = odataObject.IsFloorLimitBlocked;
          this.IsB2b = odataObject.IsB2b;
          this.IsB2bAdmin = odataObject.IsB2bAdmin;
          this.Contacts = undefined;
          if (odataObject.Contacts) {
              this.Contacts = [];
              for (var i = 0; i < odataObject.Contacts.length; i++) {
                  if (odataObject.Contacts[i] != null) {
                      if (odataObject.Contacts[i]['@odata.type'] != null) {
                          var className: string = odataObject.Contacts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Contacts[i] = new Commerce.Proxy.Entities[className](odataObject.Contacts[i])
                          }
                      } else {
                          this.Contacts[i] = new ContactInfoClass(odataObject.Contacts[i]);
                      }
                  } else {
                      this.Contacts[i] = undefined;
                  }
              }
          }
          this.AllowOnAccountPayment = odataObject.AllowOnAccountPayment;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Employee entity class.
     */
    export class EmployeeClass implements Employee {
        public StaffId: string;
        public NameOnReceipt: string;
        public Name: string;
        public CultureName: string;
        public NumberOfDaysToPasswordExpiry: number;
        public Permissions: Entities.EmployeePermissions;
        public Images: Entities.MediaLocation[];
        public DefaultImage: string;
        public DefaultCommissionSalesGroup: string;
        public RecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.StaffId = odataObject.StaffId;
          this.NameOnReceipt = odataObject.NameOnReceipt;
          this.Name = odataObject.Name;
          this.CultureName = odataObject.CultureName;
          this.NumberOfDaysToPasswordExpiry = odataObject.NumberOfDaysToPasswordExpiry;
          if (odataObject.Permissions == null) {
              this.Permissions = undefined;
          } else if (odataObject.Permissions['@odata.type'] == null) {
              this.Permissions = new EmployeePermissionsClass(odataObject.Permissions);
          } else {
              var className: string = odataObject.Permissions['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Permissions = new Commerce.Proxy.Entities[className](odataObject.Permissions)
              }
          }

    
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.DefaultImage = odataObject.DefaultImage;
          this.DefaultCommissionSalesGroup = odataObject.DefaultCommissionSalesGroup;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Checklist entity class.
     */
    export class ChecklistClass implements Checklist {
        public RecordId: number;
        public Tasks: Entities.ChecklistTask[];
        public Version: string;
        public ProcessId: string;
        public Name: string;
        public Description: string;
        public AssignedToChannelId: number;
        public AssignedToWorkerPersonnelNumber: string;
        public StatusValue: number;
        public StartDateTime: Date;
        public EndDateTime: Date;
        public TargetDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Tasks = undefined;
          if (odataObject.Tasks) {
              this.Tasks = [];
              for (var i = 0; i < odataObject.Tasks.length; i++) {
                  if (odataObject.Tasks[i] != null) {
                      if (odataObject.Tasks[i]['@odata.type'] != null) {
                          var className: string = odataObject.Tasks[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Tasks[i] = new Commerce.Proxy.Entities[className](odataObject.Tasks[i])
                          }
                      } else {
                          this.Tasks[i] = new ChecklistTaskClass(odataObject.Tasks[i]);
                      }
                  } else {
                      this.Tasks[i] = undefined;
                  }
              }
          }
          this.Version = odataObject.Version;
          this.ProcessId = odataObject.ProcessId;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.AssignedToChannelId = (odataObject.AssignedToChannelId != null) ? parseInt(odataObject.AssignedToChannelId, 10) : undefined;
          this.AssignedToWorkerPersonnelNumber = odataObject.AssignedToWorkerPersonnelNumber;
          this.StatusValue = odataObject.StatusValue;
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.TargetDateTime = (odataObject.TargetDateTime instanceof Date) ? odataObject.TargetDateTime
            : (odataObject.TargetDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TargetDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesOrder entity class.
     */
    export class SalesOrderClass implements SalesOrder {
        public DocumentStatusValue: number;
        public RecordId: number;
        public StatusValue: number;
        public McrOrderStopped: boolean;
        public Shipments: Entities.Shipment[];
        public DetailedOrderStatusValue: number;
        public AffiliationLoyaltyTierLines: Entities.SalesAffiliationLoyaltyTier[];
        public IsRequiredAmountPaid: boolean;
        public IsDiscountFullyCalculated: boolean;
        public IgnoreDiscountCalculation: boolean;
        public AmountDue: number;
        public EstimatedShippingAmount: number;
        public AmountPaid: number;
        public CustomerOrderRemainingBalance: number;
        public AttributeValues: Entities.AttributeValueBase[];
        public AvailableDepositAmount: number;
        public BeginDateTime: Date;
        public CreatedDateTime: Date;
        public BusinessDate: Date;
        public CalculatedDepositAmount: number;
        public CancellationCharge: number;
        public ChannelId: number;
        public ChannelReferenceId: string;
        public ChargeAmount: number;
        public ChargeLines: Entities.ChargeLine[];
        public Comment: string;
        public Coupons: Entities.Coupon[];
        public InvoiceComment: string;
        public ContactInformationCollection: Entities.ContactInformation[];
        public CurrencyCode: string;
        public CustomerAccountDepositLines: Entities.CustomerAccountDepositLine[];
        public CustomerId: string;
        public CustomerOrderModeValue: number;
        public CustomerOrderTypeValue: number;
        public DeliveryMode: string;
        public DeliveryModeChargeAmount: number;
        public DiscountAmount: number;
        public DiscountAmountWithoutTax: number;
        public NetPrice: number;
        public DiscountCodes: string[];
        public EntryStatusValue: number;
        public GrossAmount: number;
        public HasLoyaltyPayment: boolean;
        public Id: string;
        public SuspendedTransactionId: string;
        public IncomeExpenseLines: Entities.IncomeExpenseLine[];
        public IncomeExpenseTotalAmount: number;
        public InventoryLocationId: string;
        public IsCreatedOffline: boolean;
        public IsReturnByReceipt: boolean;
        public IsSuspended: boolean;
        public IsTaxIncludedInPrice: boolean;
        public IsTaxExemptedForPriceInclusive: boolean;
        public LineDiscount: number;
        public LineDiscountCalculationTypeValue: number;
        public LoyaltyCardId: string;
        public LoyaltyDiscountAmount: number;
        public LoyaltyManualDiscountAmount: number;
        public LoyaltyRewardPointLines: Entities.LoyaltyRewardPointLine[];
        public ModifiedDateTime: Date;
        public Name: string;
        public NetAmount: number;
        public NetAmountWithoutTax: number;
        public NetAmountWithNoTax: number;
        public NetAmountWithTax: number;
        public NumberOfItems: number;
        public OverriddenDepositAmount: number;
        public OverriddenDepositWithoutCarryoutAmount: number;
        public PeriodicDiscountAmount: number;
        public TenderDiscountAmount: number;
        public PrepaymentAmountAppliedOnPickup: number;
        public PrepaymentAmountInvoiced: number;
        public PrepaymentAmountPaid: number;
        public QuotationExpiryDate: Date;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public ReceiptEmail: string;
        public ReceiptId: string;
        public RequestedDeliveryDate: Date;
        public RequiredDepositAmount: number;
        public RequiredDepositWithoutCarryoutAmount: number;
        public ReturnTransactionHasLoyaltyPayment: boolean;
        public SalesId: string;
        public SalesPaymentDifference: number;
        public SalesLines: Entities.SalesLine[];
        public ShiftId: number;
        public ShiftTerminalId: string;
        public ShippingAddress: Entities.Address;
        public StaffId: string;
        public StatementCode: string;
        public StoreId: string;
        public SubtotalAmount: number;
        public SubtotalAmountWithoutTax: number;
        public SubtotalSalesAmount: number;
        public TaxAmount: number;
        public TaxAmountExclusive: number;
        public TaxAmountInclusive: number;
        public TaxLines: Entities.TaxLine[];
        public TaxOnCancellationCharge: number;
        public TaxOverrideCode: string;
        public TenderLines: Entities.TenderLine[];
        public RefundableTenderLines: Entities.TenderLine[];
        public TerminalId: string;
        public TotalAmount: number;
        public TotalSalesAmount: number;
        public TotalReturnAmount: number;
        public TotalCarryoutSalesAmount: number;
        public TotalCustomerOrderSalesAmount: number;
        public TotalDiscount: number;
        public TotalManualDiscountAmount: number;
        public TotalManualDiscountPercentage: number;
        public TransactionTypeValue: number;
        public TaxCalculationTypeValue: number;
        public SalesInvoiceAmount: number;
        public GiftCardActiveFrom: Date;
        public GiftCardBalance: number;
        public GiftCardExpireDate: Date;
        public GiftCardHistoryDetails: string;
        public GiftCardIssueAmount: number;
        public GiftCardIdMasked: string;
        public CommissionSalesGroup: string;
        public IsCommissionSalesGroupOverriddenByCustomer: boolean;
        public CommissionSalesGroupSetByCashier: string;
        public HasTaxCalculationTriggered: boolean;
        public HasChargeCalculationTriggered: boolean;
        public ShippingChargeAmount: number;
        public OtherChargeAmount: number;
        public FiscalTransactions: Entities.FiscalTransaction[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentStatusValue = odataObject.DocumentStatusValue;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.StatusValue = odataObject.StatusValue;
          this.McrOrderStopped = odataObject.McrOrderStopped;
          this.Shipments = undefined;
          if (odataObject.Shipments) {
              this.Shipments = [];
              for (var i = 0; i < odataObject.Shipments.length; i++) {
                  if (odataObject.Shipments[i] != null) {
                      if (odataObject.Shipments[i]['@odata.type'] != null) {
                          var className: string = odataObject.Shipments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Shipments[i] = new Commerce.Proxy.Entities[className](odataObject.Shipments[i])
                          }
                      } else {
                          this.Shipments[i] = new ShipmentClass(odataObject.Shipments[i]);
                      }
                  } else {
                      this.Shipments[i] = undefined;
                  }
              }
          }
          this.DetailedOrderStatusValue = odataObject.DetailedOrderStatusValue;
          this.AffiliationLoyaltyTierLines = undefined;
          if (odataObject.AffiliationLoyaltyTierLines) {
              this.AffiliationLoyaltyTierLines = [];
              for (var i = 0; i < odataObject.AffiliationLoyaltyTierLines.length; i++) {
                  if (odataObject.AffiliationLoyaltyTierLines[i] != null) {
                      if (odataObject.AffiliationLoyaltyTierLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.AffiliationLoyaltyTierLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AffiliationLoyaltyTierLines[i] = new Commerce.Proxy.Entities[className](odataObject.AffiliationLoyaltyTierLines[i])
                          }
                      } else {
                          this.AffiliationLoyaltyTierLines[i] = new SalesAffiliationLoyaltyTierClass(odataObject.AffiliationLoyaltyTierLines[i]);
                      }
                  } else {
                      this.AffiliationLoyaltyTierLines[i] = undefined;
                  }
              }
          }
          this.IsRequiredAmountPaid = odataObject.IsRequiredAmountPaid;
          this.IsDiscountFullyCalculated = odataObject.IsDiscountFullyCalculated;
          this.IgnoreDiscountCalculation = odataObject.IgnoreDiscountCalculation;
          this.AmountDue = (odataObject.AmountDue != null) ? parseFloat(odataObject.AmountDue) : undefined;
          this.EstimatedShippingAmount = (odataObject.EstimatedShippingAmount != null) ? parseFloat(odataObject.EstimatedShippingAmount) : undefined;
          this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
          this.CustomerOrderRemainingBalance = (odataObject.CustomerOrderRemainingBalance != null) ? parseFloat(odataObject.CustomerOrderRemainingBalance) : undefined;
          this.AttributeValues = undefined;
          if (odataObject.AttributeValues) {
              this.AttributeValues = [];
              for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                  if (odataObject.AttributeValues[i] != null) {
                      if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i])
                          }
                      } else {
                          this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                      }
                  } else {
                      this.AttributeValues[i] = undefined;
                  }
              }
          }
          this.AvailableDepositAmount = (odataObject.AvailableDepositAmount != null) ? parseFloat(odataObject.AvailableDepositAmount) : undefined;
          this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
            : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.BusinessDate = (odataObject.BusinessDate instanceof Date) ? odataObject.BusinessDate
            : (odataObject.BusinessDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BusinessDate, "Edm.DateTimeOffset", false) : undefined;
          this.CalculatedDepositAmount = (odataObject.CalculatedDepositAmount != null) ? parseFloat(odataObject.CalculatedDepositAmount) : undefined;
          this.CancellationCharge = (odataObject.CancellationCharge != null) ? parseFloat(odataObject.CancellationCharge) : undefined;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.ChargeAmount = (odataObject.ChargeAmount != null) ? parseFloat(odataObject.ChargeAmount) : undefined;
          this.ChargeLines = undefined;
          if (odataObject.ChargeLines) {
              this.ChargeLines = [];
              for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                  if (odataObject.ChargeLines[i] != null) {
                      if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ChargeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i])
                          }
                      } else {
                          this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                      }
                  } else {
                      this.ChargeLines[i] = undefined;
                  }
              }
          }
          this.Comment = odataObject.Comment;
          this.Coupons = undefined;
          if (odataObject.Coupons) {
              this.Coupons = [];
              for (var i = 0; i < odataObject.Coupons.length; i++) {
                  if (odataObject.Coupons[i] != null) {
                      if (odataObject.Coupons[i]['@odata.type'] != null) {
                          var className: string = odataObject.Coupons[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Coupons[i] = new Commerce.Proxy.Entities[className](odataObject.Coupons[i])
                          }
                      } else {
                          this.Coupons[i] = new CouponClass(odataObject.Coupons[i]);
                      }
                  } else {
                      this.Coupons[i] = undefined;
                  }
              }
          }
          this.InvoiceComment = odataObject.InvoiceComment;
          this.ContactInformationCollection = undefined;
          if (odataObject.ContactInformationCollection) {
              this.ContactInformationCollection = [];
              for (var i = 0; i < odataObject.ContactInformationCollection.length; i++) {
                  if (odataObject.ContactInformationCollection[i] != null) {
                      if (odataObject.ContactInformationCollection[i]['@odata.type'] != null) {
                          var className: string = odataObject.ContactInformationCollection[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ContactInformationCollection[i] = new Commerce.Proxy.Entities[className](odataObject.ContactInformationCollection[i])
                          }
                      } else {
                          this.ContactInformationCollection[i] = new ContactInformationClass(odataObject.ContactInformationCollection[i]);
                      }
                  } else {
                      this.ContactInformationCollection[i] = undefined;
                  }
              }
          }
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CustomerAccountDepositLines = undefined;
          if (odataObject.CustomerAccountDepositLines) {
              this.CustomerAccountDepositLines = [];
              for (var i = 0; i < odataObject.CustomerAccountDepositLines.length; i++) {
                  if (odataObject.CustomerAccountDepositLines[i] != null) {
                      if (odataObject.CustomerAccountDepositLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.CustomerAccountDepositLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CustomerAccountDepositLines[i] = new Commerce.Proxy.Entities[className](odataObject.CustomerAccountDepositLines[i])
                          }
                      } else {
                          this.CustomerAccountDepositLines[i] = new CustomerAccountDepositLineClass(odataObject.CustomerAccountDepositLines[i]);
                      }
                  } else {
                      this.CustomerAccountDepositLines[i] = undefined;
                  }
              }
          }
          this.CustomerId = odataObject.CustomerId;
          this.CustomerOrderModeValue = odataObject.CustomerOrderModeValue;
          this.CustomerOrderTypeValue = odataObject.CustomerOrderTypeValue;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
          this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
          this.DiscountCodes = undefined;
          if (odataObject.DiscountCodes) {
              this.DiscountCodes = [];
              for (var i = 0; i < odataObject.DiscountCodes.length; i++) {
                  if (odataObject.DiscountCodes[i] != null) {
                      this.DiscountCodes[i] = odataObject.DiscountCodes[i];              } else {
                      this.DiscountCodes[i] = undefined;
                  }
              }
          }
          this.EntryStatusValue = odataObject.EntryStatusValue;
          this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
          this.HasLoyaltyPayment = odataObject.HasLoyaltyPayment;
          this.Id = odataObject.Id;
          this.SuspendedTransactionId = odataObject.SuspendedTransactionId;
          this.IncomeExpenseLines = undefined;
          if (odataObject.IncomeExpenseLines) {
              this.IncomeExpenseLines = [];
              for (var i = 0; i < odataObject.IncomeExpenseLines.length; i++) {
                  if (odataObject.IncomeExpenseLines[i] != null) {
                      if (odataObject.IncomeExpenseLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.IncomeExpenseLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.IncomeExpenseLines[i] = new Commerce.Proxy.Entities[className](odataObject.IncomeExpenseLines[i])
                          }
                      } else {
                          this.IncomeExpenseLines[i] = new IncomeExpenseLineClass(odataObject.IncomeExpenseLines[i]);
                      }
                  } else {
                      this.IncomeExpenseLines[i] = undefined;
                  }
              }
          }
          this.IncomeExpenseTotalAmount = (odataObject.IncomeExpenseTotalAmount != null) ? parseFloat(odataObject.IncomeExpenseTotalAmount) : undefined;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.IsCreatedOffline = odataObject.IsCreatedOffline;
          this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
          this.IsSuspended = odataObject.IsSuspended;
          this.IsTaxIncludedInPrice = odataObject.IsTaxIncludedInPrice;
          this.IsTaxExemptedForPriceInclusive = odataObject.IsTaxExemptedForPriceInclusive;
          this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
          this.LineDiscountCalculationTypeValue = odataObject.LineDiscountCalculationTypeValue;
          this.LoyaltyCardId = odataObject.LoyaltyCardId;
          this.LoyaltyDiscountAmount = (odataObject.LoyaltyDiscountAmount != null) ? parseFloat(odataObject.LoyaltyDiscountAmount) : undefined;
          this.LoyaltyManualDiscountAmount = (odataObject.LoyaltyManualDiscountAmount != null) ? parseFloat(odataObject.LoyaltyManualDiscountAmount) : undefined;
          this.LoyaltyRewardPointLines = undefined;
          if (odataObject.LoyaltyRewardPointLines) {
              this.LoyaltyRewardPointLines = [];
              for (var i = 0; i < odataObject.LoyaltyRewardPointLines.length; i++) {
                  if (odataObject.LoyaltyRewardPointLines[i] != null) {
                      if (odataObject.LoyaltyRewardPointLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.LoyaltyRewardPointLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyRewardPointLines[i])
                          }
                      } else {
                          this.LoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.LoyaltyRewardPointLines[i]);
                      }
                  } else {
                      this.LoyaltyRewardPointLines[i] = undefined;
                  }
              }
          }
          this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
            : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Name = odataObject.Name;
          this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
          this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
          this.NetAmountWithNoTax = (odataObject.NetAmountWithNoTax != null) ? parseFloat(odataObject.NetAmountWithNoTax) : undefined;
          this.NetAmountWithTax = (odataObject.NetAmountWithTax != null) ? parseFloat(odataObject.NetAmountWithTax) : undefined;
          this.NumberOfItems = (odataObject.NumberOfItems != null) ? parseFloat(odataObject.NumberOfItems) : undefined;
          this.OverriddenDepositAmount = (odataObject.OverriddenDepositAmount != null) ? parseFloat(odataObject.OverriddenDepositAmount) : undefined;
          this.OverriddenDepositWithoutCarryoutAmount = (odataObject.OverriddenDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.OverriddenDepositWithoutCarryoutAmount) : undefined;
          this.PeriodicDiscountAmount = (odataObject.PeriodicDiscountAmount != null) ? parseFloat(odataObject.PeriodicDiscountAmount) : undefined;
          this.TenderDiscountAmount = (odataObject.TenderDiscountAmount != null) ? parseFloat(odataObject.TenderDiscountAmount) : undefined;
          this.PrepaymentAmountAppliedOnPickup = (odataObject.PrepaymentAmountAppliedOnPickup != null) ? parseFloat(odataObject.PrepaymentAmountAppliedOnPickup) : undefined;
          this.PrepaymentAmountInvoiced = (odataObject.PrepaymentAmountInvoiced != null) ? parseFloat(odataObject.PrepaymentAmountInvoiced) : undefined;
          this.PrepaymentAmountPaid = (odataObject.PrepaymentAmountPaid != null) ? parseFloat(odataObject.PrepaymentAmountPaid) : undefined;
          this.QuotationExpiryDate = (odataObject.QuotationExpiryDate instanceof Date) ? odataObject.QuotationExpiryDate
            : (odataObject.QuotationExpiryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.QuotationExpiryDate, "Edm.DateTimeOffset", false) : undefined;
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.ReceiptEmail = odataObject.ReceiptEmail;
          this.ReceiptId = odataObject.ReceiptId;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequiredDepositAmount = (odataObject.RequiredDepositAmount != null) ? parseFloat(odataObject.RequiredDepositAmount) : undefined;
          this.RequiredDepositWithoutCarryoutAmount = (odataObject.RequiredDepositWithoutCarryoutAmount != null) ? parseFloat(odataObject.RequiredDepositWithoutCarryoutAmount) : undefined;
          this.ReturnTransactionHasLoyaltyPayment = odataObject.ReturnTransactionHasLoyaltyPayment;
          this.SalesId = odataObject.SalesId;
          this.SalesPaymentDifference = (odataObject.SalesPaymentDifference != null) ? parseFloat(odataObject.SalesPaymentDifference) : undefined;
          this.SalesLines = undefined;
          if (odataObject.SalesLines) {
              this.SalesLines = [];
              for (var i = 0; i < odataObject.SalesLines.length; i++) {
                  if (odataObject.SalesLines[i] != null) {
                      if (odataObject.SalesLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.SalesLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SalesLines[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLines[i])
                          }
                      } else {
                          this.SalesLines[i] = new SalesLineClass(odataObject.SalesLines[i]);
                      }
                  } else {
                      this.SalesLines[i] = undefined;
                  }
              }
          }
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
          this.StaffId = odataObject.StaffId;
          this.StatementCode = odataObject.StatementCode;
          this.StoreId = odataObject.StoreId;
          this.SubtotalAmount = (odataObject.SubtotalAmount != null) ? parseFloat(odataObject.SubtotalAmount) : undefined;
          this.SubtotalAmountWithoutTax = (odataObject.SubtotalAmountWithoutTax != null) ? parseFloat(odataObject.SubtotalAmountWithoutTax) : undefined;
          this.SubtotalSalesAmount = (odataObject.SubtotalSalesAmount != null) ? parseFloat(odataObject.SubtotalSalesAmount) : undefined;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
          this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
          this.TaxLines = undefined;
          if (odataObject.TaxLines) {
              this.TaxLines = [];
              for (var i = 0; i < odataObject.TaxLines.length; i++) {
                  if (odataObject.TaxLines[i] != null) {
                      if (odataObject.TaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i])
                          }
                      } else {
                          this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                      }
                  } else {
                      this.TaxLines[i] = undefined;
                  }
              }
          }
          this.TaxOnCancellationCharge = (odataObject.TaxOnCancellationCharge != null) ? parseFloat(odataObject.TaxOnCancellationCharge) : undefined;
          this.TaxOverrideCode = odataObject.TaxOverrideCode;
          this.TenderLines = undefined;
          if (odataObject.TenderLines) {
              this.TenderLines = [];
              for (var i = 0; i < odataObject.TenderLines.length; i++) {
                  if (odataObject.TenderLines[i] != null) {
                      if (odataObject.TenderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i])
                          }
                      } else {
                          this.TenderLines[i] = new TenderLineClass(odataObject.TenderLines[i]);
                      }
                  } else {
                      this.TenderLines[i] = undefined;
                  }
              }
          }
          this.RefundableTenderLines = undefined;
          if (odataObject.RefundableTenderLines) {
              this.RefundableTenderLines = [];
              for (var i = 0; i < odataObject.RefundableTenderLines.length; i++) {
                  if (odataObject.RefundableTenderLines[i] != null) {
                      if (odataObject.RefundableTenderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.RefundableTenderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RefundableTenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.RefundableTenderLines[i])
                          }
                      } else {
                          this.RefundableTenderLines[i] = new TenderLineClass(odataObject.RefundableTenderLines[i]);
                      }
                  } else {
                      this.RefundableTenderLines[i] = undefined;
                  }
              }
          }
          this.TerminalId = odataObject.TerminalId;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.TotalSalesAmount = (odataObject.TotalSalesAmount != null) ? parseFloat(odataObject.TotalSalesAmount) : undefined;
          this.TotalReturnAmount = (odataObject.TotalReturnAmount != null) ? parseFloat(odataObject.TotalReturnAmount) : undefined;
          this.TotalCarryoutSalesAmount = (odataObject.TotalCarryoutSalesAmount != null) ? parseFloat(odataObject.TotalCarryoutSalesAmount) : undefined;
          this.TotalCustomerOrderSalesAmount = (odataObject.TotalCustomerOrderSalesAmount != null) ? parseFloat(odataObject.TotalCustomerOrderSalesAmount) : undefined;
          this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
          this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
          this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
          this.TransactionTypeValue = odataObject.TransactionTypeValue;
          this.TaxCalculationTypeValue = odataObject.TaxCalculationTypeValue;
          this.SalesInvoiceAmount = (odataObject.SalesInvoiceAmount != null) ? parseFloat(odataObject.SalesInvoiceAmount) : undefined;
          this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
            : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
          this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
            : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
          this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
          this.GiftCardIdMasked = odataObject.GiftCardIdMasked;
          this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
          this.IsCommissionSalesGroupOverriddenByCustomer = odataObject.IsCommissionSalesGroupOverriddenByCustomer;
          this.CommissionSalesGroupSetByCashier = odataObject.CommissionSalesGroupSetByCashier;
          this.HasTaxCalculationTriggered = odataObject.HasTaxCalculationTriggered;
          this.HasChargeCalculationTriggered = odataObject.HasChargeCalculationTriggered;
          this.ShippingChargeAmount = (odataObject.ShippingChargeAmount != null) ? parseFloat(odataObject.ShippingChargeAmount) : undefined;
          this.OtherChargeAmount = (odataObject.OtherChargeAmount != null) ? parseFloat(odataObject.OtherChargeAmount) : undefined;
          this.FiscalTransactions = undefined;
          if (odataObject.FiscalTransactions) {
              this.FiscalTransactions = [];
              for (var i = 0; i < odataObject.FiscalTransactions.length; i++) {
                  if (odataObject.FiscalTransactions[i] != null) {
                      if (odataObject.FiscalTransactions[i]['@odata.type'] != null) {
                          var className: string = odataObject.FiscalTransactions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FiscalTransactions[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalTransactions[i])
                          }
                      } else {
                          this.FiscalTransactions[i] = new FiscalTransactionClass(odataObject.FiscalTransactions[i]);
                      }
                  } else {
                      this.FiscalTransactions[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Shift entity class.
     */
    export class ShiftClass implements Shift {
        public ShiftId: number;
        public TerminalId: string;
        public StartingAmountTotal: number;
        public FloatingEntryAmountTotal: number;
        public AddToTenderAmountTotal: number;
        public SafeDropTotal: number;
        public BankDropTotal: number;
        public RemoveTenderAmountTotal: number;
        public DeclareTenderAmountTotal: number;
        public OverShortTotal: number;
        public TenderedTotal: number;
        public ChangeTotal: number;
        public IncomeAccountTotal: number;
        public ExpenseAccountTotal: number;
        public CashDrawer: string;
        public StoreRecordId: number;
        public StoreId: string;
        public StaffId: string;
        public CurrentStaffId: string;
        public StatusValue: number;
        public StartDateTime: Date;
        public CloseDateTime: Date;
        public ClosedAtTerminalId: string;
        public CurrentTerminalId: string;
        public SalesTotal: number;
        public StatusDateTime: Date;
        public ReturnsTotal: number;
        public PaidToAccountTotal: number;
        public TaxTotal: number;
        public ChargeTotal: number;
        public DiscountTotal: number;
        public RoundedAmountTotal: number;
        public CustomerCount: number;
        public SaleTransactionCount: number;
        public NoSaleTransactionCount: number;
        public VoidTransactionCount: number;
        public LogOnTransactionCount: number;
        public SuspendedTransactionCount: number;
        public TransactionCount: number;
        public ReceiptsCount: number;
        public ReturnsCount: number;
        public GoodsSoldQty: number;
        public ServicesSoldQty: number;
        public ReceiptCopiesCount: number;
        public ReceiptCopiesTotal: number;
        public PriceOverrideTotal: number;
        public SuspendedTotal: number;
        public SalesTotalIncludingTax: number;
        public SalesTotalExcludingTax: number;
        public SalesGrandTotal: number;
        public ReturnsGrandTotal: number;
        public TaxLines: Entities.ShiftTaxLine[];
        public TenderLines: Entities.ShiftTenderLine[];
        public AccountLines: Entities.ShiftAccountLine[];
        public IsShared: boolean;
        public StartingAmountRunningTotal: number;
        public GiftCardsTotal: number;
        public GiftCardCashOutTotal: number;
        public VoidedSalesTotal: number;
        public ShiftSalesTotal: number;
        public ShiftReturnsTotal: number;
        public HasPendingOfflineTransactions: number;
        public NumberOfUnreconciledLines: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.StartingAmountTotal = (odataObject.StartingAmountTotal != null) ? parseFloat(odataObject.StartingAmountTotal) : undefined;
          this.FloatingEntryAmountTotal = (odataObject.FloatingEntryAmountTotal != null) ? parseFloat(odataObject.FloatingEntryAmountTotal) : undefined;
          this.AddToTenderAmountTotal = (odataObject.AddToTenderAmountTotal != null) ? parseFloat(odataObject.AddToTenderAmountTotal) : undefined;
          this.SafeDropTotal = (odataObject.SafeDropTotal != null) ? parseFloat(odataObject.SafeDropTotal) : undefined;
          this.BankDropTotal = (odataObject.BankDropTotal != null) ? parseFloat(odataObject.BankDropTotal) : undefined;
          this.RemoveTenderAmountTotal = (odataObject.RemoveTenderAmountTotal != null) ? parseFloat(odataObject.RemoveTenderAmountTotal) : undefined;
          this.DeclareTenderAmountTotal = (odataObject.DeclareTenderAmountTotal != null) ? parseFloat(odataObject.DeclareTenderAmountTotal) : undefined;
          this.OverShortTotal = (odataObject.OverShortTotal != null) ? parseFloat(odataObject.OverShortTotal) : undefined;
          this.TenderedTotal = (odataObject.TenderedTotal != null) ? parseFloat(odataObject.TenderedTotal) : undefined;
          this.ChangeTotal = (odataObject.ChangeTotal != null) ? parseFloat(odataObject.ChangeTotal) : undefined;
          this.IncomeAccountTotal = (odataObject.IncomeAccountTotal != null) ? parseFloat(odataObject.IncomeAccountTotal) : undefined;
          this.ExpenseAccountTotal = (odataObject.ExpenseAccountTotal != null) ? parseFloat(odataObject.ExpenseAccountTotal) : undefined;
          this.CashDrawer = odataObject.CashDrawer;
          this.StoreRecordId = (odataObject.StoreRecordId != null) ? parseInt(odataObject.StoreRecordId, 10) : undefined;
          this.StoreId = odataObject.StoreId;
          this.StaffId = odataObject.StaffId;
          this.CurrentStaffId = odataObject.CurrentStaffId;
          this.StatusValue = odataObject.StatusValue;
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.CloseDateTime = (odataObject.CloseDateTime instanceof Date) ? odataObject.CloseDateTime
            : (odataObject.CloseDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CloseDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ClosedAtTerminalId = odataObject.ClosedAtTerminalId;
          this.CurrentTerminalId = odataObject.CurrentTerminalId;
          this.SalesTotal = (odataObject.SalesTotal != null) ? parseFloat(odataObject.SalesTotal) : undefined;
          this.StatusDateTime = (odataObject.StatusDateTime instanceof Date) ? odataObject.StatusDateTime
            : (odataObject.StatusDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StatusDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ReturnsTotal = (odataObject.ReturnsTotal != null) ? parseFloat(odataObject.ReturnsTotal) : undefined;
          this.PaidToAccountTotal = (odataObject.PaidToAccountTotal != null) ? parseFloat(odataObject.PaidToAccountTotal) : undefined;
          this.TaxTotal = (odataObject.TaxTotal != null) ? parseFloat(odataObject.TaxTotal) : undefined;
          this.ChargeTotal = (odataObject.ChargeTotal != null) ? parseFloat(odataObject.ChargeTotal) : undefined;
          this.DiscountTotal = (odataObject.DiscountTotal != null) ? parseFloat(odataObject.DiscountTotal) : undefined;
          this.RoundedAmountTotal = (odataObject.RoundedAmountTotal != null) ? parseFloat(odataObject.RoundedAmountTotal) : undefined;
          this.CustomerCount = odataObject.CustomerCount;
          this.SaleTransactionCount = odataObject.SaleTransactionCount;
          this.NoSaleTransactionCount = odataObject.NoSaleTransactionCount;
          this.VoidTransactionCount = odataObject.VoidTransactionCount;
          this.LogOnTransactionCount = odataObject.LogOnTransactionCount;
          this.SuspendedTransactionCount = odataObject.SuspendedTransactionCount;
          this.TransactionCount = odataObject.TransactionCount;
          this.ReceiptsCount = odataObject.ReceiptsCount;
          this.ReturnsCount = odataObject.ReturnsCount;
          this.GoodsSoldQty = (odataObject.GoodsSoldQty != null) ? parseFloat(odataObject.GoodsSoldQty) : undefined;
          this.ServicesSoldQty = (odataObject.ServicesSoldQty != null) ? parseFloat(odataObject.ServicesSoldQty) : undefined;
          this.ReceiptCopiesCount = odataObject.ReceiptCopiesCount;
          this.ReceiptCopiesTotal = (odataObject.ReceiptCopiesTotal != null) ? parseFloat(odataObject.ReceiptCopiesTotal) : undefined;
          this.PriceOverrideTotal = (odataObject.PriceOverrideTotal != null) ? parseFloat(odataObject.PriceOverrideTotal) : undefined;
          this.SuspendedTotal = (odataObject.SuspendedTotal != null) ? parseFloat(odataObject.SuspendedTotal) : undefined;
          this.SalesTotalIncludingTax = (odataObject.SalesTotalIncludingTax != null) ? parseFloat(odataObject.SalesTotalIncludingTax) : undefined;
          this.SalesTotalExcludingTax = (odataObject.SalesTotalExcludingTax != null) ? parseFloat(odataObject.SalesTotalExcludingTax) : undefined;
          this.SalesGrandTotal = (odataObject.SalesGrandTotal != null) ? parseFloat(odataObject.SalesGrandTotal) : undefined;
          this.ReturnsGrandTotal = (odataObject.ReturnsGrandTotal != null) ? parseFloat(odataObject.ReturnsGrandTotal) : undefined;
          this.TaxLines = undefined;
          if (odataObject.TaxLines) {
              this.TaxLines = [];
              for (var i = 0; i < odataObject.TaxLines.length; i++) {
                  if (odataObject.TaxLines[i] != null) {
                      if (odataObject.TaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i])
                          }
                      } else {
                          this.TaxLines[i] = new ShiftTaxLineClass(odataObject.TaxLines[i]);
                      }
                  } else {
                      this.TaxLines[i] = undefined;
                  }
              }
          }
          this.TenderLines = undefined;
          if (odataObject.TenderLines) {
              this.TenderLines = [];
              for (var i = 0; i < odataObject.TenderLines.length; i++) {
                  if (odataObject.TenderLines[i] != null) {
                      if (odataObject.TenderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderLines[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLines[i])
                          }
                      } else {
                          this.TenderLines[i] = new ShiftTenderLineClass(odataObject.TenderLines[i]);
                      }
                  } else {
                      this.TenderLines[i] = undefined;
                  }
              }
          }
          this.AccountLines = undefined;
          if (odataObject.AccountLines) {
              this.AccountLines = [];
              for (var i = 0; i < odataObject.AccountLines.length; i++) {
                  if (odataObject.AccountLines[i] != null) {
                      if (odataObject.AccountLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.AccountLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AccountLines[i] = new Commerce.Proxy.Entities[className](odataObject.AccountLines[i])
                          }
                      } else {
                          this.AccountLines[i] = new ShiftAccountLineClass(odataObject.AccountLines[i]);
                      }
                  } else {
                      this.AccountLines[i] = undefined;
                  }
              }
          }
          this.IsShared = odataObject.IsShared;
          this.StartingAmountRunningTotal = (odataObject.StartingAmountRunningTotal != null) ? parseFloat(odataObject.StartingAmountRunningTotal) : undefined;
          this.GiftCardsTotal = (odataObject.GiftCardsTotal != null) ? parseFloat(odataObject.GiftCardsTotal) : undefined;
          this.GiftCardCashOutTotal = (odataObject.GiftCardCashOutTotal != null) ? parseFloat(odataObject.GiftCardCashOutTotal) : undefined;
          this.VoidedSalesTotal = (odataObject.VoidedSalesTotal != null) ? parseFloat(odataObject.VoidedSalesTotal) : undefined;
          this.ShiftSalesTotal = (odataObject.ShiftSalesTotal != null) ? parseFloat(odataObject.ShiftSalesTotal) : undefined;
          this.ShiftReturnsTotal = (odataObject.ShiftReturnsTotal != null) ? parseFloat(odataObject.ShiftReturnsTotal) : undefined;
          this.HasPendingOfflineTransactions = odataObject.HasPendingOfflineTransactions;
          this.NumberOfUnreconciledLines = (odataObject.NumberOfUnreconciledLines != null) ? parseFloat(odataObject.NumberOfUnreconciledLines) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * StockCountJournal entity class.
     */
    export class StockCountJournalClass implements StockCountJournal {
        public JournalId: string;
        public RecordId: string;
        public Description: string;
        public InventLocationId: string;
        public DataAreaId: string;
        public StockCountTransactionLines: Entities.StockCountJournalTransaction[];
        public Worker: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.JournalId = odataObject.JournalId;
          this.RecordId = odataObject.RecordId;
          this.Description = odataObject.Description;
          this.InventLocationId = odataObject.InventLocationId;
          this.DataAreaId = odataObject.DataAreaId;
          this.StockCountTransactionLines = undefined;
          if (odataObject.StockCountTransactionLines) {
              this.StockCountTransactionLines = [];
              for (var i = 0; i < odataObject.StockCountTransactionLines.length; i++) {
                  if (odataObject.StockCountTransactionLines[i] != null) {
                      if (odataObject.StockCountTransactionLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.StockCountTransactionLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.StockCountTransactionLines[i] = new Commerce.Proxy.Entities[className](odataObject.StockCountTransactionLines[i])
                          }
                      } else {
                          this.StockCountTransactionLines[i] = new StockCountJournalTransactionClass(odataObject.StockCountTransactionLines[i]);
                      }
                  } else {
                      this.StockCountTransactionLines[i] = undefined;
                  }
              }
          }
          this.Worker = odataObject.Worker;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnit entity class.
     */
    export class OrgUnitClass implements OrgUnit {
        public OrgUnitNumber: string;
        public RecordId: number;
        public InventoryLocationId: string;
        public OMOperatingUnitNumber: string;
        public TaxGroup: string;
        public FunctionalityProfileId: string;
        public UseCustomerBasedTax: boolean;
        public UseCustomerBasedTaxExemption: boolean;
        public UseDestinationBasedTax: boolean;
        public Currency: string;
        public OrgUnitAddress: Entities.Address;
        public OrgUnitFullAddress: string;
        public OrgUnitName: string;
        public Latitude: number;
        public Longitude: number;
        public EmailReceiptProfileId: string;
        public ShippingWarehouseAddress: Entities.Address;
        public TaxRegistrations: Entities.TaxRegistration[];
        public EventNotificationProfileId: string;
        public Name: string;
        public DefaultCustomerAccount: string;
        public CategoryHierarchyId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrgUnitNumber = odataObject.OrgUnitNumber;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.OMOperatingUnitNumber = odataObject.OMOperatingUnitNumber;
          this.TaxGroup = odataObject.TaxGroup;
          this.FunctionalityProfileId = odataObject.FunctionalityProfileId;
          this.UseCustomerBasedTax = odataObject.UseCustomerBasedTax;
          this.UseCustomerBasedTaxExemption = odataObject.UseCustomerBasedTaxExemption;
          this.UseDestinationBasedTax = odataObject.UseDestinationBasedTax;
          this.Currency = odataObject.Currency;
          if (odataObject.OrgUnitAddress == null) {
              this.OrgUnitAddress = undefined;
          } else if (odataObject.OrgUnitAddress['@odata.type'] == null) {
              this.OrgUnitAddress = new AddressClass(odataObject.OrgUnitAddress);
          } else {
              var className: string = odataObject.OrgUnitAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.OrgUnitAddress = new Commerce.Proxy.Entities[className](odataObject.OrgUnitAddress)
              }
          }

    
          this.OrgUnitFullAddress = odataObject.OrgUnitFullAddress;
          this.OrgUnitName = odataObject.OrgUnitName;
          this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
          this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
          this.EmailReceiptProfileId = odataObject.EmailReceiptProfileId;
          if (odataObject.ShippingWarehouseAddress == null) {
              this.ShippingWarehouseAddress = undefined;
          } else if (odataObject.ShippingWarehouseAddress['@odata.type'] == null) {
              this.ShippingWarehouseAddress = new AddressClass(odataObject.ShippingWarehouseAddress);
          } else {
              var className: string = odataObject.ShippingWarehouseAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingWarehouseAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingWarehouseAddress)
              }
          }

    
          this.TaxRegistrations = undefined;
          if (odataObject.TaxRegistrations) {
              this.TaxRegistrations = [];
              for (var i = 0; i < odataObject.TaxRegistrations.length; i++) {
                  if (odataObject.TaxRegistrations[i] != null) {
                      if (odataObject.TaxRegistrations[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxRegistrations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxRegistrations[i] = new Commerce.Proxy.Entities[className](odataObject.TaxRegistrations[i])
                          }
                      } else {
                          this.TaxRegistrations[i] = new TaxRegistrationClass(odataObject.TaxRegistrations[i]);
                      }
                  } else {
                      this.TaxRegistrations[i] = undefined;
                  }
              }
          }
          this.EventNotificationProfileId = odataObject.EventNotificationProfileId;
          this.Name = odataObject.Name;
          this.DefaultCustomerAccount = odataObject.DefaultCustomerAccount;
          this.CategoryHierarchyId = (odataObject.CategoryHierarchyId != null) ? parseInt(odataObject.CategoryHierarchyId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Product entity class.
     */
    export class ProductClass implements Product {
        public RecordId: number;
        public ProductName: string;
        public ProductNumber: string;
        public Description: string;
        public IsMasterProduct: boolean;
        public IsKit: boolean;
        public ItemId: string;
        public HasLinkedProducts: boolean;
        public Rules: Entities.ProductRules;
        public DefaultUnitOfMeasure: string;
        public Name: string;
        public Locale: string;
        public OfflineImage: string;
        public IsRemote: boolean;
        public ChangeTrackingInformation: Entities.ProductChangeTrackingInformation;
        public Image: Entities.RichMediaLocations;
        public UnitsOfMeasureSymbol: string[];
        public LinkedProducts: Entities.LinkedProduct[];
        public BasePrice: number;
        public Price: number;
        public AdjustedPrice: number;
        public RetailContext: Entities.ProjectionDomain;
        public PrimaryCategoryId: number;
        public CategoryIds: number[];
        public DisplayOrderInCategories: Entities.DisplayOrderInCategory[];
        public RelatedProducts: Entities.RelatedProduct[];
        public ProductsRelatedToThis: Entities.RelatedProduct[];
        public ProductSchema: string[];
        public ProductProperties: Entities.ProductPropertyTranslation[];
        public CompositionInformation: Entities.ProductCompositionInformation;
        public ParentKits: Entities.KitComponent[];
        public SearchName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ProductName = odataObject.ProductName;
          this.ProductNumber = odataObject.ProductNumber;
          this.Description = odataObject.Description;
          this.IsMasterProduct = odataObject.IsMasterProduct;
          this.IsKit = odataObject.IsKit;
          this.ItemId = odataObject.ItemId;
          this.HasLinkedProducts = odataObject.HasLinkedProducts;
          if (odataObject.Rules == null) {
              this.Rules = undefined;
          } else if (odataObject.Rules['@odata.type'] == null) {
              this.Rules = new ProductRulesClass(odataObject.Rules);
          } else {
              var className: string = odataObject.Rules['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Rules = new Commerce.Proxy.Entities[className](odataObject.Rules)
              }
          }

    
          this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
          this.Name = odataObject.Name;
          this.Locale = odataObject.Locale;
          this.OfflineImage = odataObject.OfflineImage;
          this.IsRemote = odataObject.IsRemote;
          if (odataObject.ChangeTrackingInformation == null) {
              this.ChangeTrackingInformation = undefined;
          } else if (odataObject.ChangeTrackingInformation['@odata.type'] == null) {
              this.ChangeTrackingInformation = new ProductChangeTrackingInformationClass(odataObject.ChangeTrackingInformation);
          } else {
              var className: string = odataObject.ChangeTrackingInformation['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ChangeTrackingInformation = new Commerce.Proxy.Entities[className](odataObject.ChangeTrackingInformation)
              }
          }

    
          if (odataObject.Image == null) {
              this.Image = undefined;
          } else if (odataObject.Image['@odata.type'] == null) {
              this.Image = new RichMediaLocationsClass(odataObject.Image);
          } else {
              var className: string = odataObject.Image['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Image = new Commerce.Proxy.Entities[className](odataObject.Image)
              }
          }

    
          this.UnitsOfMeasureSymbol = undefined;
          if (odataObject.UnitsOfMeasureSymbol) {
              this.UnitsOfMeasureSymbol = [];
              for (var i = 0; i < odataObject.UnitsOfMeasureSymbol.length; i++) {
                  if (odataObject.UnitsOfMeasureSymbol[i] != null) {
                      this.UnitsOfMeasureSymbol[i] = odataObject.UnitsOfMeasureSymbol[i];              } else {
                      this.UnitsOfMeasureSymbol[i] = undefined;
                  }
              }
          }
          this.LinkedProducts = undefined;
          if (odataObject.LinkedProducts) {
              this.LinkedProducts = [];
              for (var i = 0; i < odataObject.LinkedProducts.length; i++) {
                  if (odataObject.LinkedProducts[i] != null) {
                      if (odataObject.LinkedProducts[i]['@odata.type'] != null) {
                          var className: string = odataObject.LinkedProducts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LinkedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.LinkedProducts[i])
                          }
                      } else {
                          this.LinkedProducts[i] = new LinkedProductClass(odataObject.LinkedProducts[i]);
                      }
                  } else {
                      this.LinkedProducts[i] = undefined;
                  }
              }
          }
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          if (odataObject.RetailContext == null) {
              this.RetailContext = undefined;
          } else if (odataObject.RetailContext['@odata.type'] == null) {
              this.RetailContext = new ProjectionDomainClass(odataObject.RetailContext);
          } else {
              var className: string = odataObject.RetailContext['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.RetailContext = new Commerce.Proxy.Entities[className](odataObject.RetailContext)
              }
          }

    
          this.PrimaryCategoryId = (odataObject.PrimaryCategoryId != null) ? parseInt(odataObject.PrimaryCategoryId, 10) : undefined;
          this.CategoryIds = undefined;
          if (odataObject.CategoryIds) {
              this.CategoryIds = [];
              for (var i = 0; i < odataObject.CategoryIds.length; i++) {
                  if (odataObject.CategoryIds[i] != null) {
                      this.CategoryIds[i] = parseInt(odataObject.CategoryIds[i], 10);              } else {
                      this.CategoryIds[i] = undefined;
                  }
              }
          }
          this.DisplayOrderInCategories = undefined;
          if (odataObject.DisplayOrderInCategories) {
              this.DisplayOrderInCategories = [];
              for (var i = 0; i < odataObject.DisplayOrderInCategories.length; i++) {
                  if (odataObject.DisplayOrderInCategories[i] != null) {
                      if (odataObject.DisplayOrderInCategories[i]['@odata.type'] != null) {
                          var className: string = odataObject.DisplayOrderInCategories[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DisplayOrderInCategories[i] = new Commerce.Proxy.Entities[className](odataObject.DisplayOrderInCategories[i])
                          }
                      } else {
                          this.DisplayOrderInCategories[i] = new DisplayOrderInCategoryClass(odataObject.DisplayOrderInCategories[i]);
                      }
                  } else {
                      this.DisplayOrderInCategories[i] = undefined;
                  }
              }
          }
          this.RelatedProducts = undefined;
          if (odataObject.RelatedProducts) {
              this.RelatedProducts = [];
              for (var i = 0; i < odataObject.RelatedProducts.length; i++) {
                  if (odataObject.RelatedProducts[i] != null) {
                      if (odataObject.RelatedProducts[i]['@odata.type'] != null) {
                          var className: string = odataObject.RelatedProducts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RelatedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.RelatedProducts[i])
                          }
                      } else {
                          this.RelatedProducts[i] = new RelatedProductClass(odataObject.RelatedProducts[i]);
                      }
                  } else {
                      this.RelatedProducts[i] = undefined;
                  }
              }
          }
          this.ProductsRelatedToThis = undefined;
          if (odataObject.ProductsRelatedToThis) {
              this.ProductsRelatedToThis = [];
              for (var i = 0; i < odataObject.ProductsRelatedToThis.length; i++) {
                  if (odataObject.ProductsRelatedToThis[i] != null) {
                      if (odataObject.ProductsRelatedToThis[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductsRelatedToThis[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductsRelatedToThis[i] = new Commerce.Proxy.Entities[className](odataObject.ProductsRelatedToThis[i])
                          }
                      } else {
                          this.ProductsRelatedToThis[i] = new RelatedProductClass(odataObject.ProductsRelatedToThis[i]);
                      }
                  } else {
                      this.ProductsRelatedToThis[i] = undefined;
                  }
              }
          }
          this.ProductSchema = undefined;
          if (odataObject.ProductSchema) {
              this.ProductSchema = [];
              for (var i = 0; i < odataObject.ProductSchema.length; i++) {
                  if (odataObject.ProductSchema[i] != null) {
                      this.ProductSchema[i] = odataObject.ProductSchema[i];              } else {
                      this.ProductSchema[i] = undefined;
                  }
              }
          }
          this.ProductProperties = undefined;
          if (odataObject.ProductProperties) {
              this.ProductProperties = [];
              for (var i = 0; i < odataObject.ProductProperties.length; i++) {
                  if (odataObject.ProductProperties[i] != null) {
                      if (odataObject.ProductProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ProductProperties[i])
                          }
                      } else {
                          this.ProductProperties[i] = new ProductPropertyTranslationClass(odataObject.ProductProperties[i]);
                      }
                  } else {
                      this.ProductProperties[i] = undefined;
                  }
              }
          }
          if (odataObject.CompositionInformation == null) {
              this.CompositionInformation = undefined;
          } else if (odataObject.CompositionInformation['@odata.type'] == null) {
              this.CompositionInformation = new ProductCompositionInformationClass(odataObject.CompositionInformation);
          } else {
              var className: string = odataObject.CompositionInformation['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.CompositionInformation = new Commerce.Proxy.Entities[className](odataObject.CompositionInformation)
              }
          }

    
          this.ParentKits = undefined;
          if (odataObject.ParentKits) {
              this.ParentKits = [];
              for (var i = 0; i < odataObject.ParentKits.length; i++) {
                  if (odataObject.ParentKits[i] != null) {
                      if (odataObject.ParentKits[i]['@odata.type'] != null) {
                          var className: string = odataObject.ParentKits[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ParentKits[i] = new Commerce.Proxy.Entities[className](odataObject.ParentKits[i])
                          }
                      } else {
                          this.ParentKits[i] = new KitComponentClass(odataObject.ParentKits[i]);
                      }
                  } else {
                      this.ParentKits[i] = undefined;
                  }
              }
          }
          this.SearchName = odataObject.SearchName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductCatalog entity class.
     */
    export class ProductCatalogClass implements ProductCatalog {
        public RecordId: number;
        public Name: string;
        public Description: string;
        public Language: string;
        public IsSnapshotEnabled: boolean;
        public ValidFrom: Date;
        public ValidTo: Date;
        public CreatedOn: Date;
        public ModifiedOn: Date;
        public PublishedOn: Date;
        public Images: Entities.MediaLocation[];
        public ChannelId: number;
        public DefaultImage: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.Language = odataObject.Language;
          this.IsSnapshotEnabled = odataObject.IsSnapshotEnabled;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.CreatedOn = (odataObject.CreatedOn instanceof Date) ? odataObject.CreatedOn
            : (odataObject.CreatedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedOn, "Edm.DateTimeOffset", false) : undefined;
          this.ModifiedOn = (odataObject.ModifiedOn instanceof Date) ? odataObject.ModifiedOn
            : (odataObject.ModifiedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedOn, "Edm.DateTimeOffset", false) : undefined;
          this.PublishedOn = (odataObject.PublishedOn instanceof Date) ? odataObject.PublishedOn
            : (odataObject.PublishedOn != null) ? OData.jsonLightReadStringPropertyValue(odataObject.PublishedOn, "Edm.DateTimeOffset", false) : undefined;
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.DefaultImage = odataObject.DefaultImage;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceList entity class.
     */
    export class CommerceListClass implements CommerceList {
        public Id: number;
        public Name: string;
        public CustomerId: string;
        public CustomerName: string;
        public IsFavorite: boolean;
        public IsRecurring: boolean;
        public IsPrivate: boolean;
        public IsCollaborative: boolean;
        public CreatedDateTime: Date;
        public DueDateTime: Date;
        public CommerceListTypeValue: number;
        public CommerceListLines: Entities.CommerceListLine[];
        public CommerceListContributors: Entities.CommerceListContributor[];
        public CommerceListInvitations: Entities.CommerceListInvitation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
          this.Name = odataObject.Name;
          this.CustomerId = odataObject.CustomerId;
          this.CustomerName = odataObject.CustomerName;
          this.IsFavorite = odataObject.IsFavorite;
          this.IsRecurring = odataObject.IsRecurring;
          this.IsPrivate = odataObject.IsPrivate;
          this.IsCollaborative = odataObject.IsCollaborative;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.DueDateTime = (odataObject.DueDateTime instanceof Date) ? odataObject.DueDateTime
            : (odataObject.DueDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DueDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.CommerceListTypeValue = odataObject.CommerceListTypeValue;
          this.CommerceListLines = undefined;
          if (odataObject.CommerceListLines) {
              this.CommerceListLines = [];
              for (var i = 0; i < odataObject.CommerceListLines.length; i++) {
                  if (odataObject.CommerceListLines[i] != null) {
                      if (odataObject.CommerceListLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.CommerceListLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CommerceListLines[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListLines[i])
                          }
                      } else {
                          this.CommerceListLines[i] = new CommerceListLineClass(odataObject.CommerceListLines[i]);
                      }
                  } else {
                      this.CommerceListLines[i] = undefined;
                  }
              }
          }
          this.CommerceListContributors = undefined;
          if (odataObject.CommerceListContributors) {
              this.CommerceListContributors = [];
              for (var i = 0; i < odataObject.CommerceListContributors.length; i++) {
                  if (odataObject.CommerceListContributors[i] != null) {
                      if (odataObject.CommerceListContributors[i]['@odata.type'] != null) {
                          var className: string = odataObject.CommerceListContributors[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CommerceListContributors[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListContributors[i])
                          }
                      } else {
                          this.CommerceListContributors[i] = new CommerceListContributorClass(odataObject.CommerceListContributors[i]);
                      }
                  } else {
                      this.CommerceListContributors[i] = undefined;
                  }
              }
          }
          this.CommerceListInvitations = undefined;
          if (odataObject.CommerceListInvitations) {
              this.CommerceListInvitations = [];
              for (var i = 0; i < odataObject.CommerceListInvitations.length; i++) {
                  if (odataObject.CommerceListInvitations[i] != null) {
                      if (odataObject.CommerceListInvitations[i]['@odata.type'] != null) {
                          var className: string = odataObject.CommerceListInvitations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CommerceListInvitations[i] = new Commerce.Proxy.Entities[className](odataObject.CommerceListInvitations[i])
                          }
                      } else {
                          this.CommerceListInvitations[i] = new CommerceListInvitationClass(odataObject.CommerceListInvitations[i]);
                      }
                  } else {
                      this.CommerceListInvitations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductList entity class.
     */
    export class ProductListClass implements ProductList {
        public Id: string;
        public Name: string;
        public CustomerId: string;
        public CreatedDateTime: Date;
        public LastUpdated: Date;
        public DeletedDateTime: Date;
        public ProductListTypeValue: number;
        public DataAreaId: string;
        public ProductListLines: Entities.ProductListLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Name = odataObject.Name;
          this.CustomerId = odataObject.CustomerId;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.LastUpdated = (odataObject.LastUpdated instanceof Date) ? odataObject.LastUpdated
            : (odataObject.LastUpdated != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastUpdated, "Edm.DateTimeOffset", false) : undefined;
          this.DeletedDateTime = (odataObject.DeletedDateTime instanceof Date) ? odataObject.DeletedDateTime
            : (odataObject.DeletedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeletedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ProductListTypeValue = odataObject.ProductListTypeValue;
          this.DataAreaId = odataObject.DataAreaId;
          this.ProductListLines = undefined;
          if (odataObject.ProductListLines) {
              this.ProductListLines = [];
              for (var i = 0; i < odataObject.ProductListLines.length; i++) {
                  if (odataObject.ProductListLines[i] != null) {
                      if (odataObject.ProductListLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductListLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductListLines[i] = new Commerce.Proxy.Entities[className](odataObject.ProductListLines[i])
                          }
                      } else {
                          this.ProductListLines[i] = new ProductListLineClass(odataObject.ProductListLines[i]);
                      }
                  } else {
                      this.ProductListLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Recommendation entity class.
     */
    export class RecommendationClass implements Recommendation {
        public Id: string;
        public RecommendationTypeValue: number;
        public Title: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.RecommendationTypeValue = odataObject.RecommendationTypeValue;
          this.Title = odataObject.Title;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TransferOrder entity class.
     */
    export class TransferOrderClass implements TransferOrder {
        public OrderId: string;
        public RecordId: string;
        public Status: string;
        public Lines: number;
        public TotalItems: number;
        public OrderTypeValue: number;
        public InventLocationIdFrom: string;
        public InventLocationIdTo: string;
        public QuantityShipped: number;
        public QuantityReceived: number;
        public QuantityShipNow: number;
        public QuantityReceiveNow: number;
        public QuantityShipRemaining: number;
        public QuantityReceiveRemaining: number;
        public ShipDate: Date;
        public ReceiveDate: Date;
        public DeliveryModeId: string;
        public OrderLines: Entities.TransferOrderLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrderId = odataObject.OrderId;
          this.RecordId = odataObject.RecordId;
          this.Status = odataObject.Status;
          this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
          this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
          this.OrderTypeValue = odataObject.OrderTypeValue;
          this.InventLocationIdFrom = odataObject.InventLocationIdFrom;
          this.InventLocationIdTo = odataObject.InventLocationIdTo;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
          this.QuantityShipNow = (odataObject.QuantityShipNow != null) ? parseFloat(odataObject.QuantityShipNow) : undefined;
          this.QuantityReceiveNow = (odataObject.QuantityReceiveNow != null) ? parseFloat(odataObject.QuantityReceiveNow) : undefined;
          this.QuantityShipRemaining = (odataObject.QuantityShipRemaining != null) ? parseFloat(odataObject.QuantityShipRemaining) : undefined;
          this.QuantityReceiveRemaining = (odataObject.QuantityReceiveRemaining != null) ? parseFloat(odataObject.QuantityReceiveRemaining) : undefined;
          this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
            : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
          this.ReceiveDate = (odataObject.ReceiveDate instanceof Date) ? odataObject.ReceiveDate
            : (odataObject.ReceiveDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ReceiveDate, "Edm.DateTimeOffset", false) : undefined;
          this.DeliveryModeId = odataObject.DeliveryModeId;
          this.OrderLines = undefined;
          if (odataObject.OrderLines) {
              this.OrderLines = [];
              for (var i = 0; i < odataObject.OrderLines.length; i++) {
                  if (odataObject.OrderLines[i] != null) {
                      if (odataObject.OrderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.OrderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i])
                          }
                      } else {
                          this.OrderLines[i] = new TransferOrderLineClass(odataObject.OrderLines[i]);
                      }
                  } else {
                      this.OrderLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PurchaseOrder entity class.
     */
    export class PurchaseOrderClass implements PurchaseOrder {
        public OrderId: string;
        public RecordId: string;
        public Status: string;
        public Lines: number;
        public TotalItems: number;
        public OrderTypeValue: number;
        public TotalReceived: number;
        public OrderLines: Entities.PurchaseOrderLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrderId = odataObject.OrderId;
          this.RecordId = odataObject.RecordId;
          this.Status = odataObject.Status;
          this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
          this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
          this.OrderTypeValue = odataObject.OrderTypeValue;
          this.TotalReceived = (odataObject.TotalReceived != null) ? parseFloat(odataObject.TotalReceived) : undefined;
          this.OrderLines = undefined;
          if (odataObject.OrderLines) {
              this.OrderLines = [];
              for (var i = 0; i < odataObject.OrderLines.length; i++) {
                  if (odataObject.OrderLines[i] != null) {
                      if (odataObject.OrderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.OrderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i])
                          }
                      } else {
                          this.OrderLines[i] = new PurchaseOrderLineClass(odataObject.OrderLines[i]);
                      }
                  } else {
                      this.OrderLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PickingList entity class.
     */
    export class PickingListClass implements PickingList {
        public OrderId: string;
        public RecordId: string;
        public Status: string;
        public Lines: number;
        public TotalItems: number;
        public OrderTypeValue: number;
        public InventLocationId: string;
        public DeliveryDate: Date;
        public DeliveryMode: string;
        public TotalReceived: number;
        public OrderLines: Entities.PickingListLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrderId = odataObject.OrderId;
          this.RecordId = odataObject.RecordId;
          this.Status = odataObject.Status;
          this.Lines = (odataObject.Lines != null) ? parseFloat(odataObject.Lines) : undefined;
          this.TotalItems = (odataObject.TotalItems != null) ? parseFloat(odataObject.TotalItems) : undefined;
          this.OrderTypeValue = odataObject.OrderTypeValue;
          this.InventLocationId = odataObject.InventLocationId;
          this.DeliveryDate = (odataObject.DeliveryDate instanceof Date) ? odataObject.DeliveryDate
            : (odataObject.DeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.TotalReceived = (odataObject.TotalReceived != null) ? parseFloat(odataObject.TotalReceived) : undefined;
          this.OrderLines = undefined;
          if (odataObject.OrderLines) {
              this.OrderLines = [];
              for (var i = 0; i < odataObject.OrderLines.length; i++) {
                  if (odataObject.OrderLines[i] != null) {
                      if (odataObject.OrderLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.OrderLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.OrderLines[i] = new Commerce.Proxy.Entities[className](odataObject.OrderLines[i])
                          }
                      } else {
                          this.OrderLines[i] = new PickingListLineClass(odataObject.OrderLines[i]);
                      }
                  } else {
                      this.OrderLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Warehouse entity class.
     */
    export class WarehouseClass implements Warehouse {
        public InventLocation: string;
        public Name: string;
        public IsWMSEnabled: boolean;
        public DefaultInventoryStatus: string;
        public DefaultReceiptLocation: string;
        public DefaultLocationId: string;
        public DefaultIssueLocation: string;
        public Address: Entities.Address;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.InventLocation = odataObject.InventLocation;
          this.Name = odataObject.Name;
          this.IsWMSEnabled = odataObject.IsWMSEnabled;
          this.DefaultInventoryStatus = odataObject.DefaultInventoryStatus;
          this.DefaultReceiptLocation = odataObject.DefaultReceiptLocation;
          this.DefaultLocationId = odataObject.DefaultLocationId;
          this.DefaultIssueLocation = odataObject.DefaultIssueLocation;
          if (odataObject.Address == null) {
              this.Address = undefined;
          } else if (odataObject.Address['@odata.type'] == null) {
              this.Address = new AddressClass(odataObject.Address);
          } else {
              var className: string = odataObject.Address['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Address = new Commerce.Proxy.Entities[className](odataObject.Address)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ScanResult entity class.
     */
    export class ScanResultClass implements ScanResult {
        public ScannedText: string;
        public MaskTypeValue: number;
        public Barcode: Entities.Barcode;
        public Product: Entities.SimpleProduct;
        public LoyaltyCard: Entities.LoyaltyCard;
        public GiftCard: Entities.GiftCard;
        public ExtensionProperties: Entities.CommerceProperty[];
        public Customer: Entities.Customer;
        
        // Navigation properties names
        public static customerPropertyName: string = "Customer";
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ScannedText = odataObject.ScannedText;
          this.MaskTypeValue = odataObject.MaskTypeValue;
          if (odataObject.Barcode == null) {
              this.Barcode = undefined;
          } else if (odataObject.Barcode['@odata.type'] == null) {
              this.Barcode = new BarcodeClass(odataObject.Barcode);
          } else {
              var className: string = odataObject.Barcode['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Barcode = new Commerce.Proxy.Entities[className](odataObject.Barcode)
              }
          }

    
          if (odataObject.Product == null) {
              this.Product = undefined;
          } else if (odataObject.Product['@odata.type'] == null) {
              this.Product = new SimpleProductClass(odataObject.Product);
          } else {
              var className: string = odataObject.Product['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Product = new Commerce.Proxy.Entities[className](odataObject.Product)
              }
          }

    
          if (odataObject.LoyaltyCard == null) {
              this.LoyaltyCard = undefined;
          } else if (odataObject.LoyaltyCard['@odata.type'] == null) {
              this.LoyaltyCard = new LoyaltyCardClass(odataObject.LoyaltyCard);
          } else {
              var className: string = odataObject.LoyaltyCard['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.LoyaltyCard = new Commerce.Proxy.Entities[className](odataObject.LoyaltyCard)
              }
          }

    
          if (odataObject.GiftCard == null) {
              this.GiftCard = undefined;
          } else if (odataObject.GiftCard['@odata.type'] == null) {
              this.GiftCard = new GiftCardClass(odataObject.GiftCard);
          } else {
              var className: string = odataObject.GiftCard['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.GiftCard = new Commerce.Proxy.Entities[className](odataObject.GiftCard)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
          if (odataObject.Customer == null) {
              this.Customer = undefined;
          } else if (odataObject.Customer['@odata.type'] == null) {
              this.Customer = new CustomerClass(odataObject.Customer);
          } else {
              var className: string = odataObject.Customer['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Customer = new Commerce.Proxy.Entities[className](odataObject.Customer)
              }
          }

    
        }
    }
    
    /**
     * SalesOrderContextualOperationsMap entity class.
     */
    export class SalesOrderContextualOperationsMapClass implements SalesOrderContextualOperationsMap {
        public Id: string;
        public ApplicableOperationsValues: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        public SalesOrder: Entities.SalesOrder;
        
        // Navigation properties names
        public static salesOrderPropertyName: string = "SalesOrder";
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.ApplicableOperationsValues = undefined;
          if (odataObject.ApplicableOperationsValues) {
              this.ApplicableOperationsValues = [];
              for (var i = 0; i < odataObject.ApplicableOperationsValues.length; i++) {
                  if (odataObject.ApplicableOperationsValues[i] != null) {
                      this.ApplicableOperationsValues[i] = odataObject.ApplicableOperationsValues[i];              } else {
                      this.ApplicableOperationsValues[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
          if (odataObject.SalesOrder == null) {
              this.SalesOrder = undefined;
          } else if (odataObject.SalesOrder['@odata.type'] == null) {
              this.SalesOrder = new SalesOrderClass(odataObject.SalesOrder);
          } else {
              var className: string = odataObject.SalesOrder['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SalesOrder = new Commerce.Proxy.Entities[className](odataObject.SalesOrder)
              }
          }

    
        }
    }
    
    /**
     * InventoryInboundOutboundDocument entity class.
     */
    export class InventoryInboundOutboundDocumentClass implements InventoryInboundOutboundDocument {
        public WorkDocumentId: string;
        public TerminalId: string;
        public CommitRequestId: string;
        public ReceiveDate: Date;
        public ShipDate: Date;
        public Sender: string;
        public Receiver: string;
        public SenderDetails: string;
        public ReceiverDetails: string;
        public DeliveryMode: string;
        public OperationTypeValue: number;
        public StatusValue: number;
        public ReceiptId: string;
        public Note: string;
        public OperationResultMessage: string;
        public DocumentId: string;
        public LongVersion: number;
        public SourceDocument: Entities.InventoryInboundOutboundSourceDocument;
        public SourceDocumentTypeValue: number;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.WorkDocumentId = odataObject.WorkDocumentId;
          this.TerminalId = odataObject.TerminalId;
          this.CommitRequestId = odataObject.CommitRequestId;
          this.ReceiveDate = (odataObject.ReceiveDate instanceof Date) ? odataObject.ReceiveDate
            : (odataObject.ReceiveDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ReceiveDate, "Edm.DateTimeOffset", false) : undefined;
          this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
            : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
          this.Sender = odataObject.Sender;
          this.Receiver = odataObject.Receiver;
          this.SenderDetails = odataObject.SenderDetails;
          this.ReceiverDetails = odataObject.ReceiverDetails;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.OperationTypeValue = odataObject.OperationTypeValue;
          this.StatusValue = odataObject.StatusValue;
          this.ReceiptId = odataObject.ReceiptId;
          this.Note = odataObject.Note;
          this.OperationResultMessage = odataObject.OperationResultMessage;
          this.DocumentId = odataObject.DocumentId;
          this.LongVersion = (odataObject.LongVersion != null) ? parseInt(odataObject.LongVersion, 10) : undefined;
          if (odataObject.SourceDocument == null) {
              this.SourceDocument = undefined;
          } else if (odataObject.SourceDocument['@odata.type'] == null) {
              this.SourceDocument = new InventoryInboundOutboundSourceDocumentClass(odataObject.SourceDocument);
          } else {
              var className: string = odataObject.SourceDocument['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SourceDocument = new Commerce.Proxy.Entities[className](odataObject.SourceDocument)
              }
          }

    
          this.SourceDocumentTypeValue = odataObject.SourceDocumentTypeValue;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * BusinessPartner entity class.
     */
    export class BusinessPartnerClass implements BusinessPartner {
        public BusinessPartnerId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.BusinessPartnerId = odataObject.BusinessPartnerId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * BusinessPartnerUser entity class.
     */
    export class BusinessPartnerUserClass implements BusinessPartnerUser {
        public Email: string;
        public BusinessPartnerId: string;
        public FirstName: string;
        public LastName: string;
        public SpendingLimit: number;
        public LastOperationId: string;
        public StatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Email = odataObject.Email;
          this.BusinessPartnerId = odataObject.BusinessPartnerId;
          this.FirstName = odataObject.FirstName;
          this.LastName = odataObject.LastName;
          this.SpendingLimit = (odataObject.SpendingLimit != null) ? parseFloat(odataObject.SpendingLimit) : undefined;
          this.LastOperationId = odataObject.LastOperationId;
          this.StatusValue = odataObject.StatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SuspendedCart entity class.
     */
    export class SuspendedCartClass implements SuspendedCart {
        public Id: string;
        public ReceiptId: string;
        public ShiftId: number;
        public ShiftTerminalId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        public Cart: Entities.Cart;
        
        // Navigation properties names
        public static cartPropertyName: string = "Cart";
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.ReceiptId = odataObject.ReceiptId;
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
          if (odataObject.Cart == null) {
              this.Cart = undefined;
          } else if (odataObject.Cart['@odata.type'] == null) {
              this.Cart = new CartClass(odataObject.Cart);
          } else {
              var className: string = odataObject.Cart['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Cart = new Commerce.Proxy.Entities[className](odataObject.Cart)
              }
          }

    
        }
    }
    
    /**
     * ExtensibleEnumeration entity class.
     */
    export class ExtensibleEnumerationClass implements ExtensibleEnumeration {
        public Name: string;
        public Value: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Value = odataObject.Value;
        }
    }
    
    /**
     * ExtensibleEnumeration_1OfT entity class.
     */
    export class ExtensibleEnumeration_1OfTClass extends ExtensibleEnumerationClass implements ExtensibleEnumeration_1OfT {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.Framework.ExtensibleEnumeration_1OfT";
            
        }
    }
    
    /**
     * ExtensibleTransactionType entity class.
     */
    export class ExtensibleTransactionTypeClass extends ExtensibleEnumerationClass implements ExtensibleTransactionType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleTransactionType";
            
        }
    }
    
    /**
     * ExtensibleSalesTransactionType entity class.
     */
    export class ExtensibleSalesTransactionTypeClass extends ExtensibleEnumerationClass implements ExtensibleSalesTransactionType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleSalesTransactionType";
            
        }
    }
    
    /**
     * FulfillmentLineStatus entity class.
     */
    export class FulfillmentLineStatusClass extends ExtensibleEnumerationClass implements FulfillmentLineStatus {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineStatus";
            
        }
    }
    
    /**
     * FulfillmentLineDeliveryType entity class.
     */
    export class FulfillmentLineDeliveryTypeClass extends ExtensibleEnumerationClass implements FulfillmentLineDeliveryType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FulfillmentLineDeliveryType";
            
        }
    }
    
    /**
     * ExtensibleAddressType entity class.
     */
    export class ExtensibleAddressTypeClass extends ExtensibleEnumerationClass implements ExtensibleAddressType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAddressType";
            
        }
    }
    
    /**
     * ExtensibleLoyaltyRewardPointActivityEntryType entity class.
     */
    export class ExtensibleLoyaltyRewardPointActivityEntryTypeClass extends ExtensibleEnumerationClass implements ExtensibleLoyaltyRewardPointActivityEntryType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleLoyaltyRewardPointActivityEntryType";
            
        }
    }
    
    /**
     * ExtensibleAttributeDataType entity class.
     */
    export class ExtensibleAttributeDataTypeClass extends ExtensibleEnumerationClass implements ExtensibleAttributeDataType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAttributeDataType";
            
        }
    }
    
    /**
     * ReleasedProductServiceType entity class.
     */
    export class ReleasedProductServiceTypeClass extends ExtensibleEnumerationClass implements ReleasedProductServiceType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ReleasedProductServiceType";
            
        }
    }
    
    /**
     * Address entity class.
     */
    export class AddressClass implements Address {
        public Name: string;
        public FullAddress: string;
        public RecordId: number;
        public Street: string;
        public StreetNumber: string;
        public County: string;
        public CountyName: string;
        public City: string;
        public DistrictName: string;
        public State: string;
        public StateName: string;
        public ZipCode: string;
        public ThreeLetterISORegionName: string;
        public Phone: string;
        public PhoneRecordId: number;
        public PhoneExt: string;
        public Email: string;
        public EmailContent: string;
        public EmailRecordId: number;
        public Url: string;
        public UrlRecordId: number;
        public TwoLetterISORegionName: string;
        public Deactivate: boolean;
        public AttentionTo: string;
        public BuildingCompliment: string;
        public Postbox: string;
        public TaxGroup: string;
        public AddressTypeValue: number;
        public IsPrimary: boolean;
        public IsPrivate: boolean;
        public PartyNumber: string;
        public IsAsyncAddress: boolean;
        public DirectoryPartyTableRecordId: number;
        public DirectoryPartyLocationRecordId: number;
        public DirectoryPartyLocationRoleRecordId: number;
        public LogisticsLocationId: string;
        public LogisticsLocationRecordId: number;
        public LogisticsLocationExtRecordId: number;
        public LogisticsLocationRoleRecordId: number;
        public PhoneLogisticsLocationRecordId: number;
        public PhoneLogisticsLocationId: string;
        public EmailLogisticsLocationRecordId: number;
        public EmailLogisticsLocationId: string;
        public UrlLogisticsLocationRecordId: number;
        public UrlLogisticsLocationId: string;
        public ExpireRecordId: number;
        public SortOrder: number;
        public RoleCount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.FullAddress = odataObject.FullAddress;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Street = odataObject.Street;
          this.StreetNumber = odataObject.StreetNumber;
          this.County = odataObject.County;
          this.CountyName = odataObject.CountyName;
          this.City = odataObject.City;
          this.DistrictName = odataObject.DistrictName;
          this.State = odataObject.State;
          this.StateName = odataObject.StateName;
          this.ZipCode = odataObject.ZipCode;
          this.ThreeLetterISORegionName = odataObject.ThreeLetterISORegionName;
          this.Phone = odataObject.Phone;
          this.PhoneRecordId = (odataObject.PhoneRecordId != null) ? parseInt(odataObject.PhoneRecordId, 10) : undefined;
          this.PhoneExt = odataObject.PhoneExt;
          this.Email = odataObject.Email;
          this.EmailContent = odataObject.EmailContent;
          this.EmailRecordId = (odataObject.EmailRecordId != null) ? parseInt(odataObject.EmailRecordId, 10) : undefined;
          this.Url = odataObject.Url;
          this.UrlRecordId = (odataObject.UrlRecordId != null) ? parseInt(odataObject.UrlRecordId, 10) : undefined;
          this.TwoLetterISORegionName = odataObject.TwoLetterISORegionName;
          this.Deactivate = odataObject.Deactivate;
          this.AttentionTo = odataObject.AttentionTo;
          this.BuildingCompliment = odataObject.BuildingCompliment;
          this.Postbox = odataObject.Postbox;
          this.TaxGroup = odataObject.TaxGroup;
          this.AddressTypeValue = odataObject.AddressTypeValue;
          this.IsPrimary = odataObject.IsPrimary;
          this.IsPrivate = odataObject.IsPrivate;
          this.PartyNumber = odataObject.PartyNumber;
          this.IsAsyncAddress = odataObject.IsAsyncAddress;
          this.DirectoryPartyTableRecordId = (odataObject.DirectoryPartyTableRecordId != null) ? parseInt(odataObject.DirectoryPartyTableRecordId, 10) : undefined;
          this.DirectoryPartyLocationRecordId = (odataObject.DirectoryPartyLocationRecordId != null) ? parseInt(odataObject.DirectoryPartyLocationRecordId, 10) : undefined;
          this.DirectoryPartyLocationRoleRecordId = (odataObject.DirectoryPartyLocationRoleRecordId != null) ? parseInt(odataObject.DirectoryPartyLocationRoleRecordId, 10) : undefined;
          this.LogisticsLocationId = odataObject.LogisticsLocationId;
          this.LogisticsLocationRecordId = (odataObject.LogisticsLocationRecordId != null) ? parseInt(odataObject.LogisticsLocationRecordId, 10) : undefined;
          this.LogisticsLocationExtRecordId = (odataObject.LogisticsLocationExtRecordId != null) ? parseInt(odataObject.LogisticsLocationExtRecordId, 10) : undefined;
          this.LogisticsLocationRoleRecordId = (odataObject.LogisticsLocationRoleRecordId != null) ? parseInt(odataObject.LogisticsLocationRoleRecordId, 10) : undefined;
          this.PhoneLogisticsLocationRecordId = (odataObject.PhoneLogisticsLocationRecordId != null) ? parseInt(odataObject.PhoneLogisticsLocationRecordId, 10) : undefined;
          this.PhoneLogisticsLocationId = odataObject.PhoneLogisticsLocationId;
          this.EmailLogisticsLocationRecordId = (odataObject.EmailLogisticsLocationRecordId != null) ? parseInt(odataObject.EmailLogisticsLocationRecordId, 10) : undefined;
          this.EmailLogisticsLocationId = odataObject.EmailLogisticsLocationId;
          this.UrlLogisticsLocationRecordId = (odataObject.UrlLogisticsLocationRecordId != null) ? parseInt(odataObject.UrlLogisticsLocationRecordId, 10) : undefined;
          this.UrlLogisticsLocationId = odataObject.UrlLogisticsLocationId;
          this.ExpireRecordId = (odataObject.ExpireRecordId != null) ? parseInt(odataObject.ExpireRecordId, 10) : undefined;
          this.SortOrder = odataObject.SortOrder;
          this.RoleCount = odataObject.RoleCount;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerAffiliation entity class.
     */
    export class CustomerAffiliationClass implements CustomerAffiliation {
        public RecordId: number;
        public RetailAffiliationId: number;
        public Name: string;
        public Description: string;
        public HideInChannels: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.RetailAffiliationId = (odataObject.RetailAffiliationId != null) ? parseInt(odataObject.RetailAffiliationId, 10) : undefined;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.HideInChannels = odataObject.HideInChannels;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerBalances entity class.
     */
    export class CustomerBalancesClass implements CustomerBalances {
        public Balance: number;
        public PendingBalance: number;
        public CreditLimit: number;
        public InvoiceAccountBalance: number;
        public InvoiceAccountPendingBalance: number;
        public InvoiceAccountCreditLimit: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
          this.PendingBalance = (odataObject.PendingBalance != null) ? parseFloat(odataObject.PendingBalance) : undefined;
          this.CreditLimit = (odataObject.CreditLimit != null) ? parseFloat(odataObject.CreditLimit) : undefined;
          this.InvoiceAccountBalance = (odataObject.InvoiceAccountBalance != null) ? parseFloat(odataObject.InvoiceAccountBalance) : undefined;
          this.InvoiceAccountPendingBalance = (odataObject.InvoiceAccountPendingBalance != null) ? parseFloat(odataObject.InvoiceAccountPendingBalance) : undefined;
          this.InvoiceAccountCreditLimit = (odataObject.InvoiceAccountCreditLimit != null) ? parseFloat(odataObject.InvoiceAccountCreditLimit) : undefined;
        }
    }
    
    /**
     * GlobalCustomer entity class.
     */
    export class GlobalCustomerClass implements GlobalCustomer {
        public PartyNumber: string;
        public RecordId: number;
        public IsAsyncCustomer: boolean;
        public AccountNumber: string;
        public FullName: string;
        public FullAddress: string;
        public Phone: string;
        public Email: string;
        public CustomerTypeValue: number;
        public Images: Entities.MediaLocation[];
        public OfflineImage: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PartyNumber = odataObject.PartyNumber;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.IsAsyncCustomer = odataObject.IsAsyncCustomer;
          this.AccountNumber = odataObject.AccountNumber;
          this.FullName = odataObject.FullName;
          this.FullAddress = odataObject.FullAddress;
          this.Phone = odataObject.Phone;
          this.Email = odataObject.Email;
          this.CustomerTypeValue = odataObject.CustomerTypeValue;
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new MediaLocationClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.OfflineImage = odataObject.OfflineImage;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeValue entity class.
     */
    export class AttributeValueClass implements AttributeValue {
        public Name: string;
        public KeyName: string;
        public UnitOfMeasureSymbol: string;
        public DataTypeValue: number;
        public BooleanValue: boolean;
        public DateTimeOffsetValue: Date;
        public FloatValue: number;
        public IntegerValue: number;
        public TextValue: string;
        public CurrencyValue: number;
        public CurrencyCode: string;
        public AttributeValueId: number;
        public RecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.KeyName = odataObject.KeyName;
          this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.BooleanValue = odataObject.BooleanValue;
          this.DateTimeOffsetValue = (odataObject.DateTimeOffsetValue instanceof Date) ? odataObject.DateTimeOffsetValue
            : (odataObject.DateTimeOffsetValue != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTimeOffsetValue, "Edm.DateTimeOffset", false) : undefined;
          this.FloatValue = (odataObject.FloatValue != null) ? parseFloat(odataObject.FloatValue) : undefined;
          this.IntegerValue = odataObject.IntegerValue;
          this.TextValue = odataObject.TextValue;
          this.CurrencyValue = (odataObject.CurrencyValue != null) ? parseFloat(odataObject.CurrencyValue) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.AttributeValueId = (odataObject.AttributeValueId != null) ? parseInt(odataObject.AttributeValueId, 10) : undefined;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeValueBase entity class.
     */
    export class AttributeValueBaseClass implements AttributeValueBase {
        public Name: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Barcode entity class.
     */
    export class BarcodeClass implements Barcode {
        public BarcodeId: string;
        public BarcodePrice: number;
        public Quantity: number;
        public CustomerId: string;
        public EmployeeId: string;
        public SalespersonId: string;
        public EANLicenseId: string;
        public DataEntry: string;
        public DiscountCode: string;
        public GiftCardNumber: string;
        public LoyaltyCardNumber: string;
        public ItemBarcode: Entities.ItemBarcode;
        public EntryMethodTypeValue: number;
        public ItemType: number;
        public EnterDimensions: boolean;
        public ItemGroupId: string;
        public ItemDepartmentId: string;
        public ScaleItem: boolean;
        public ZeroPriceValid: boolean;
        public NegativeQuantity: boolean;
        public DiscountNotAllowed: boolean;
        public DateToBeBlocked: Date;
        public DateToBeActivated: Date;
        public CheckDigitValidated: boolean;
        public CouponId: string;
        public Message: string;
        public LineDiscountGroup: string;
        public MultilineDiscountGroup: string;
        public IncludedInTotalDiscount: boolean;
        public CostPrice: number;
        public BatchId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.BarcodeId = odataObject.BarcodeId;
          this.BarcodePrice = (odataObject.BarcodePrice != null) ? parseFloat(odataObject.BarcodePrice) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.CustomerId = odataObject.CustomerId;
          this.EmployeeId = odataObject.EmployeeId;
          this.SalespersonId = odataObject.SalespersonId;
          this.EANLicenseId = odataObject.EANLicenseId;
          this.DataEntry = odataObject.DataEntry;
          this.DiscountCode = odataObject.DiscountCode;
          this.GiftCardNumber = odataObject.GiftCardNumber;
          this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
          if (odataObject.ItemBarcode == null) {
              this.ItemBarcode = undefined;
          } else if (odataObject.ItemBarcode['@odata.type'] == null) {
              this.ItemBarcode = new ItemBarcodeClass(odataObject.ItemBarcode);
          } else {
              var className: string = odataObject.ItemBarcode['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ItemBarcode = new Commerce.Proxy.Entities[className](odataObject.ItemBarcode)
              }
          }

    
          this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
          this.ItemType = odataObject.ItemType;
          this.EnterDimensions = odataObject.EnterDimensions;
          this.ItemGroupId = odataObject.ItemGroupId;
          this.ItemDepartmentId = odataObject.ItemDepartmentId;
          this.ScaleItem = odataObject.ScaleItem;
          this.ZeroPriceValid = odataObject.ZeroPriceValid;
          this.NegativeQuantity = odataObject.NegativeQuantity;
          this.DiscountNotAllowed = odataObject.DiscountNotAllowed;
          this.DateToBeBlocked = (odataObject.DateToBeBlocked instanceof Date) ? odataObject.DateToBeBlocked
            : (odataObject.DateToBeBlocked != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBeBlocked, "Edm.DateTimeOffset", false) : undefined;
          this.DateToBeActivated = (odataObject.DateToBeActivated instanceof Date) ? odataObject.DateToBeActivated
            : (odataObject.DateToBeActivated != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBeActivated, "Edm.DateTimeOffset", false) : undefined;
          this.CheckDigitValidated = odataObject.CheckDigitValidated;
          this.CouponId = odataObject.CouponId;
          this.Message = odataObject.Message;
          this.LineDiscountGroup = odataObject.LineDiscountGroup;
          this.MultilineDiscountGroup = odataObject.MultilineDiscountGroup;
          this.IncludedInTotalDiscount = odataObject.IncludedInTotalDiscount;
          this.CostPrice = (odataObject.CostPrice != null) ? parseFloat(odataObject.CostPrice) : undefined;
          this.BatchId = odataObject.BatchId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ItemBarcode entity class.
     */
    export class ItemBarcodeClass implements ItemBarcode {
        public RecordId: number;
        public ItemId: string;
        public Description: string;
        public BarcodeSetupId: string;
        public ItemBarcodeValue: string;
        public InventoryDimensionId: string;
        public IsBlocked: boolean;
        public Display: boolean;
        public VariantId: string;
        public UnitId: string;
        public UseForInput: boolean;
        public UseForPrinting: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.Description = odataObject.Description;
          this.BarcodeSetupId = odataObject.BarcodeSetupId;
          this.ItemBarcodeValue = odataObject.ItemBarcodeValue;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.IsBlocked = odataObject.IsBlocked;
          this.Display = odataObject.Display;
          this.VariantId = odataObject.VariantId;
          this.UnitId = odataObject.UnitId;
          this.UseForInput = odataObject.UseForInput;
          this.UseForPrinting = odataObject.UseForPrinting;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ButtonGrid entity class.
     */
    export class ButtonGridClass implements ButtonGrid {
        public Id: string;
        public Name: string;
        public DefaultColor: number;
        public SpaceBetweenButtonsInPixels: number;
        public Buttons: Entities.ButtonGridButton[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Name = odataObject.Name;
          this.DefaultColor = odataObject.DefaultColor;
          this.SpaceBetweenButtonsInPixels = odataObject.SpaceBetweenButtonsInPixels;
          this.Buttons = undefined;
          if (odataObject.Buttons) {
              this.Buttons = [];
              for (var i = 0; i < odataObject.Buttons.length; i++) {
                  if (odataObject.Buttons[i] != null) {
                      if (odataObject.Buttons[i]['@odata.type'] != null) {
                          var className: string = odataObject.Buttons[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Buttons[i] = new Commerce.Proxy.Entities[className](odataObject.Buttons[i])
                          }
                      } else {
                          this.Buttons[i] = new ButtonGridButtonClass(odataObject.Buttons[i]);
                      }
                  } else {
                      this.Buttons[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * GetButtonGridsByIdsCriteria entity class.
     */
    export class GetButtonGridsByIdsCriteriaClass implements GetButtonGridsByIdsCriteria {
        public ButtonGridIds: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ButtonGridIds = undefined;
          if (odataObject.ButtonGridIds) {
              this.ButtonGridIds = [];
              for (var i = 0; i < odataObject.ButtonGridIds.length; i++) {
                  if (odataObject.ButtonGridIds[i] != null) {
                      this.ButtonGridIds[i] = odataObject.ButtonGridIds[i];              } else {
                      this.ButtonGridIds[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CartLine entity class.
     */
    export class CartLineClass implements CartLine {
        public LineId: string;
        public TaxOverrideCode: string;
        public ItemId: string;
        public Barcode: string;
        public EntryMethodTypeValue: number;
        public Description: string;
        public InventoryDimensionId: string;
        public Comment: string;
        public ProductId: number;
        public WarehouseId: string;
        public Quantity: number;
        public Price: number;
        public ExtendedPrice: number;
        public TaxAmount: number;
        public ItemTaxGroupId: string;
        public TotalAmount: number;
        public NetAmountWithoutTax: number;
        public NetPrice: number;
        public DiscountAmountWithoutTax: number;
        public DiscountAmount: number;
        public LineDiscount: number;
        public LinePercentageDiscount: number;
        public LineManualDiscountPercentage: number;
        public LineManualDiscountAmount: number;
        public UnitOfMeasureSymbol: string;
        public ShippingAddress: Entities.Address;
        public DeliveryMode: string;
        public DeliveryModeChargeAmount: number;
        public RequestedDeliveryDate: Date;
        public IsWarrantyLine: boolean;
        public WarrantableTransactionId: string;
        public WarrantableSalesId: string;
        public WarrantableLineNumber: number;
        public WarrantableSerialNumber: string;
        public WarrantiedId: string;
        public ReturnTransactionId: string;
        public ReturnLineNumber: number;
        public ReturnInventTransId: string;
        public IsVoided: boolean;
        public IsTaxOverideCodeTaxExempt: boolean;
        public IsGiftCardLine: boolean;
        public IsPriceKeyedIn: boolean;
        public GiftCardId: string;
        public GiftCardCurrencyCode: string;
        public GiftCardOperationValue: number;
        public GiftCardTypeValue: number;
        public SalesStatusValue: number;
        public QuantityOrdered: number;
        public QuantityInvoiced: number;
        public QuantityCanceled: number;
        public FulfillmentStoreId: string;
        public SerialNumber: string;
        public ElectronicDeliveryEmail: string;
        public ElectronicDeliveryEmailContent: string;
        public IsPriceOverridden: boolean;
        public OriginalPrice: number;
        public IsInvoiceLine: boolean;
        public InvoiceId: string;
        public InvoiceAmount: number;
        public GiftCardBalance: number;
        public LineVersion: number;
        public PromotionLines: string[];
        public DiscountLines: Entities.DiscountLine[];
        public RelatedDiscountedLineIds: string[];
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public ChargeLines: Entities.ChargeLine[];
        public TaxRatePercent: number;
        public IsCustomerAccountDeposit: boolean;
        public LinkedParentLineId: string;
        public QuantityReturnable: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        public LineNumber: number;
        public CommissionSalesGroup: string;
        public TrackingId: string;
        public StaffId: string;
        public QuantityRemained: number;
        public QuantityShipped: number;
        public CatalogId: number;
        public AttributeValues: Entities.AttributeValueBase[];
        public ThirdPartyGiftCardInfo: Entities.ThirdPartyGiftCardInfo;
        public BarcodeEmbeddedPrice: number;
        public PriceInBarcode: boolean;
        public InvoiceTypeValue: number;
        public InvoicedSalesId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          this.TaxOverrideCode = odataObject.TaxOverrideCode;
          this.ItemId = odataObject.ItemId;
          this.Barcode = odataObject.Barcode;
          this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
          this.Description = odataObject.Description;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.Comment = odataObject.Comment;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.WarehouseId = odataObject.WarehouseId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.ExtendedPrice = (odataObject.ExtendedPrice != null) ? parseFloat(odataObject.ExtendedPrice) : undefined;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
          this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
          this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
          this.LinePercentageDiscount = (odataObject.LinePercentageDiscount != null) ? parseFloat(odataObject.LinePercentageDiscount) : undefined;
          this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
          this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
          this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
          this.DeliveryMode = odataObject.DeliveryMode;
          this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.IsWarrantyLine = odataObject.IsWarrantyLine;
          this.WarrantableTransactionId = odataObject.WarrantableTransactionId;
          this.WarrantableSalesId = odataObject.WarrantableSalesId;
          this.WarrantableLineNumber = (odataObject.WarrantableLineNumber != null) ? parseFloat(odataObject.WarrantableLineNumber) : undefined;
          this.WarrantableSerialNumber = odataObject.WarrantableSerialNumber;
          this.WarrantiedId = odataObject.WarrantiedId;
          this.ReturnTransactionId = odataObject.ReturnTransactionId;
          this.ReturnLineNumber = (odataObject.ReturnLineNumber != null) ? parseFloat(odataObject.ReturnLineNumber) : undefined;
          this.ReturnInventTransId = odataObject.ReturnInventTransId;
          this.IsVoided = odataObject.IsVoided;
          this.IsTaxOverideCodeTaxExempt = odataObject.IsTaxOverideCodeTaxExempt;
          this.IsGiftCardLine = odataObject.IsGiftCardLine;
          this.IsPriceKeyedIn = odataObject.IsPriceKeyedIn;
          this.GiftCardId = odataObject.GiftCardId;
          this.GiftCardCurrencyCode = odataObject.GiftCardCurrencyCode;
          this.GiftCardOperationValue = odataObject.GiftCardOperationValue;
          this.GiftCardTypeValue = odataObject.GiftCardTypeValue;
          this.SalesStatusValue = odataObject.SalesStatusValue;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
          this.QuantityCanceled = (odataObject.QuantityCanceled != null) ? parseFloat(odataObject.QuantityCanceled) : undefined;
          this.FulfillmentStoreId = odataObject.FulfillmentStoreId;
          this.SerialNumber = odataObject.SerialNumber;
          this.ElectronicDeliveryEmail = odataObject.ElectronicDeliveryEmail;
          this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
          this.IsPriceOverridden = odataObject.IsPriceOverridden;
          this.OriginalPrice = (odataObject.OriginalPrice != null) ? parseFloat(odataObject.OriginalPrice) : undefined;
          this.IsInvoiceLine = odataObject.IsInvoiceLine;
          this.InvoiceId = odataObject.InvoiceId;
          this.InvoiceAmount = (odataObject.InvoiceAmount != null) ? parseFloat(odataObject.InvoiceAmount) : undefined;
          this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
          this.LineVersion = odataObject.LineVersion;
          this.PromotionLines = undefined;
          if (odataObject.PromotionLines) {
              this.PromotionLines = [];
              for (var i = 0; i < odataObject.PromotionLines.length; i++) {
                  if (odataObject.PromotionLines[i] != null) {
                      this.PromotionLines[i] = odataObject.PromotionLines[i];              } else {
                      this.PromotionLines[i] = undefined;
                  }
              }
          }
          this.DiscountLines = undefined;
          if (odataObject.DiscountLines) {
              this.DiscountLines = [];
              for (var i = 0; i < odataObject.DiscountLines.length; i++) {
                  if (odataObject.DiscountLines[i] != null) {
                      if (odataObject.DiscountLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.DiscountLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DiscountLines[i] = new Commerce.Proxy.Entities[className](odataObject.DiscountLines[i])
                          }
                      } else {
                          this.DiscountLines[i] = new DiscountLineClass(odataObject.DiscountLines[i]);
                      }
                  } else {
                      this.DiscountLines[i] = undefined;
                  }
              }
          }
          this.RelatedDiscountedLineIds = undefined;
          if (odataObject.RelatedDiscountedLineIds) {
              this.RelatedDiscountedLineIds = [];
              for (var i = 0; i < odataObject.RelatedDiscountedLineIds.length; i++) {
                  if (odataObject.RelatedDiscountedLineIds[i] != null) {
                      this.RelatedDiscountedLineIds[i] = odataObject.RelatedDiscountedLineIds[i];              } else {
                      this.RelatedDiscountedLineIds[i] = undefined;
                  }
              }
          }
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.ChargeLines = undefined;
          if (odataObject.ChargeLines) {
              this.ChargeLines = [];
              for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                  if (odataObject.ChargeLines[i] != null) {
                      if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ChargeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i])
                          }
                      } else {
                          this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                      }
                  } else {
                      this.ChargeLines[i] = undefined;
                  }
              }
          }
          this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
          this.IsCustomerAccountDeposit = odataObject.IsCustomerAccountDeposit;
          this.LinkedParentLineId = odataObject.LinkedParentLineId;
          this.QuantityReturnable = (odataObject.QuantityReturnable != null) ? parseFloat(odataObject.QuantityReturnable) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
          this.TrackingId = odataObject.TrackingId;
          this.StaffId = odataObject.StaffId;
          this.QuantityRemained = (odataObject.QuantityRemained != null) ? parseFloat(odataObject.QuantityRemained) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.AttributeValues = undefined;
          if (odataObject.AttributeValues) {
              this.AttributeValues = [];
              for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                  if (odataObject.AttributeValues[i] != null) {
                      if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i])
                          }
                      } else {
                          this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                      }
                  } else {
                      this.AttributeValues[i] = undefined;
                  }
              }
          }
          if (odataObject.ThirdPartyGiftCardInfo == null) {
              this.ThirdPartyGiftCardInfo = undefined;
          } else if (odataObject.ThirdPartyGiftCardInfo['@odata.type'] == null) {
              this.ThirdPartyGiftCardInfo = new ThirdPartyGiftCardInfoClass(odataObject.ThirdPartyGiftCardInfo);
          } else {
              var className: string = odataObject.ThirdPartyGiftCardInfo['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ThirdPartyGiftCardInfo = new Commerce.Proxy.Entities[className](odataObject.ThirdPartyGiftCardInfo)
              }
          }

    
          this.BarcodeEmbeddedPrice = (odataObject.BarcodeEmbeddedPrice != null) ? parseFloat(odataObject.BarcodeEmbeddedPrice) : undefined;
          this.PriceInBarcode = odataObject.PriceInBarcode;
          this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
          this.InvoicedSalesId = odataObject.InvoicedSalesId;
        }
    }
    
    /**
     * ThirdPartyGiftCardInfo entity class.
     */
    export class ThirdPartyGiftCardInfoClass implements ThirdPartyGiftCardInfo {
        public Amount: number;
        public Authorization: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.Authorization = odataObject.Authorization;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CardTypeInfo entity class.
     */
    export class CardTypeInfoClass implements CardTypeInfo {
        public RecordId: number;
        public TypeId: string;
        public Name: string;
        public PaymentMethodId: string;
        public CardTypeValue: number;
        public Issuer: string;
        public NumberFrom: string;
        public NumberTo: string;
        public CashBackLimit: number;
        public AllowManualInput: boolean;
        public CheckModulus: boolean;
        public HasTenderDiscount: boolean;
        public IsPinRequired: boolean;
        public IsExpirationDateRequired: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TypeId = odataObject.TypeId;
          this.Name = odataObject.Name;
          this.PaymentMethodId = odataObject.PaymentMethodId;
          this.CardTypeValue = odataObject.CardTypeValue;
          this.Issuer = odataObject.Issuer;
          this.NumberFrom = odataObject.NumberFrom;
          this.NumberTo = odataObject.NumberTo;
          this.CashBackLimit = (odataObject.CashBackLimit != null) ? parseFloat(odataObject.CashBackLimit) : undefined;
          this.AllowManualInput = odataObject.AllowManualInput;
          this.CheckModulus = odataObject.CheckModulus;
          this.HasTenderDiscount = odataObject.HasTenderDiscount;
          this.IsPinRequired = odataObject.IsPinRequired;
          this.IsExpirationDateRequired = odataObject.IsExpirationDateRequired;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CashDeclaration entity class.
     */
    export class CashDeclarationClass implements CashDeclaration {
        public RecordId: number;
        public Currency: string;
        public Amount: number;
        public CashTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Currency = odataObject.Currency;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.CashTypeValue = odataObject.CashTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * IncomeExpenseAccount entity class.
     */
    export class IncomeExpenseAccountClass implements IncomeExpenseAccount {
        public Amount: number;
        public AccountNumber: string;
        public AccountName: string;
        public AccountNameAlias: string;
        public AccountTypeValue: number;
        public Quantity: number;
        public Message1Line: string;
        public Message2Line: string;
        public SlipText1Line: string;
        public SlipText2Line: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.AccountNumber = odataObject.AccountNumber;
          this.AccountName = odataObject.AccountName;
          this.AccountNameAlias = odataObject.AccountNameAlias;
          this.AccountTypeValue = odataObject.AccountTypeValue;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Message1Line = odataObject.Message1Line;
          this.Message2Line = odataObject.Message2Line;
          this.SlipText1Line = odataObject.SlipText1Line;
          this.SlipText2Line = odataObject.SlipText2Line;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * IncomeExpenseLine entity class.
     */
    export class IncomeExpenseLineClass implements IncomeExpenseLine {
        public Amount: number;
        public IncomeExpenseAccount: string;
        public StoreNumber: string;
        public AccountTypeValue: number;
        public Terminal: string;
        public Shift: string;
        public TransactionStatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.IncomeExpenseAccount = odataObject.IncomeExpenseAccount;
          this.StoreNumber = odataObject.StoreNumber;
          this.AccountTypeValue = odataObject.AccountTypeValue;
          this.Terminal = odataObject.Terminal;
          this.Shift = odataObject.Shift;
          this.TransactionStatusValue = odataObject.TransactionStatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CartTenderLine entity class.
     */
    export class CartTenderLineClass implements CartTenderLine {
        public PaymentCard: Entities.PaymentCard;
        public TokenizedPaymentCard: Entities.TokenizedPaymentCard;
        public IsLinkedRefund: boolean;
        public LinkedPaymentStore: string;
        public LinkedPaymentTerminalId: string;
        public LinkedPaymentTransactionId: string;
        public LinkedPaymentLineNumber: number;
        public LinkedPaymentCurrency: string;
        public TenderLineId: string;
        public Amount: number;
        public CashBackAmount: number;
        public AmountInTenderedCurrency: number;
        public AmountInCompanyCurrency: number;
        public Currency: string;
        public ExchangeRate: number;
        public CompanyCurrencyExchangeRate: number;
        public TenderTypeId: string;
        public SignatureData: string;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public LineNumber: number;
        public GiftCardId: string;
        public GiftCardPin: string;
        public GiftCardExpirationYear: number;
        public GiftCardExpirationMonth: number;
        public CreditMemoId: string;
        public CustomerId: string;
        public LoyaltyCardId: string;
        public CardTypeId: string;
        public IsChangeLine: boolean;
        public IsHistorical: boolean;
        public IsVoidable: boolean;
        public StatusValue: number;
        public VoidStatusValue: number;
        public AuthorizedAmount: number;
        public PaymentRefRecId: number;
        public CardPaymentAccountId: string;
        public ProcessingTypeValue: number;
        public CardProcessorStatusValue: number;
        public LinkedPaymentRefRecId: number;
        public IsPolicyBypassed: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.PaymentCard == null) {
              this.PaymentCard = undefined;
          } else if (odataObject.PaymentCard['@odata.type'] == null) {
              this.PaymentCard = new PaymentCardClass(odataObject.PaymentCard);
          } else {
              var className: string = odataObject.PaymentCard['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.PaymentCard = new Commerce.Proxy.Entities[className](odataObject.PaymentCard)
              }
          }

    
          if (odataObject.TokenizedPaymentCard == null) {
              this.TokenizedPaymentCard = undefined;
          } else if (odataObject.TokenizedPaymentCard['@odata.type'] == null) {
              this.TokenizedPaymentCard = new TokenizedPaymentCardClass(odataObject.TokenizedPaymentCard);
          } else {
              var className: string = odataObject.TokenizedPaymentCard['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.TokenizedPaymentCard = new Commerce.Proxy.Entities[className](odataObject.TokenizedPaymentCard)
              }
          }

    
          this.IsLinkedRefund = odataObject.IsLinkedRefund;
          this.LinkedPaymentStore = odataObject.LinkedPaymentStore;
          this.LinkedPaymentTerminalId = odataObject.LinkedPaymentTerminalId;
          this.LinkedPaymentTransactionId = odataObject.LinkedPaymentTransactionId;
          this.LinkedPaymentLineNumber = (odataObject.LinkedPaymentLineNumber != null) ? parseFloat(odataObject.LinkedPaymentLineNumber) : undefined;
          this.LinkedPaymentCurrency = odataObject.LinkedPaymentCurrency;
          this.TenderLineId = odataObject.TenderLineId;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.CashBackAmount = (odataObject.CashBackAmount != null) ? parseFloat(odataObject.CashBackAmount) : undefined;
          this.AmountInTenderedCurrency = (odataObject.AmountInTenderedCurrency != null) ? parseFloat(odataObject.AmountInTenderedCurrency) : undefined;
          this.AmountInCompanyCurrency = (odataObject.AmountInCompanyCurrency != null) ? parseFloat(odataObject.AmountInCompanyCurrency) : undefined;
          this.Currency = odataObject.Currency;
          this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
          this.CompanyCurrencyExchangeRate = (odataObject.CompanyCurrencyExchangeRate != null) ? parseFloat(odataObject.CompanyCurrencyExchangeRate) : undefined;
          this.TenderTypeId = odataObject.TenderTypeId;
          this.SignatureData = odataObject.SignatureData;
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.GiftCardId = odataObject.GiftCardId;
          this.GiftCardPin = odataObject.GiftCardPin;
          this.GiftCardExpirationYear = odataObject.GiftCardExpirationYear;
          this.GiftCardExpirationMonth = odataObject.GiftCardExpirationMonth;
          this.CreditMemoId = odataObject.CreditMemoId;
          this.CustomerId = odataObject.CustomerId;
          this.LoyaltyCardId = odataObject.LoyaltyCardId;
          this.CardTypeId = odataObject.CardTypeId;
          this.IsChangeLine = odataObject.IsChangeLine;
          this.IsHistorical = odataObject.IsHistorical;
          this.IsVoidable = odataObject.IsVoidable;
          this.StatusValue = odataObject.StatusValue;
          this.VoidStatusValue = odataObject.VoidStatusValue;
          this.AuthorizedAmount = (odataObject.AuthorizedAmount != null) ? parseFloat(odataObject.AuthorizedAmount) : undefined;
          this.PaymentRefRecId = (odataObject.PaymentRefRecId != null) ? parseInt(odataObject.PaymentRefRecId, 10) : undefined;
          this.CardPaymentAccountId = odataObject.CardPaymentAccountId;
          this.ProcessingTypeValue = odataObject.ProcessingTypeValue;
          this.CardProcessorStatusValue = odataObject.CardProcessorStatusValue;
          this.LinkedPaymentRefRecId = (odataObject.LinkedPaymentRefRecId != null) ? parseInt(odataObject.LinkedPaymentRefRecId, 10) : undefined;
          this.IsPolicyBypassed = odataObject.IsPolicyBypassed;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChargeLine entity class.
     */
    export class ChargeLineClass implements ChargeLine {
        public ChargeLineId: string;
        public ChargeCode: string;
        public CurrencyCode: string;
        public ModuleTypeValue: number;
        public IsHeaderChargeProrated: boolean;
        public ChargeTypeValue: number;
        public ChargeMethodValue: number;
        public CalculatedAmount: number;
        public Value: number;
        public Description: string;
        public TransactionId: string;
        public MarkupAutoLineRecordId: number;
        public MarkupAutoTableRecId: number;
        public SaleLineNumber: number;
        public FromAmount: number;
        public ToAmount: number;
        public Keep: number;
        public AmountRefunded: number;
        public ChargeLineOverrides: Entities.ChargeLineOverride[];
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public IsRefundable: boolean;
        public IsShipping: boolean;
        public IsOverridden: boolean;
        public ItemId: string;
        public Quantity: number;
        public Price: number;
        public ItemTaxGroupId: string;
        public SalesTaxGroupId: string;
        public OriginalSalesTaxGroupId: string;
        public OriginalItemTaxGroupId: string;
        public TaxAmount: number;
        public SalesOrderUnitOfMeasure: string;
        public NetAmount: number;
        public NetAmountPerUnit: number;
        public GrossAmount: number;
        public TaxLines: Entities.TaxLine[];
        public TaxMeasures: Entities.TaxMeasure[];
        public TaxAmountExemptInclusive: number;
        public TaxAmountInclusive: number;
        public TaxAmountExclusive: number;
        public NetAmountWithAllInclusiveTax: number;
        public BeginDateTime: Date;
        public EndDateTime: Date;
        public TaxRatePercent: number;
        public IsReturnByReceipt: boolean;
        public ReturnLineTaxAmount: number;
        public ReturnTaxLines: Entities.TaxLine[];
        public TaxExemptPriceInclusiveReductionAmount: number;
        public TaxExemptPriceInclusiveOriginalPrice: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChargeLineId = odataObject.ChargeLineId;
          this.ChargeCode = odataObject.ChargeCode;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.ModuleTypeValue = odataObject.ModuleTypeValue;
          this.IsHeaderChargeProrated = odataObject.IsHeaderChargeProrated;
          this.ChargeTypeValue = odataObject.ChargeTypeValue;
          this.ChargeMethodValue = odataObject.ChargeMethodValue;
          this.CalculatedAmount = (odataObject.CalculatedAmount != null) ? parseFloat(odataObject.CalculatedAmount) : undefined;
          this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
          this.Description = odataObject.Description;
          this.TransactionId = odataObject.TransactionId;
          this.MarkupAutoLineRecordId = (odataObject.MarkupAutoLineRecordId != null) ? parseInt(odataObject.MarkupAutoLineRecordId, 10) : undefined;
          this.MarkupAutoTableRecId = (odataObject.MarkupAutoTableRecId != null) ? parseInt(odataObject.MarkupAutoTableRecId, 10) : undefined;
          this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
          this.FromAmount = (odataObject.FromAmount != null) ? parseFloat(odataObject.FromAmount) : undefined;
          this.ToAmount = (odataObject.ToAmount != null) ? parseFloat(odataObject.ToAmount) : undefined;
          this.Keep = odataObject.Keep;
          this.AmountRefunded = (odataObject.AmountRefunded != null) ? parseFloat(odataObject.AmountRefunded) : undefined;
          this.ChargeLineOverrides = undefined;
          if (odataObject.ChargeLineOverrides) {
              this.ChargeLineOverrides = [];
              for (var i = 0; i < odataObject.ChargeLineOverrides.length; i++) {
                  if (odataObject.ChargeLineOverrides[i] != null) {
                      if (odataObject.ChargeLineOverrides[i]['@odata.type'] != null) {
                          var className: string = odataObject.ChargeLineOverrides[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ChargeLineOverrides[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLineOverrides[i])
                          }
                      } else {
                          this.ChargeLineOverrides[i] = new ChargeLineOverrideClass(odataObject.ChargeLineOverrides[i]);
                      }
                  } else {
                      this.ChargeLineOverrides[i] = undefined;
                  }
              }
          }
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.IsRefundable = odataObject.IsRefundable;
          this.IsShipping = odataObject.IsShipping;
          this.IsOverridden = odataObject.IsOverridden;
          this.ItemId = odataObject.ItemId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
          this.SalesTaxGroupId = odataObject.SalesTaxGroupId;
          this.OriginalSalesTaxGroupId = odataObject.OriginalSalesTaxGroupId;
          this.OriginalItemTaxGroupId = odataObject.OriginalItemTaxGroupId;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.SalesOrderUnitOfMeasure = odataObject.SalesOrderUnitOfMeasure;
          this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
          this.NetAmountPerUnit = (odataObject.NetAmountPerUnit != null) ? parseFloat(odataObject.NetAmountPerUnit) : undefined;
          this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
          this.TaxLines = undefined;
          if (odataObject.TaxLines) {
              this.TaxLines = [];
              for (var i = 0; i < odataObject.TaxLines.length; i++) {
                  if (odataObject.TaxLines[i] != null) {
                      if (odataObject.TaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i])
                          }
                      } else {
                          this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                      }
                  } else {
                      this.TaxLines[i] = undefined;
                  }
              }
          }
          this.TaxMeasures = undefined;
          if (odataObject.TaxMeasures) {
              this.TaxMeasures = [];
              for (var i = 0; i < odataObject.TaxMeasures.length; i++) {
                  if (odataObject.TaxMeasures[i] != null) {
                      if (odataObject.TaxMeasures[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxMeasures[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxMeasures[i] = new Commerce.Proxy.Entities[className](odataObject.TaxMeasures[i])
                          }
                      } else {
                          this.TaxMeasures[i] = new TaxMeasureClass(odataObject.TaxMeasures[i]);
                      }
                  } else {
                      this.TaxMeasures[i] = undefined;
                  }
              }
          }
          this.TaxAmountExemptInclusive = (odataObject.TaxAmountExemptInclusive != null) ? parseFloat(odataObject.TaxAmountExemptInclusive) : undefined;
          this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
          this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
          this.NetAmountWithAllInclusiveTax = (odataObject.NetAmountWithAllInclusiveTax != null) ? parseFloat(odataObject.NetAmountWithAllInclusiveTax) : undefined;
          this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
            : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
          this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
          this.ReturnLineTaxAmount = (odataObject.ReturnLineTaxAmount != null) ? parseFloat(odataObject.ReturnLineTaxAmount) : undefined;
          this.ReturnTaxLines = undefined;
          if (odataObject.ReturnTaxLines) {
              this.ReturnTaxLines = [];
              for (var i = 0; i < odataObject.ReturnTaxLines.length; i++) {
                  if (odataObject.ReturnTaxLines[i] != null) {
                      if (odataObject.ReturnTaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReturnTaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReturnTaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnTaxLines[i])
                          }
                      } else {
                          this.ReturnTaxLines[i] = new TaxLineClass(odataObject.ReturnTaxLines[i]);
                      }
                  } else {
                      this.ReturnTaxLines[i] = undefined;
                  }
              }
          }
          this.TaxExemptPriceInclusiveReductionAmount = (odataObject.TaxExemptPriceInclusiveReductionAmount != null) ? parseFloat(odataObject.TaxExemptPriceInclusiveReductionAmount) : undefined;
          this.TaxExemptPriceInclusiveOriginalPrice = (odataObject.TaxExemptPriceInclusiveOriginalPrice != null) ? parseFloat(odataObject.TaxExemptPriceInclusiveOriginalPrice) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CityInfo entity class.
     */
    export class CityInfoClass implements CityInfo {
        public Name: string;
        public Description: string;
        public CountryRegionId: string;
        public StateId: string;
        public CountyId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.StateId = odataObject.StateId;
          this.CountyId = odataObject.CountyId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommissionSalesGroup entity class.
     */
    export class CommissionSalesGroupClass implements CommissionSalesGroup {
        public GroupId: string;
        public Name: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.GroupId = odataObject.GroupId;
          this.Name = odataObject.Name;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ContactInformation entity class.
     */
    export class ContactInformationClass implements ContactInformation {
        public Value: string;
        public ContactInformationTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Value = odataObject.Value;
          this.ContactInformationTypeValue = odataObject.ContactInformationTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeCategory entity class.
     */
    export class AttributeCategoryClass implements AttributeCategory {
        public Value: Entities.CommercePropertyValue;
        public RecordId: number;
        public Name: string;
        public KeyName: string;
        public DataTypeValue: number;
        public Attribute: number;
        public NameTranslations: Entities.TextValueTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.Value == null) {
              this.Value = undefined;
          } else if (odataObject.Value['@odata.type'] == null) {
              this.Value = new CommercePropertyValueClass(odataObject.Value);
          } else {
              var className: string = odataObject.Value['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value = new Commerce.Proxy.Entities[className](odataObject.Value)
              }
          }

    
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.KeyName = odataObject.KeyName;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.Attribute = (odataObject.Attribute != null) ? parseInt(odataObject.Attribute, 10) : undefined;
          this.NameTranslations = undefined;
          if (odataObject.NameTranslations) {
              this.NameTranslations = [];
              for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                  if (odataObject.NameTranslations[i] != null) {
                      if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.NameTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i])
                          }
                      } else {
                          this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                      }
                  } else {
                      this.NameTranslations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeProduct entity class.
     */
    export class AttributeProductClass implements AttributeProduct {
        public MetadataFlags: Entities.ProductAttributeMetadataFlags;
        public IsDimension: boolean;
        public RecordId: number;
        public Name: string;
        public KeyName: string;
        public DataTypeValue: number;
        public Attribute: number;
        public NameTranslations: Entities.TextValueTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.MetadataFlags == null) {
              this.MetadataFlags = undefined;
          } else if (odataObject.MetadataFlags['@odata.type'] == null) {
              this.MetadataFlags = new ProductAttributeMetadataFlagsClass(odataObject.MetadataFlags);
          } else {
              var className: string = odataObject.MetadataFlags['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.MetadataFlags = new Commerce.Proxy.Entities[className](odataObject.MetadataFlags)
              }
          }

    
          this.IsDimension = odataObject.IsDimension;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.KeyName = odataObject.KeyName;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.Attribute = (odataObject.Attribute != null) ? parseInt(odataObject.Attribute, 10) : undefined;
          this.NameTranslations = undefined;
          if (odataObject.NameTranslations) {
              this.NameTranslations = [];
              for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                  if (odataObject.NameTranslations[i] != null) {
                      if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.NameTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i])
                          }
                      } else {
                          this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                      }
                  } else {
                      this.NameTranslations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductComparisonEntry entity class.
     */
    export class ProductComparisonEntryClass implements ProductComparisonEntry {
        public ProductId: number;
        public AttributeValue: Entities.AttributeValue;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          if (odataObject.AttributeValue == null) {
              this.AttributeValue = undefined;
          } else if (odataObject.AttributeValue['@odata.type'] == null) {
              this.AttributeValue = new AttributeValueClass(odataObject.AttributeValue);
          } else {
              var className: string = odataObject.AttributeValue['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.AttributeValue = new Commerce.Proxy.Entities[className](odataObject.AttributeValue)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductComparisonLine entity class.
     */
    export class ProductComparisonLineClass implements ProductComparisonLine {
        public AttributeRecordId: number;
        public AttributeName: string;
        public ProductAttributeComparisonEntries: Entities.ProductComparisonEntry[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AttributeRecordId = (odataObject.AttributeRecordId != null) ? parseInt(odataObject.AttributeRecordId, 10) : undefined;
          this.AttributeName = odataObject.AttributeName;
          this.ProductAttributeComparisonEntries = undefined;
          if (odataObject.ProductAttributeComparisonEntries) {
              this.ProductAttributeComparisonEntries = [];
              for (var i = 0; i < odataObject.ProductAttributeComparisonEntries.length; i++) {
                  if (odataObject.ProductAttributeComparisonEntries[i] != null) {
                      if (odataObject.ProductAttributeComparisonEntries[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductAttributeComparisonEntries[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductAttributeComparisonEntries[i] = new Commerce.Proxy.Entities[className](odataObject.ProductAttributeComparisonEntries[i])
                          }
                      } else {
                          this.ProductAttributeComparisonEntries[i] = new ProductComparisonEntryClass(odataObject.ProductAttributeComparisonEntries[i]);
                      }
                  } else {
                      this.ProductAttributeComparisonEntries[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerSearchField entity class.
     */
    export class CustomerSearchFieldClass implements CustomerSearchField {
        public IsShortcut: boolean;
        public DisplayName: string;
        public CanBeRefined: boolean;
        public SearchField: Entities.CustomerSearchFieldType;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsShortcut = odataObject.IsShortcut;
          this.DisplayName = odataObject.DisplayName;
          this.CanBeRefined = odataObject.CanBeRefined;
          if (odataObject.SearchField == null) {
              this.SearchField = undefined;
          } else if (odataObject.SearchField['@odata.type'] == null) {
              this.SearchField = new CustomerSearchFieldTypeClass(odataObject.SearchField);
          } else {
              var className: string = odataObject.SearchField['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SearchField = new Commerce.Proxy.Entities[className](odataObject.SearchField)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerSearchByFieldCriteria entity class.
     */
    export class CustomerSearchByFieldCriteriaClass implements CustomerSearchByFieldCriteria {
        public Criteria: Entities.CustomerSearchByFieldCriterion[];
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Criteria = undefined;
          if (odataObject.Criteria) {
              this.Criteria = [];
              for (var i = 0; i < odataObject.Criteria.length; i++) {
                  if (odataObject.Criteria[i] != null) {
                      if (odataObject.Criteria[i]['@odata.type'] != null) {
                          var className: string = odataObject.Criteria[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Criteria[i] = new Commerce.Proxy.Entities[className](odataObject.Criteria[i])
                          }
                      } else {
                          this.Criteria[i] = new CustomerSearchByFieldCriterionClass(odataObject.Criteria[i]);
                      }
                  } else {
                      this.Criteria[i] = undefined;
                  }
              }
          }
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * CustomerSearchByFieldCriterion entity class.
     */
    export class CustomerSearchByFieldCriterionClass implements CustomerSearchByFieldCriterion {
        public SearchTerm: string;
        public SearchField: Entities.CustomerSearchFieldType;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SearchTerm = odataObject.SearchTerm;
          if (odataObject.SearchField == null) {
              this.SearchField = undefined;
          } else if (odataObject.SearchField['@odata.type'] == null) {
              this.SearchField = new CustomerSearchFieldTypeClass(odataObject.SearchField);
          } else {
              var className: string = odataObject.SearchField['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SearchField = new Commerce.Proxy.Entities[className](odataObject.SearchField)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerSearchFieldType entity class.
     */
    export class CustomerSearchFieldTypeClass extends ExtensibleEnumerationClass implements CustomerSearchFieldType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.CustomerSearchFieldType";
            
        }
    }
    
    /**
     * OrderShipments entity class.
     */
    export class OrderShipmentsClass implements OrderShipments {
        public SalesId: string;
        public ChannelId: number;
        public ChannelReferenceId: string;
        public TransactionId: string;
        public CreatedDateTime: Date;
        public StatusValue: number;
        public CurrencyCode: string;
        public CustomerId: string;
        public DeliveryMode: string;
        public GrossAmount: number;
        public InventoryLocationId: string;
        public ReceiptId: string;
        public RequestedDeliveryDate: Date;
        public TotalAmount: number;
        public TaxAmount: number;
        public SalesLines: Entities.SalesLine[];
        public Shipments: Entities.Shipment[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesId = odataObject.SalesId;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.TransactionId = odataObject.TransactionId;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.StatusValue = odataObject.StatusValue;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CustomerId = odataObject.CustomerId;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.ReceiptId = odataObject.ReceiptId;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.SalesLines = undefined;
          if (odataObject.SalesLines) {
              this.SalesLines = [];
              for (var i = 0; i < odataObject.SalesLines.length; i++) {
                  if (odataObject.SalesLines[i] != null) {
                      if (odataObject.SalesLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.SalesLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SalesLines[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLines[i])
                          }
                      } else {
                          this.SalesLines[i] = new SalesLineClass(odataObject.SalesLines[i]);
                      }
                  } else {
                      this.SalesLines[i] = undefined;
                  }
              }
          }
          this.Shipments = undefined;
          if (odataObject.Shipments) {
              this.Shipments = [];
              for (var i = 0; i < odataObject.Shipments.length; i++) {
                  if (odataObject.Shipments[i] != null) {
                      if (odataObject.Shipments[i]['@odata.type'] != null) {
                          var className: string = odataObject.Shipments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Shipments[i] = new Commerce.Proxy.Entities[className](odataObject.Shipments[i])
                          }
                      } else {
                          this.Shipments[i] = new ShipmentClass(odataObject.Shipments[i]);
                      }
                  } else {
                      this.Shipments[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Shipment entity class.
     */
    export class ShipmentClass implements Shipment {
        public SalesId: string;
        public ShipmentId: string;
        public DeliveryAddress: Entities.Address;
        public ShipDate: Date;
        public DeliveryMode: string;
        public TermsOfDelivery: string;
        public WeightUnit: string;
        public TrackingNumber: string;
        public TrackingUrl: string;
        public LatestCarrierTrackingInfo: Entities.TrackingInfo;
        public CarrierId: string;
        public CarrierName: string;
        public ShippingWeight: number;
        public ShipmentLines: Entities.ShipmentLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesId = odataObject.SalesId;
          this.ShipmentId = odataObject.ShipmentId;
          if (odataObject.DeliveryAddress == null) {
              this.DeliveryAddress = undefined;
          } else if (odataObject.DeliveryAddress['@odata.type'] == null) {
              this.DeliveryAddress = new AddressClass(odataObject.DeliveryAddress);
          } else {
              var className: string = odataObject.DeliveryAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DeliveryAddress = new Commerce.Proxy.Entities[className](odataObject.DeliveryAddress)
              }
          }

    
          this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
            : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.TermsOfDelivery = odataObject.TermsOfDelivery;
          this.WeightUnit = odataObject.WeightUnit;
          this.TrackingNumber = odataObject.TrackingNumber;
          this.TrackingUrl = odataObject.TrackingUrl;
          if (odataObject.LatestCarrierTrackingInfo == null) {
              this.LatestCarrierTrackingInfo = undefined;
          } else if (odataObject.LatestCarrierTrackingInfo['@odata.type'] == null) {
              this.LatestCarrierTrackingInfo = new TrackingInfoClass(odataObject.LatestCarrierTrackingInfo);
          } else {
              var className: string = odataObject.LatestCarrierTrackingInfo['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.LatestCarrierTrackingInfo = new Commerce.Proxy.Entities[className](odataObject.LatestCarrierTrackingInfo)
              }
          }

    
          this.CarrierId = odataObject.CarrierId;
          this.CarrierName = odataObject.CarrierName;
          this.ShippingWeight = (odataObject.ShippingWeight != null) ? parseFloat(odataObject.ShippingWeight) : undefined;
          this.ShipmentLines = undefined;
          if (odataObject.ShipmentLines) {
              this.ShipmentLines = [];
              for (var i = 0; i < odataObject.ShipmentLines.length; i++) {
                  if (odataObject.ShipmentLines[i] != null) {
                      if (odataObject.ShipmentLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ShipmentLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ShipmentLines[i] = new Commerce.Proxy.Entities[className](odataObject.ShipmentLines[i])
                          }
                      } else {
                          this.ShipmentLines[i] = new ShipmentLineClass(odataObject.ShipmentLines[i]);
                      }
                  } else {
                      this.ShipmentLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShipmentLine entity class.
     */
    export class ShipmentLineClass implements ShipmentLine {
        public ShipmentLineId: string;
        public ItemId: string;
        public Description: string;
        public InventDimId: string;
        public OrderedQuantity: number;
        public DeliveredQuantity: number;
        public RemainingQuantity: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ShipmentLineId = odataObject.ShipmentLineId;
          this.ItemId = odataObject.ItemId;
          this.Description = odataObject.Description;
          this.InventDimId = odataObject.InventDimId;
          this.OrderedQuantity = (odataObject.OrderedQuantity != null) ? parseFloat(odataObject.OrderedQuantity) : undefined;
          this.DeliveredQuantity = (odataObject.DeliveredQuantity != null) ? parseFloat(odataObject.DeliveredQuantity) : undefined;
          this.RemainingQuantity = (odataObject.RemainingQuantity != null) ? parseFloat(odataObject.RemainingQuantity) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Transaction entity class.
     */
    export class TransactionClass implements Transaction {
        public Id: string;
        public StoreId: string;
        public TerminalId: string;
        public IsCreatedOffline: boolean;
        public StaffId: string;
        public ShiftId: string;
        public ShiftTerminalId: string;
        public Description: string;
        public ReceiptId: string;
        public GrossAmount: number;
        public TotalAmount: number;
        public CreatedDateTime: Date;
        public TransactionTypeValue: number;
        public TransactionStatusValue: number;
        public BeginDateTime: Date;
        public GiftCardActiveFrom: Date;
        public GiftCardBalance: number;
        public GiftCardExpireDate: Date;
        public GiftCardHistoryDetails: string;
        public GiftCardIssueAmount: number;
        public GiftCardIdMasked: string;
        public FromSafe: string;
        public ToSafe: string;
        public FromShiftTerminalId: string;
        public ToShiftTerminalId: string;
        public FromShiftId: string;
        public TransactionSourceContextTypeValue: number;
        public TransactionDestinationContextTypeValue: number;
        public ToShiftId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.IsCreatedOffline = odataObject.IsCreatedOffline;
          this.StaffId = odataObject.StaffId;
          this.ShiftId = odataObject.ShiftId;
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          this.Description = odataObject.Description;
          this.ReceiptId = odataObject.ReceiptId;
          this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.TransactionTypeValue = odataObject.TransactionTypeValue;
          this.TransactionStatusValue = odataObject.TransactionStatusValue;
          this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
            : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
            : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
          this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
            : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
          this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
          this.GiftCardIdMasked = odataObject.GiftCardIdMasked;
          this.FromSafe = odataObject.FromSafe;
          this.ToSafe = odataObject.ToSafe;
          this.FromShiftTerminalId = odataObject.FromShiftTerminalId;
          this.ToShiftTerminalId = odataObject.ToShiftTerminalId;
          this.FromShiftId = odataObject.FromShiftId;
          this.TransactionSourceContextTypeValue = odataObject.TransactionSourceContextTypeValue;
          this.TransactionDestinationContextTypeValue = odataObject.TransactionDestinationContextTypeValue;
          this.ToShiftId = odataObject.ToShiftId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShiftReconciliationLine entity class.
     */
    export class ShiftReconciliationLineClass extends TransactionClass implements ShiftReconciliationLine {
        public GroupId: number;
        public GroupDescription: string;
        public ShiftGroupLinesCount: number;
        public ShiftGroupLinesClosedCount: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.GroupId = (odataObject.GroupId != null) ? parseInt(odataObject.GroupId, 10) : undefined;
          this.GroupDescription = odataObject.GroupDescription;
          this.ShiftGroupLinesCount = (odataObject.ShiftGroupLinesCount != null) ? parseInt(odataObject.ShiftGroupLinesCount, 10) : undefined;
          this.ShiftGroupLinesClosedCount = (odataObject.ShiftGroupLinesClosedCount != null) ? parseInt(odataObject.ShiftGroupLinesClosedCount, 10) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ShiftReconciliationLine";
            
        }
    }
    
    /**
     * ShiftReconciliationLineRetrievalCriteria entity class.
     */
    export class ShiftReconciliationLineRetrievalCriteriaClass implements ShiftReconciliationLineRetrievalCriteria {
        public TransactionTypeValues: number[];
        public ShiftReconciliationLineStatusValue: number;
        public Shifts: Entities.ShiftKey[];
        public DestinationShift: Entities.ShiftKey;
        public SourceShift: Entities.ShiftKey;
        public SourceSafe: string;
        public DestinationSafe: string;
        public TransactionSourceContextTypeValue: number;
        public TransactionDestinationContextTypeValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionTypeValues = undefined;
          if (odataObject.TransactionTypeValues) {
              this.TransactionTypeValues = [];
              for (var i = 0; i < odataObject.TransactionTypeValues.length; i++) {
                  if (odataObject.TransactionTypeValues[i] != null) {
                      this.TransactionTypeValues[i] = odataObject.TransactionTypeValues[i];              } else {
                      this.TransactionTypeValues[i] = undefined;
                  }
              }
          }
          this.ShiftReconciliationLineStatusValue = odataObject.ShiftReconciliationLineStatusValue;
          this.Shifts = undefined;
          if (odataObject.Shifts) {
              this.Shifts = [];
              for (var i = 0; i < odataObject.Shifts.length; i++) {
                  if (odataObject.Shifts[i] != null) {
                      if (odataObject.Shifts[i]['@odata.type'] != null) {
                          var className: string = odataObject.Shifts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Shifts[i] = new Commerce.Proxy.Entities[className](odataObject.Shifts[i])
                          }
                      } else {
                          this.Shifts[i] = new ShiftKeyClass(odataObject.Shifts[i]);
                      }
                  } else {
                      this.Shifts[i] = undefined;
                  }
              }
          }
          if (odataObject.DestinationShift == null) {
              this.DestinationShift = undefined;
          } else if (odataObject.DestinationShift['@odata.type'] == null) {
              this.DestinationShift = new ShiftKeyClass(odataObject.DestinationShift);
          } else {
              var className: string = odataObject.DestinationShift['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DestinationShift = new Commerce.Proxy.Entities[className](odataObject.DestinationShift)
              }
          }

    
          if (odataObject.SourceShift == null) {
              this.SourceShift = undefined;
          } else if (odataObject.SourceShift['@odata.type'] == null) {
              this.SourceShift = new ShiftKeyClass(odataObject.SourceShift);
          } else {
              var className: string = odataObject.SourceShift['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SourceShift = new Commerce.Proxy.Entities[className](odataObject.SourceShift)
              }
          }

    
          this.SourceSafe = odataObject.SourceSafe;
          this.DestinationSafe = odataObject.DestinationSafe;
          this.TransactionSourceContextTypeValue = odataObject.TransactionSourceContextTypeValue;
          this.TransactionDestinationContextTypeValue = odataObject.TransactionDestinationContextTypeValue;
        }
    }
    
    /**
     * SearchConfiguration entity class.
     */
    export class SearchConfigurationClass implements SearchConfiguration {
        public ProductSortColumns: Entities.SortColumn[];
        public ProductSearchServiceTypeValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductSortColumns = undefined;
          if (odataObject.ProductSortColumns) {
              this.ProductSortColumns = [];
              for (var i = 0; i < odataObject.ProductSortColumns.length; i++) {
                  if (odataObject.ProductSortColumns[i] != null) {
                      if (odataObject.ProductSortColumns[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductSortColumns[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductSortColumns[i] = new Commerce.Proxy.Entities[className](odataObject.ProductSortColumns[i])
                          }
                      } else {
                          this.ProductSortColumns[i] = new SortColumnClass(odataObject.ProductSortColumns[i]);
                      }
                  } else {
                      this.ProductSortColumns[i] = undefined;
                  }
              }
          }
          this.ProductSearchServiceTypeValue = odataObject.ProductSearchServiceTypeValue;
        }
    }
    
    /**
     * CustomerTimelineItem entity class.
     */
    export class CustomerTimelineItemClass implements CustomerTimelineItem {
        public CustomerId: string;
        public Description: string;
        public Id: string;
        public EntityType: string;
        public TypeId: string;
        public StaffId: string;
        public StartDateTime: Date;
        public Title: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerId = odataObject.CustomerId;
          this.Description = odataObject.Description;
          this.Id = odataObject.Id;
          this.EntityType = odataObject.EntityType;
          this.TypeId = odataObject.TypeId;
          this.StaffId = odataObject.StaffId;
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Title = odataObject.Title;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeDefinition entity class.
     */
    export class AttributeDefinitionClass implements AttributeDefinition {
        public RecordId: number;
        public Name: string;
        public AttributeTypeName: string;
        public ExtDataType: Entities.ExtensibleAttributeDataType;
        public DataTypeValue: number;
        public IsHidden: boolean;
        public IsMandatory: boolean;
        public IsMultiValue: boolean;
        public IsEnumeration: boolean;
        public TranslationDetails: Entities.AttributeTranslationDetails[];
        public EnumerationDetails: Entities.AttributeEnumeration[];
        public DefaultValue: Entities.CommercePropertyValue;
        public UpperBound: Entities.CommercePropertyValue;
        public LowerBound: Entities.CommercePropertyValue;
        public DisplayOrder: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.AttributeTypeName = odataObject.AttributeTypeName;
          if (odataObject.ExtDataType == null) {
              this.ExtDataType = undefined;
          } else if (odataObject.ExtDataType['@odata.type'] == null) {
              this.ExtDataType = new ExtensibleAttributeDataTypeClass(odataObject.ExtDataType);
          } else {
              var className: string = odataObject.ExtDataType['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ExtDataType = new Commerce.Proxy.Entities[className](odataObject.ExtDataType)
              }
          }

    
          this.DataTypeValue = odataObject.DataTypeValue;
          this.IsHidden = odataObject.IsHidden;
          this.IsMandatory = odataObject.IsMandatory;
          this.IsMultiValue = odataObject.IsMultiValue;
          this.IsEnumeration = odataObject.IsEnumeration;
          this.TranslationDetails = undefined;
          if (odataObject.TranslationDetails) {
              this.TranslationDetails = [];
              for (var i = 0; i < odataObject.TranslationDetails.length; i++) {
                  if (odataObject.TranslationDetails[i] != null) {
                      if (odataObject.TranslationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.TranslationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TranslationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TranslationDetails[i])
                          }
                      } else {
                          this.TranslationDetails[i] = new AttributeTranslationDetailsClass(odataObject.TranslationDetails[i]);
                      }
                  } else {
                      this.TranslationDetails[i] = undefined;
                  }
              }
          }
          this.EnumerationDetails = undefined;
          if (odataObject.EnumerationDetails) {
              this.EnumerationDetails = [];
              for (var i = 0; i < odataObject.EnumerationDetails.length; i++) {
                  if (odataObject.EnumerationDetails[i] != null) {
                      if (odataObject.EnumerationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.EnumerationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.EnumerationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.EnumerationDetails[i])
                          }
                      } else {
                          this.EnumerationDetails[i] = new AttributeEnumerationClass(odataObject.EnumerationDetails[i]);
                      }
                  } else {
                      this.EnumerationDetails[i] = undefined;
                  }
              }
          }
          if (odataObject.DefaultValue == null) {
              this.DefaultValue = undefined;
          } else if (odataObject.DefaultValue['@odata.type'] == null) {
              this.DefaultValue = new CommercePropertyValueClass(odataObject.DefaultValue);
          } else {
              var className: string = odataObject.DefaultValue['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DefaultValue = new Commerce.Proxy.Entities[className](odataObject.DefaultValue)
              }
          }

    
          if (odataObject.UpperBound == null) {
              this.UpperBound = undefined;
          } else if (odataObject.UpperBound['@odata.type'] == null) {
              this.UpperBound = new CommercePropertyValueClass(odataObject.UpperBound);
          } else {
              var className: string = odataObject.UpperBound['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.UpperBound = new Commerce.Proxy.Entities[className](odataObject.UpperBound)
              }
          }

    
          if (odataObject.LowerBound == null) {
              this.LowerBound = undefined;
          } else if (odataObject.LowerBound['@odata.type'] == null) {
              this.LowerBound = new CommercePropertyValueClass(odataObject.LowerBound);
          } else {
              var className: string = odataObject.LowerBound['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.LowerBound = new Commerce.Proxy.Entities[className](odataObject.LowerBound)
              }
          }

    
          this.DisplayOrder = (odataObject.DisplayOrder != null) ? parseFloat(odataObject.DisplayOrder) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeTranslationDetails entity class.
     */
    export class AttributeTranslationDetailsClass implements AttributeTranslationDetails {
        public AttributeRecordId: number;
        public LanguageId: string;
        public FriendlyName: string;
        public Description: string;
        public HelpText: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AttributeRecordId = (odataObject.AttributeRecordId != null) ? parseInt(odataObject.AttributeRecordId, 10) : undefined;
          this.LanguageId = odataObject.LanguageId;
          this.FriendlyName = odataObject.FriendlyName;
          this.Description = odataObject.Description;
          this.HelpText = odataObject.HelpText;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeEnumeration entity class.
     */
    export class AttributeEnumerationClass implements AttributeEnumeration {
        public OrdinalNumber: number;
        public EnumerationValue: string;
        public AttributeEnumerationTranslations: Entities.AttributeEnumerationTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrdinalNumber = odataObject.OrdinalNumber;
          this.EnumerationValue = odataObject.EnumerationValue;
          this.AttributeEnumerationTranslations = undefined;
          if (odataObject.AttributeEnumerationTranslations) {
              this.AttributeEnumerationTranslations = [];
              for (var i = 0; i < odataObject.AttributeEnumerationTranslations.length; i++) {
                  if (odataObject.AttributeEnumerationTranslations[i] != null) {
                      if (odataObject.AttributeEnumerationTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeEnumerationTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeEnumerationTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeEnumerationTranslations[i])
                          }
                      } else {
                          this.AttributeEnumerationTranslations[i] = new AttributeEnumerationTranslationClass(odataObject.AttributeEnumerationTranslations[i]);
                      }
                  } else {
                      this.AttributeEnumerationTranslations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeEnumerationTranslation entity class.
     */
    export class AttributeEnumerationTranslationClass implements AttributeEnumerationTranslation {
        public LanguageId: string;
        public EnumerationTranslationValue: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LanguageId = odataObject.LanguageId;
          this.EnumerationTranslationValue = odataObject.EnumerationTranslationValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeDefinitionCriteria entity class.
     */
    export class AttributeDefinitionCriteriaClass implements AttributeDefinitionCriteria {
        public AttributeGroupIdentifier: number;
        public Languages: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AttributeGroupIdentifier = (odataObject.AttributeGroupIdentifier != null) ? parseInt(odataObject.AttributeGroupIdentifier, 10) : undefined;
          this.Languages = undefined;
          if (odataObject.Languages) {
              this.Languages = [];
              for (var i = 0; i < odataObject.Languages.length; i++) {
                  if (odataObject.Languages[i] != null) {
                      this.Languages[i] = odataObject.Languages[i];              } else {
                      this.Languages[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeGroupDefinition entity class.
     */
    export class AttributeGroupDefinitionClass implements AttributeGroupDefinition {
        public RecordId: number;
        public Name: string;
        public TranslationDetails: Entities.AttributeGroupTranslationDetails[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.TranslationDetails = undefined;
          if (odataObject.TranslationDetails) {
              this.TranslationDetails = [];
              for (var i = 0; i < odataObject.TranslationDetails.length; i++) {
                  if (odataObject.TranslationDetails[i] != null) {
                      if (odataObject.TranslationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.TranslationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TranslationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TranslationDetails[i])
                          }
                      } else {
                          this.TranslationDetails[i] = new AttributeGroupTranslationDetailsClass(odataObject.TranslationDetails[i]);
                      }
                  } else {
                      this.TranslationDetails[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeGroupTranslationDetails entity class.
     */
    export class AttributeGroupTranslationDetailsClass implements AttributeGroupTranslationDetails {
        public AttributeGroupRecordId: number;
        public LanguageId: string;
        public FriendlyName: string;
        public Description: string;
        public HelpText: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AttributeGroupRecordId = (odataObject.AttributeGroupRecordId != null) ? parseInt(odataObject.AttributeGroupRecordId, 10) : undefined;
          this.LanguageId = odataObject.LanguageId;
          this.FriendlyName = odataObject.FriendlyName;
          this.Description = odataObject.Description;
          this.HelpText = odataObject.HelpText;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttributeGroupDefinitionCriteria entity class.
     */
    export class AttributeGroupDefinitionCriteriaClass implements AttributeGroupDefinitionCriteria {
        public AttributeGroupIdentifiers: number[];
        public Languages: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AttributeGroupIdentifiers = undefined;
          if (odataObject.AttributeGroupIdentifiers) {
              this.AttributeGroupIdentifiers = [];
              for (var i = 0; i < odataObject.AttributeGroupIdentifiers.length; i++) {
                  if (odataObject.AttributeGroupIdentifiers[i] != null) {
                      this.AttributeGroupIdentifiers[i] = parseInt(odataObject.AttributeGroupIdentifiers[i], 10);              } else {
                      this.AttributeGroupIdentifiers[i] = undefined;
                  }
              }
          }
          this.Languages = undefined;
          if (odataObject.Languages) {
              this.Languages = [];
              for (var i = 0; i < odataObject.Languages.length; i++) {
                  if (odataObject.Languages[i] != null) {
                      this.Languages[i] = odataObject.Languages[i];              } else {
                      this.Languages[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CountyInfo entity class.
     */
    export class CountyInfoClass implements CountyInfo {
        public Name: string;
        public CountyId: string;
        public CountryRegionId: string;
        public StateId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.CountyId = odataObject.CountyId;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.StateId = odataObject.StateId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerGroup entity class.
     */
    export class CustomerGroupClass implements CustomerGroup {
        public CustomerGroupNumber: string;
        public CustomerGroupName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerGroupNumber = odataObject.CustomerGroupNumber;
          this.CustomerGroupName = odataObject.CustomerGroupName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DiscountLine entity class.
     */
    export class DiscountLineClass implements DiscountLine {
        public SaleLineNumber: number;
        public OfferId: string;
        public OfferName: string;
        public Amount: number;
        public DiscountCost: number;
        public EffectiveAmount: number;
        public SavedEffectiveAmount: number;
        public Percentage: number;
        public DealPrice: number;
        public DiscountLineTypeValue: number;
        public ManualDiscountTypeValue: number;
        public CustomerDiscountTypeValue: number;
        public PeriodicDiscountTypeValue: number;
        public DiscountApplicationGroup: string;
        public ConcurrencyModeValue: number;
        public IsCompoundable: boolean;
        public DiscountCode: string;
        public PricingPriorityNumber: number;
        public IsDiscountCodeRequired: boolean;
        public ThresholdAmountRequired: number;
        public BundleId: number;
        public ValidFrom: Date;
        public ValidTo: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
          this.OfferId = odataObject.OfferId;
          this.OfferName = odataObject.OfferName;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.DiscountCost = (odataObject.DiscountCost != null) ? parseFloat(odataObject.DiscountCost) : undefined;
          this.EffectiveAmount = (odataObject.EffectiveAmount != null) ? parseFloat(odataObject.EffectiveAmount) : undefined;
          this.SavedEffectiveAmount = (odataObject.SavedEffectiveAmount != null) ? parseFloat(odataObject.SavedEffectiveAmount) : undefined;
          this.Percentage = (odataObject.Percentage != null) ? parseFloat(odataObject.Percentage) : undefined;
          this.DealPrice = (odataObject.DealPrice != null) ? parseFloat(odataObject.DealPrice) : undefined;
          this.DiscountLineTypeValue = odataObject.DiscountLineTypeValue;
          this.ManualDiscountTypeValue = odataObject.ManualDiscountTypeValue;
          this.CustomerDiscountTypeValue = odataObject.CustomerDiscountTypeValue;
          this.PeriodicDiscountTypeValue = odataObject.PeriodicDiscountTypeValue;
          this.DiscountApplicationGroup = odataObject.DiscountApplicationGroup;
          this.ConcurrencyModeValue = odataObject.ConcurrencyModeValue;
          this.IsCompoundable = odataObject.IsCompoundable;
          this.DiscountCode = odataObject.DiscountCode;
          this.PricingPriorityNumber = odataObject.PricingPriorityNumber;
          this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
          this.ThresholdAmountRequired = (odataObject.ThresholdAmountRequired != null) ? parseFloat(odataObject.ThresholdAmountRequired) : undefined;
          this.BundleId = odataObject.BundleId;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * EmployeePermissions entity class.
     */
    export class EmployeePermissionsClass implements EmployeePermissions {
        public PriceOverrideRestrictionValue: number;
        public AllowPriceOverride: number;
        public MaximumDiscountPercentage: number;
        public MaximumLineDiscountAmount: number;
        public MaximumLineReturnAmount: number;
        public MaximumTotalDiscountAmount: number;
        public MaximumTotalDiscountPercentage: number;
        public MaxTotalReturnAmount: number;
        public StaffId: string;
        public Roles: string[];
        public AllowUseSharedShift: boolean;
        public AllowManageSharedShift: boolean;
        public AllowTaskGuides: boolean;
        public AllowSaleOutsideAssortment: boolean;
        public AllowPrintingReceiptCopy: string;
        public AllowSkipFiscalRegistration: boolean;
        public AllowSkipRegistrationOrMarkAsRegistered: boolean;
        public AllowCreateTransferOrder: boolean;
        public AllowAcceptOrder: boolean;
        public AllowTaskManagement: boolean;
        public AllowRejectOrder: boolean;
        public AllowMassActivation: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PriceOverrideRestrictionValue = odataObject.PriceOverrideRestrictionValue;
          this.AllowPriceOverride = odataObject.AllowPriceOverride;
          this.MaximumDiscountPercentage = (odataObject.MaximumDiscountPercentage != null) ? parseFloat(odataObject.MaximumDiscountPercentage) : undefined;
          this.MaximumLineDiscountAmount = (odataObject.MaximumLineDiscountAmount != null) ? parseFloat(odataObject.MaximumLineDiscountAmount) : undefined;
          this.MaximumLineReturnAmount = (odataObject.MaximumLineReturnAmount != null) ? parseFloat(odataObject.MaximumLineReturnAmount) : undefined;
          this.MaximumTotalDiscountAmount = (odataObject.MaximumTotalDiscountAmount != null) ? parseFloat(odataObject.MaximumTotalDiscountAmount) : undefined;
          this.MaximumTotalDiscountPercentage = (odataObject.MaximumTotalDiscountPercentage != null) ? parseFloat(odataObject.MaximumTotalDiscountPercentage) : undefined;
          this.MaxTotalReturnAmount = (odataObject.MaxTotalReturnAmount != null) ? parseFloat(odataObject.MaxTotalReturnAmount) : undefined;
          this.StaffId = odataObject.StaffId;
          this.Roles = undefined;
          if (odataObject.Roles) {
              this.Roles = [];
              for (var i = 0; i < odataObject.Roles.length; i++) {
                  if (odataObject.Roles[i] != null) {
                      this.Roles[i] = odataObject.Roles[i];              } else {
                      this.Roles[i] = undefined;
                  }
              }
          }
          this.AllowUseSharedShift = odataObject.AllowUseSharedShift;
          this.AllowManageSharedShift = odataObject.AllowManageSharedShift;
          this.AllowTaskGuides = odataObject.AllowTaskGuides;
          this.AllowSaleOutsideAssortment = odataObject.AllowSaleOutsideAssortment;
          this.AllowPrintingReceiptCopy = odataObject.AllowPrintingReceiptCopy;
          this.AllowSkipFiscalRegistration = odataObject.AllowSkipFiscalRegistration;
          this.AllowSkipRegistrationOrMarkAsRegistered = odataObject.AllowSkipRegistrationOrMarkAsRegistered;
          this.AllowCreateTransferOrder = odataObject.AllowCreateTransferOrder;
          this.AllowAcceptOrder = odataObject.AllowAcceptOrder;
          this.AllowTaskManagement = odataObject.AllowTaskManagement;
          this.AllowRejectOrder = odataObject.AllowRejectOrder;
          this.AllowMassActivation = odataObject.AllowMassActivation;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceProperty entity class.
     */
    export class CommercePropertyClass implements CommerceProperty {
        public Key: string;
        public Value: Entities.CommercePropertyValue;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Key = odataObject.Key;
          if (odataObject.Value == null) {
              this.Value = undefined;
          } else if (odataObject.Value['@odata.type'] == null) {
              this.Value = new CommercePropertyValueClass(odataObject.Value);
          } else {
              var className: string = odataObject.Value['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value = new Commerce.Proxy.Entities[className](odataObject.Value)
              }
          }

    
        }
    }
    
    /**
     * CommercePropertyValue entity class.
     */
    export class CommercePropertyValueClass implements CommercePropertyValue {
        public BooleanValue: boolean;
        public ByteValue: number;
        public DateTimeOffsetValue: Date;
        public DecimalValue: number;
        public IntegerValue: number;
        public LongValue: number;
        public StringValue: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.BooleanValue = odataObject.BooleanValue;
          this.ByteValue = (odataObject.ByteValue != null) ? parseInt(odataObject.ByteValue, 10) : undefined;
          this.DateTimeOffsetValue = (odataObject.DateTimeOffsetValue instanceof Date) ? odataObject.DateTimeOffsetValue
            : (odataObject.DateTimeOffsetValue != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTimeOffsetValue, "Edm.DateTimeOffset", false) : undefined;
          this.DecimalValue = (odataObject.DecimalValue != null) ? parseFloat(odataObject.DecimalValue) : undefined;
          this.IntegerValue = odataObject.IntegerValue;
          this.LongValue = (odataObject.LongValue != null) ? parseInt(odataObject.LongValue, 10) : undefined;
          this.StringValue = odataObject.StringValue;
        }
    }
    
    /**
     * CountryRegionInfo entity class.
     */
    export class CountryRegionInfoClass implements CountryRegionInfo {
        public CountryRegionId: string;
        public ShortName: string;
        public LongName: string;
        public ISOCode: string;
        public TimeZone: number;
        public LanguageId: string;
        public AddressFormatLines: Entities.AddressFormattingInfo[];
        public AddressFormatId: string;
        public AddressFormatName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CountryRegionId = odataObject.CountryRegionId;
          this.ShortName = odataObject.ShortName;
          this.LongName = odataObject.LongName;
          this.ISOCode = odataObject.ISOCode;
          this.TimeZone = odataObject.TimeZone;
          this.LanguageId = odataObject.LanguageId;
          this.AddressFormatLines = undefined;
          if (odataObject.AddressFormatLines) {
              this.AddressFormatLines = [];
              for (var i = 0; i < odataObject.AddressFormatLines.length; i++) {
                  if (odataObject.AddressFormatLines[i] != null) {
                      if (odataObject.AddressFormatLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.AddressFormatLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AddressFormatLines[i] = new Commerce.Proxy.Entities[className](odataObject.AddressFormatLines[i])
                          }
                      } else {
                          this.AddressFormatLines[i] = new AddressFormattingInfoClass(odataObject.AddressFormatLines[i]);
                      }
                  } else {
                      this.AddressFormatLines[i] = undefined;
                  }
              }
          }
          this.AddressFormatId = odataObject.AddressFormatId;
          this.AddressFormatName = odataObject.AddressFormatName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CreditMemo entity class.
     */
    export class CreditMemoClass implements CreditMemo {
        public Id: string;
        public Balance: number;
        public CurrencyCode: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Currency entity class.
     */
    export class CurrencyClass implements Currency {
        public CurrencyCode: string;
        public CurrencySymbol: string;
        public RoundOffPrice: number;
        public RoundOffSales: number;
        public RoundOffTypePrice: number;
        public RoundOffTypeSales: number;
        public NumberOfDecimals: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CurrencySymbol = odataObject.CurrencySymbol;
          this.RoundOffPrice = (odataObject.RoundOffPrice != null) ? parseFloat(odataObject.RoundOffPrice) : undefined;
          this.RoundOffSales = (odataObject.RoundOffSales != null) ? parseFloat(odataObject.RoundOffSales) : undefined;
          this.RoundOffTypePrice = odataObject.RoundOffTypePrice;
          this.RoundOffTypeSales = odataObject.RoundOffTypeSales;
          this.NumberOfDecimals = odataObject.NumberOfDecimals;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CurrencyAmount entity class.
     */
    export class CurrencyAmountClass implements CurrencyAmount {
        public CurrencyCode: string;
        public CurrencySymbol: string;
        public ConvertedAmount: number;
        public RoundedConvertedAmount: number;
        public ExchangeRate: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CurrencySymbol = odataObject.CurrencySymbol;
          this.ConvertedAmount = (odataObject.ConvertedAmount != null) ? parseFloat(odataObject.ConvertedAmount) : undefined;
          this.RoundedConvertedAmount = (odataObject.RoundedConvertedAmount != null) ? parseFloat(odataObject.RoundedConvertedAmount) : undefined;
          this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * EnvironmentConfiguration entity class.
     */
    export class EnvironmentConfigurationClass implements EnvironmentConfiguration {
        public EnvironmentId: string;
        public EnvironmentName: string;
        public TenantId: string;
        public ClientAppInsightsInstrumentationKey: string;
        public HardwareStationAppInsightsInstrumentationKey: string;
        public WindowsPhonePosAppInsightsInstrumentationKey: string;
        public BaseVersion: string;
        public ScaleUnit: Entities.ScaleUnitConfiguration;
        public AADAuthority: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EnvironmentId = odataObject.EnvironmentId;
          this.EnvironmentName = odataObject.EnvironmentName;
          this.TenantId = odataObject.TenantId;
          this.ClientAppInsightsInstrumentationKey = odataObject.ClientAppInsightsInstrumentationKey;
          this.HardwareStationAppInsightsInstrumentationKey = odataObject.HardwareStationAppInsightsInstrumentationKey;
          this.WindowsPhonePosAppInsightsInstrumentationKey = odataObject.WindowsPhonePosAppInsightsInstrumentationKey;
          this.BaseVersion = odataObject.BaseVersion;
          if (odataObject.ScaleUnit == null) {
              this.ScaleUnit = undefined;
          } else if (odataObject.ScaleUnit['@odata.type'] == null) {
              this.ScaleUnit = new ScaleUnitConfigurationClass(odataObject.ScaleUnit);
          } else {
              var className: string = odataObject.ScaleUnit['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ScaleUnit = new Commerce.Proxy.Entities[className](odataObject.ScaleUnit)
              }
          }

    
          this.AADAuthority = odataObject.AADAuthority;
        }
    }
    
    /**
     * DeviceConfiguration entity class.
     */
    export class DeviceConfigurationClass implements DeviceConfiguration {
        public UseInMemoryDeviceDataStorage: boolean;
        public AllowItemsAggregation: boolean;
        public AggregateItemsForPrinting: boolean;
        public AggregatePayments: boolean;
        public AlwaysExpandTransactionScreenLineDetails: boolean;
        public AuditEnabled: boolean;
        public DiscountAtTotal: string;
        public ProductDiscount: string;
        public ManuallyCalculateComplexDiscounts: boolean;
        public DisplaySecondaryTotalCurrency: boolean;
        public EndOfTransaction: string;
        public ItemNotOnFile: string;
        public LimitStaffListToStore: boolean;
        public LineItemTaxChange: string;
        public MarkUp: string;
        public MaximumPrice: number;
        public MaximumQuantity: number;
        public MinimumPasswordLength: number;
        public MustKeyInPriceIfZero: boolean;
        public NfcEContingencyModeEnabled: string;
        public NfcEVoided: string;
        public FunctionalityProfileDescription: string;
        public OverridePrice: string;
        public PrintVoidTransactionReceipts: boolean;
        public PrintReceiptsOnCardDecline: boolean;
        public PrintXZReportsOnTerminal: boolean;
        public PrintTenderDetailsOnXReport: boolean;
        public ProfileId: string;
        public RefundSale: string;
        public ReturnProduct: string;
        public SalesPerson: string;
        public SecondaryTotalCurrency: string;
        public SelectHardwareStationOnTendering: boolean;
        public SerialNumber: string;
        public ShowStaffListAtLogOn: boolean;
        public StaffBarcodeLogOn: boolean;
        public StaffBarcodeLogOnRequiresPassword: boolean;
        public StaffCardLogOn: boolean;
        public StaffCardLogOnRequiresPassword: boolean;
        public StartOfTransaction: string;
        public EnableTimeRegistration: boolean;
        public TenderDeclaration: string;
        public TransactionTaxChange: string;
        public VoidItem: string;
        public VoidPayment: string;
        public SalesModeDefaultsAsCustomerOrder: boolean;
        public CreateOfflineCustomerOrders: boolean;
        public CreateAsyncCustomers: boolean;
        public EnableAxCustomerSearch: boolean;
        public VoidTransaction: string;
        public CultureName: string;
        public SystemLegalTermsUrl: string;
        public SystemPrivacyStatementUrl: string;
        public HideTrainingMode: boolean;
        public StorePhone: string;
        public StatementMethod: string;
        public StoreNumber: string;
        public ChannelId: number;
        public StoreTaxGroup: string;
        public TaxIdNumber: string;
        public TaxOverrideGroup: number;
        public TenderDeclarationCalculation: number;
        public UseCustomerBasedTax: boolean;
        public UseDestinationBasedTax: boolean;
        public AutoLogOffTimeoutInMinutes: number;
        public AutoExitMethodValue: number;
        public CustomerDisplayText1: string;
        public CustomerDisplayText2: string;
        public EFTStoreId: number;
        public EFTTerminalId: string;
        public ExitAfterEachTransaction: boolean;
        public HardwareProfile: string;
        public Placement: string;
        public TerminalDescription: string;
        public OpenDrawer: string;
        public OpenDrawerAtLogOnLogOff: boolean;
        public PrintTaxRefundChecks: boolean;
        public StandAlone: boolean;
        public TerminalId: string;
        public TerminalStatement: boolean;
        public VisualProfile: string;
        public Currency: string;
        public InventLocationId: string;
        public IncludeKitComponents: boolean;
        public AccentColor: number;
        public HeaderColor: number;
        public Theme: string;
        public FontScheme: number;
        public ShowAppBarLabel: boolean;
        public LogOnBackgroundPictureAsBase64: string;
        public LogOnBackgroundPicturePortraitAsBase64: string;
        public BackgroundPictureAsBase64: string;
        public LogonBackgroundPictureId: number;
        public LogonBackgroundPictureIdCompact: number;
        public LogonBackgroundPictureIdPortrait: number;
        public LogonBackgroundPictureIdCompactPortrait: number;
        public BackgroundPictureId: number;
        public RequireAmountDeclaration: boolean;
        public DecimalNotRequiredForMinorCurrencyUnit: boolean;
        public MaxTransactionSearchResults: number;
        public OfflineProfileId: number;
        public NewOfflineDatabaseCheckInterval: number;
        public OfflineTransactionUploadInterval: number;
        public ReconnectToOnlineInterval: number;
        public SwitchToOfflineTimeout: number;
        public RetentionDays: number;
        public HardwareConfigurations: Entities.HardwareConfigurations;
        public CreateRecording: boolean;
        public PlaybackRecording: boolean;
        public ShouldUseDefaultCommisionSalesGroup: boolean;
        public AskForSalesRepresentative: number;
        public IsSalesRepRequired: boolean;
        public ProhibitMixingSalesAndReturns: boolean;
        public ApplyDiscountsToPriceKeyedIn: boolean;
        public ApplyDiscountsToPriceOverrides: boolean;
        public IsProductSuggestionsEnabled: boolean;
        public ProductSearchType: string;
        public TerminalRecId: number;
        public DeviceRecId: number;
        public DenominationsToDisplayValue: number;
        public PromptOnSeamlessOffline: boolean;
        public RetryCountToOffline: number;
        public EnableAdvancedOfflineSwitching: boolean;
        public SystemHealthCheckInterval: number;
        public RejectOrderFulfillment: string;
        public ManuallyCalculateTaxes: boolean;
        public EmployeeLogonTypeValue: number;
        public StartAmountCalculation: number;
        public BankDropCalculation: number;
        public GenerateLoyaltyCardNumber: boolean;
        public FiscalRegistrationProcessId: string;
        public IncludeSalesOrderInvoices: boolean;
        public IncludeFreeTextInvoices: boolean;
        public IncludeProjectInvoices: boolean;
        public IncludeCreditNoteInvoices: boolean;
        public DisplayTaxExemptInLineDetails: boolean;
        public TaxExemptReceiptIndicator: string;
        public ManuallyCalculateCharges: boolean;
        public ChargeOverrideReasonCode: string;
        public ShiftReconcilation: string;
        public CustomerAccountFloorLimit: number;
        public VoidSuspendedTransactionsOnCloseShift: boolean;
        public ShowDateTime: boolean;
        public UseAdvancedCashManagement: boolean;
        public DefaultCustomerSearchModeValue: number;
        public AllowManualOfflineBeforeSignIn: boolean;
        public UseFinancialReconciliationInStore: boolean;
        public RequirePaymentForFulfillmentValue: number;
        public CardNotPresentProcessingConfigurationValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.UseInMemoryDeviceDataStorage = odataObject.UseInMemoryDeviceDataStorage;
          this.AllowItemsAggregation = odataObject.AllowItemsAggregation;
          this.AggregateItemsForPrinting = odataObject.AggregateItemsForPrinting;
          this.AggregatePayments = odataObject.AggregatePayments;
          this.AlwaysExpandTransactionScreenLineDetails = odataObject.AlwaysExpandTransactionScreenLineDetails;
          this.AuditEnabled = odataObject.AuditEnabled;
          this.DiscountAtTotal = odataObject.DiscountAtTotal;
          this.ProductDiscount = odataObject.ProductDiscount;
          this.ManuallyCalculateComplexDiscounts = odataObject.ManuallyCalculateComplexDiscounts;
          this.DisplaySecondaryTotalCurrency = odataObject.DisplaySecondaryTotalCurrency;
          this.EndOfTransaction = odataObject.EndOfTransaction;
          this.ItemNotOnFile = odataObject.ItemNotOnFile;
          this.LimitStaffListToStore = odataObject.LimitStaffListToStore;
          this.LineItemTaxChange = odataObject.LineItemTaxChange;
          this.MarkUp = odataObject.MarkUp;
          this.MaximumPrice = (odataObject.MaximumPrice != null) ? parseFloat(odataObject.MaximumPrice) : undefined;
          this.MaximumQuantity = (odataObject.MaximumQuantity != null) ? parseFloat(odataObject.MaximumQuantity) : undefined;
          this.MinimumPasswordLength = odataObject.MinimumPasswordLength;
          this.MustKeyInPriceIfZero = odataObject.MustKeyInPriceIfZero;
          this.NfcEContingencyModeEnabled = odataObject.NfcEContingencyModeEnabled;
          this.NfcEVoided = odataObject.NfcEVoided;
          this.FunctionalityProfileDescription = odataObject.FunctionalityProfileDescription;
          this.OverridePrice = odataObject.OverridePrice;
          this.PrintVoidTransactionReceipts = odataObject.PrintVoidTransactionReceipts;
          this.PrintReceiptsOnCardDecline = odataObject.PrintReceiptsOnCardDecline;
          this.PrintXZReportsOnTerminal = odataObject.PrintXZReportsOnTerminal;
          this.PrintTenderDetailsOnXReport = odataObject.PrintTenderDetailsOnXReport;
          this.ProfileId = odataObject.ProfileId;
          this.RefundSale = odataObject.RefundSale;
          this.ReturnProduct = odataObject.ReturnProduct;
          this.SalesPerson = odataObject.SalesPerson;
          this.SecondaryTotalCurrency = odataObject.SecondaryTotalCurrency;
          this.SelectHardwareStationOnTendering = odataObject.SelectHardwareStationOnTendering;
          this.SerialNumber = odataObject.SerialNumber;
          this.ShowStaffListAtLogOn = odataObject.ShowStaffListAtLogOn;
          this.StaffBarcodeLogOn = odataObject.StaffBarcodeLogOn;
          this.StaffBarcodeLogOnRequiresPassword = odataObject.StaffBarcodeLogOnRequiresPassword;
          this.StaffCardLogOn = odataObject.StaffCardLogOn;
          this.StaffCardLogOnRequiresPassword = odataObject.StaffCardLogOnRequiresPassword;
          this.StartOfTransaction = odataObject.StartOfTransaction;
          this.EnableTimeRegistration = odataObject.EnableTimeRegistration;
          this.TenderDeclaration = odataObject.TenderDeclaration;
          this.TransactionTaxChange = odataObject.TransactionTaxChange;
          this.VoidItem = odataObject.VoidItem;
          this.VoidPayment = odataObject.VoidPayment;
          this.SalesModeDefaultsAsCustomerOrder = odataObject.SalesModeDefaultsAsCustomerOrder;
          this.CreateOfflineCustomerOrders = odataObject.CreateOfflineCustomerOrders;
          this.CreateAsyncCustomers = odataObject.CreateAsyncCustomers;
          this.EnableAxCustomerSearch = odataObject.EnableAxCustomerSearch;
          this.VoidTransaction = odataObject.VoidTransaction;
          this.CultureName = odataObject.CultureName;
          this.SystemLegalTermsUrl = odataObject.SystemLegalTermsUrl;
          this.SystemPrivacyStatementUrl = odataObject.SystemPrivacyStatementUrl;
          this.HideTrainingMode = odataObject.HideTrainingMode;
          this.StorePhone = odataObject.StorePhone;
          this.StatementMethod = odataObject.StatementMethod;
          this.StoreNumber = odataObject.StoreNumber;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.StoreTaxGroup = odataObject.StoreTaxGroup;
          this.TaxIdNumber = odataObject.TaxIdNumber;
          this.TaxOverrideGroup = (odataObject.TaxOverrideGroup != null) ? parseInt(odataObject.TaxOverrideGroup, 10) : undefined;
          this.TenderDeclarationCalculation = odataObject.TenderDeclarationCalculation;
          this.UseCustomerBasedTax = odataObject.UseCustomerBasedTax;
          this.UseDestinationBasedTax = odataObject.UseDestinationBasedTax;
          this.AutoLogOffTimeoutInMinutes = odataObject.AutoLogOffTimeoutInMinutes;
          this.AutoExitMethodValue = odataObject.AutoExitMethodValue;
          this.CustomerDisplayText1 = odataObject.CustomerDisplayText1;
          this.CustomerDisplayText2 = odataObject.CustomerDisplayText2;
          this.EFTStoreId = (odataObject.EFTStoreId != null) ? parseInt(odataObject.EFTStoreId, 10) : undefined;
          this.EFTTerminalId = odataObject.EFTTerminalId;
          this.ExitAfterEachTransaction = odataObject.ExitAfterEachTransaction;
          this.HardwareProfile = odataObject.HardwareProfile;
          this.Placement = odataObject.Placement;
          this.TerminalDescription = odataObject.TerminalDescription;
          this.OpenDrawer = odataObject.OpenDrawer;
          this.OpenDrawerAtLogOnLogOff = odataObject.OpenDrawerAtLogOnLogOff;
          this.PrintTaxRefundChecks = odataObject.PrintTaxRefundChecks;
          this.StandAlone = odataObject.StandAlone;
          this.TerminalId = odataObject.TerminalId;
          this.TerminalStatement = odataObject.TerminalStatement;
          this.VisualProfile = odataObject.VisualProfile;
          this.Currency = odataObject.Currency;
          this.InventLocationId = odataObject.InventLocationId;
          this.IncludeKitComponents = odataObject.IncludeKitComponents;
          this.AccentColor = odataObject.AccentColor;
          this.HeaderColor = odataObject.HeaderColor;
          this.Theme = odataObject.Theme;
          this.FontScheme = odataObject.FontScheme;
          this.ShowAppBarLabel = odataObject.ShowAppBarLabel;
          this.LogOnBackgroundPictureAsBase64 = odataObject.LogOnBackgroundPictureAsBase64;
          this.LogOnBackgroundPicturePortraitAsBase64 = odataObject.LogOnBackgroundPicturePortraitAsBase64;
          this.BackgroundPictureAsBase64 = odataObject.BackgroundPictureAsBase64;
          this.LogonBackgroundPictureId = (odataObject.LogonBackgroundPictureId != null) ? parseInt(odataObject.LogonBackgroundPictureId, 10) : undefined;
          this.LogonBackgroundPictureIdCompact = (odataObject.LogonBackgroundPictureIdCompact != null) ? parseInt(odataObject.LogonBackgroundPictureIdCompact, 10) : undefined;
          this.LogonBackgroundPictureIdPortrait = (odataObject.LogonBackgroundPictureIdPortrait != null) ? parseInt(odataObject.LogonBackgroundPictureIdPortrait, 10) : undefined;
          this.LogonBackgroundPictureIdCompactPortrait = (odataObject.LogonBackgroundPictureIdCompactPortrait != null) ? parseInt(odataObject.LogonBackgroundPictureIdCompactPortrait, 10) : undefined;
          this.BackgroundPictureId = (odataObject.BackgroundPictureId != null) ? parseInt(odataObject.BackgroundPictureId, 10) : undefined;
          this.RequireAmountDeclaration = odataObject.RequireAmountDeclaration;
          this.DecimalNotRequiredForMinorCurrencyUnit = odataObject.DecimalNotRequiredForMinorCurrencyUnit;
          this.MaxTransactionSearchResults = odataObject.MaxTransactionSearchResults;
          this.OfflineProfileId = (odataObject.OfflineProfileId != null) ? parseInt(odataObject.OfflineProfileId, 10) : undefined;
          this.NewOfflineDatabaseCheckInterval = odataObject.NewOfflineDatabaseCheckInterval;
          this.OfflineTransactionUploadInterval = odataObject.OfflineTransactionUploadInterval;
          this.ReconnectToOnlineInterval = odataObject.ReconnectToOnlineInterval;
          this.SwitchToOfflineTimeout = odataObject.SwitchToOfflineTimeout;
          this.RetentionDays = odataObject.RetentionDays;
          if (odataObject.HardwareConfigurations == null) {
              this.HardwareConfigurations = undefined;
          } else if (odataObject.HardwareConfigurations['@odata.type'] == null) {
              this.HardwareConfigurations = new HardwareConfigurationsClass(odataObject.HardwareConfigurations);
          } else {
              var className: string = odataObject.HardwareConfigurations['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.HardwareConfigurations = new Commerce.Proxy.Entities[className](odataObject.HardwareConfigurations)
              }
          }

    
          this.CreateRecording = odataObject.CreateRecording;
          this.PlaybackRecording = odataObject.PlaybackRecording;
          this.ShouldUseDefaultCommisionSalesGroup = odataObject.ShouldUseDefaultCommisionSalesGroup;
          this.AskForSalesRepresentative = odataObject.AskForSalesRepresentative;
          this.IsSalesRepRequired = odataObject.IsSalesRepRequired;
          this.ProhibitMixingSalesAndReturns = odataObject.ProhibitMixingSalesAndReturns;
          this.ApplyDiscountsToPriceKeyedIn = odataObject.ApplyDiscountsToPriceKeyedIn;
          this.ApplyDiscountsToPriceOverrides = odataObject.ApplyDiscountsToPriceOverrides;
          this.IsProductSuggestionsEnabled = odataObject.IsProductSuggestionsEnabled;
          this.ProductSearchType = odataObject.ProductSearchType;
          this.TerminalRecId = (odataObject.TerminalRecId != null) ? parseInt(odataObject.TerminalRecId, 10) : undefined;
          this.DeviceRecId = (odataObject.DeviceRecId != null) ? parseInt(odataObject.DeviceRecId, 10) : undefined;
          this.DenominationsToDisplayValue = odataObject.DenominationsToDisplayValue;
          this.PromptOnSeamlessOffline = odataObject.PromptOnSeamlessOffline;
          this.RetryCountToOffline = odataObject.RetryCountToOffline;
          this.EnableAdvancedOfflineSwitching = odataObject.EnableAdvancedOfflineSwitching;
          this.SystemHealthCheckInterval = odataObject.SystemHealthCheckInterval;
          this.RejectOrderFulfillment = odataObject.RejectOrderFulfillment;
          this.ManuallyCalculateTaxes = odataObject.ManuallyCalculateTaxes;
          this.EmployeeLogonTypeValue = odataObject.EmployeeLogonTypeValue;
          this.StartAmountCalculation = odataObject.StartAmountCalculation;
          this.BankDropCalculation = odataObject.BankDropCalculation;
          this.GenerateLoyaltyCardNumber = odataObject.GenerateLoyaltyCardNumber;
          this.FiscalRegistrationProcessId = odataObject.FiscalRegistrationProcessId;
          this.IncludeSalesOrderInvoices = odataObject.IncludeSalesOrderInvoices;
          this.IncludeFreeTextInvoices = odataObject.IncludeFreeTextInvoices;
          this.IncludeProjectInvoices = odataObject.IncludeProjectInvoices;
          this.IncludeCreditNoteInvoices = odataObject.IncludeCreditNoteInvoices;
          this.DisplayTaxExemptInLineDetails = odataObject.DisplayTaxExemptInLineDetails;
          this.TaxExemptReceiptIndicator = odataObject.TaxExemptReceiptIndicator;
          this.ManuallyCalculateCharges = odataObject.ManuallyCalculateCharges;
          this.ChargeOverrideReasonCode = odataObject.ChargeOverrideReasonCode;
          this.ShiftReconcilation = odataObject.ShiftReconcilation;
          this.CustomerAccountFloorLimit = (odataObject.CustomerAccountFloorLimit != null) ? parseFloat(odataObject.CustomerAccountFloorLimit) : undefined;
          this.VoidSuspendedTransactionsOnCloseShift = odataObject.VoidSuspendedTransactionsOnCloseShift;
          this.ShowDateTime = odataObject.ShowDateTime;
          this.UseAdvancedCashManagement = odataObject.UseAdvancedCashManagement;
          this.DefaultCustomerSearchModeValue = odataObject.DefaultCustomerSearchModeValue;
          this.AllowManualOfflineBeforeSignIn = odataObject.AllowManualOfflineBeforeSignIn;
          this.UseFinancialReconciliationInStore = odataObject.UseFinancialReconciliationInStore;
          this.RequirePaymentForFulfillmentValue = odataObject.RequirePaymentForFulfillmentValue;
          this.CardNotPresentProcessingConfigurationValue = odataObject.CardNotPresentProcessingConfigurationValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * VisualProfile entity class.
     */
    export class VisualProfileClass implements VisualProfile {
        public ChannelId: number;
        public TerminalId: string;
        public AccentColor: number;
        public HeaderColor: number;
        public Theme: string;
        public FontSchemeTypeValue: number;
        public IsAppBarLabelVisible: boolean;
        public IsDateTimeVisible: boolean;
        public LogOnLayoutTypeValue: number;
        public LogOnKeyboardTypeValue: number;
        public LogonBackgroundPictureId: number;
        public CompactLogonBackgroundPictureId: number;
        public PortraitLogonBackgroundPictureId: number;
        public CompactPortraitLogonBackgroundPictureId: number;
        public BackgroundPictureId: number;
        public LogOnLogoPictureId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.AccentColor = odataObject.AccentColor;
          this.HeaderColor = odataObject.HeaderColor;
          this.Theme = odataObject.Theme;
          this.FontSchemeTypeValue = odataObject.FontSchemeTypeValue;
          this.IsAppBarLabelVisible = odataObject.IsAppBarLabelVisible;
          this.IsDateTimeVisible = odataObject.IsDateTimeVisible;
          this.LogOnLayoutTypeValue = odataObject.LogOnLayoutTypeValue;
          this.LogOnKeyboardTypeValue = odataObject.LogOnKeyboardTypeValue;
          this.LogonBackgroundPictureId = (odataObject.LogonBackgroundPictureId != null) ? parseInt(odataObject.LogonBackgroundPictureId, 10) : undefined;
          this.CompactLogonBackgroundPictureId = (odataObject.CompactLogonBackgroundPictureId != null) ? parseInt(odataObject.CompactLogonBackgroundPictureId, 10) : undefined;
          this.PortraitLogonBackgroundPictureId = (odataObject.PortraitLogonBackgroundPictureId != null) ? parseInt(odataObject.PortraitLogonBackgroundPictureId, 10) : undefined;
          this.CompactPortraitLogonBackgroundPictureId = (odataObject.CompactPortraitLogonBackgroundPictureId != null) ? parseInt(odataObject.CompactPortraitLogonBackgroundPictureId, 10) : undefined;
          this.BackgroundPictureId = (odataObject.BackgroundPictureId != null) ? parseInt(odataObject.BackgroundPictureId, 10) : undefined;
          this.LogOnLogoPictureId = (odataObject.LogOnLogoPictureId != null) ? parseInt(odataObject.LogOnLogoPictureId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Device entity class.
     */
    export class DeviceClass implements Device {
        public ChannelId: number;
        public RecordId: number;
        public DeviceNumber: string;
        public DeviceId: string;
        public Description: string;
        public DeviceType: number;
        public TerminalRecordId: number;
        public TerminalId: string;
        public ChannelName: string;
        public UseInMemoryDeviceDataStorage: boolean;
        public AllowMassActivation: boolean;
        public TokenIssueTime: Date;
        public ActivationStatusValue: number;
        public Token: string;
        public CountryRegionIsoCode: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.DeviceNumber = odataObject.DeviceNumber;
          this.DeviceId = odataObject.DeviceId;
          this.Description = odataObject.Description;
          this.DeviceType = odataObject.DeviceType;
          this.TerminalRecordId = (odataObject.TerminalRecordId != null) ? parseInt(odataObject.TerminalRecordId, 10) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.ChannelName = odataObject.ChannelName;
          this.UseInMemoryDeviceDataStorage = odataObject.UseInMemoryDeviceDataStorage;
          this.AllowMassActivation = odataObject.AllowMassActivation;
          this.TokenIssueTime = (odataObject.TokenIssueTime instanceof Date) ? odataObject.TokenIssueTime
            : (odataObject.TokenIssueTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TokenIssueTime, "Edm.DateTimeOffset", false) : undefined;
          this.ActivationStatusValue = odataObject.ActivationStatusValue;
          this.Token = odataObject.Token;
          this.CountryRegionIsoCode = odataObject.CountryRegionIsoCode;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DiscountCode entity class.
     */
    export class DiscountCodeClass implements DiscountCode {
        public RecordId: number;
        public Barcode: string;
        public Code: string;
        public ConcurrencyMode: number;
        public Description: string;
        public Disclaimer: string;
        public IsDiscountCodeRequired: boolean;
        public Name: string;
        public OfferId: string;
        public IsEnabled: boolean;
        public ValidFrom: Date;
        public ValidTo: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Barcode = odataObject.Barcode;
          this.Code = odataObject.Code;
          this.ConcurrencyMode = odataObject.ConcurrencyMode;
          this.Description = odataObject.Description;
          this.Disclaimer = odataObject.Disclaimer;
          this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
          this.Name = odataObject.Name;
          this.OfferId = odataObject.OfferId;
          this.IsEnabled = odataObject.IsEnabled;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DistrictInfo entity class.
     */
    export class DistrictInfoClass implements DistrictInfo {
        public Name: string;
        public Description: string;
        public CountryRegionId: string;
        public StateId: string;
        public CountyId: string;
        public CityName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.StateId = odataObject.StateId;
          this.CountyId = odataObject.CountyId;
          this.CityName = odataObject.CityName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareProfile entity class.
     */
    export class HardwareProfileClass implements HardwareProfile {
        public RecordId: number;
        public LineDisplayDelayForLinkedItems: number;
        public LineDisplayBalanceText: string;
        public LineDisplayBinaryConversion: boolean;
        public LineDisplayCharacterSet: number;
        public LineDisplayClosedLine1: string;
        public LineDisplayClosedLine2: string;
        public LineDisplayDeviceDescription: string;
        public LineDisplayDeviceTypeValue: number;
        public LineDisplayDeviceName: string;
        public LineDisplayDisplayLinkedItem: boolean;
        public LineDisplayDisplayTerminalClosed: boolean;
        public LineDisplayTotalText: string;
        public DualDisplayActive: boolean;
        public DualDisplayWebBrowserUrl: string;
        public DualDisplayImageRotatorInterval: number;
        public DualDisplayImageRotatorPath: string;
        public DualDisplayReceiptWidthPercentage: number;
        public DualDisplayDisplayType: string;
        public EftTypeId: number;
        public EftCompanyId: string;
        public EftConfiguration: number;
        public EftPaymentConnectorName: string;
        public EftData: string;
        public EftDescription: string;
        public EftMerchantId: string;
        public EftPassword: string;
        public EftServerName: string;
        public EftServerPort: string;
        public EftUserId: string;
        public EftTestMode: boolean;
        public MsrEndTrack1: string;
        public MsrEndTrack2: string;
        public FiscalPrinterManagementReportPAFIdentification: string;
        public FiscalPrinterManagementReportConfigParameter: string;
        public FiscalPrinterManagementReportTenderType: string;
        public FiscalPrinterManagementReportGiftCard: string;
        public FiscalRegisterDeviceTypeValue: number;
        public FiscalRegisterConfiguration: string;
        public FiscalRegisterDeviceDescription: string;
        public FiscalRegisterDeviceName: string;
        public KeyboardMappingId: string;
        public KeyLockDeviceTypeValue: number;
        public KeyLockDeviceDescription: string;
        public KeyLockDeviceName: string;
        public MsrDeviceTypeValue: number;
        public MsrDeviceDescription: string;
        public MsrDeviceName: string;
        public MsrMake: string;
        public MsrModel: string;
        public MsrSeparator: string;
        public MsrStartTrack: string;
        public PinPadDeviceTypeValue: number;
        public PinPadDeviceName: string;
        public PinPadMake: string;
        public PinPadModel: string;
        public PinPadDeviceDescription: string;
        public ProfileDescription: string;
        public ProfileId: string;
        public RFIDDeviceTypeValue: number;
        public RFIDDeviceName: string;
        public RFIDDeviceDescription: string;
        public ScaleDeviceTypeValue: number;
        public ScaleDeviceName: string;
        public ScaleDeviceDescription: string;
        public ScaleManualInputAllowed: boolean;
        public ScaleTimeoutInSeconds: number;
        public SignatureCaptureDeviceTypeValue: number;
        public SignatureCaptureDeviceName: string;
        public SignatureCaptureMake: string;
        public SignatureCaptureModel: string;
        public SignatureCaptureDeviceDescription: string;
        public SignatureCaptureFormName: string;
        public Printers: Entities.HardwareProfilePrinter[];
        public Scanners: Entities.HardwareProfileScanner[];
        public FiscalIntegrationTechnicalProfiles: Entities.FiscalIntegrationTechnicalProfile[];
        public CashDrawers: Entities.HardwareProfileCashDrawer[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.LineDisplayDelayForLinkedItems = odataObject.LineDisplayDelayForLinkedItems;
          this.LineDisplayBalanceText = odataObject.LineDisplayBalanceText;
          this.LineDisplayBinaryConversion = odataObject.LineDisplayBinaryConversion;
          this.LineDisplayCharacterSet = odataObject.LineDisplayCharacterSet;
          this.LineDisplayClosedLine1 = odataObject.LineDisplayClosedLine1;
          this.LineDisplayClosedLine2 = odataObject.LineDisplayClosedLine2;
          this.LineDisplayDeviceDescription = odataObject.LineDisplayDeviceDescription;
          this.LineDisplayDeviceTypeValue = odataObject.LineDisplayDeviceTypeValue;
          this.LineDisplayDeviceName = odataObject.LineDisplayDeviceName;
          this.LineDisplayDisplayLinkedItem = odataObject.LineDisplayDisplayLinkedItem;
          this.LineDisplayDisplayTerminalClosed = odataObject.LineDisplayDisplayTerminalClosed;
          this.LineDisplayTotalText = odataObject.LineDisplayTotalText;
          this.DualDisplayActive = odataObject.DualDisplayActive;
          this.DualDisplayWebBrowserUrl = odataObject.DualDisplayWebBrowserUrl;
          this.DualDisplayImageRotatorInterval = odataObject.DualDisplayImageRotatorInterval;
          this.DualDisplayImageRotatorPath = odataObject.DualDisplayImageRotatorPath;
          this.DualDisplayReceiptWidthPercentage = (odataObject.DualDisplayReceiptWidthPercentage != null) ? parseFloat(odataObject.DualDisplayReceiptWidthPercentage) : undefined;
          this.DualDisplayDisplayType = odataObject.DualDisplayDisplayType;
          this.EftTypeId = odataObject.EftTypeId;
          this.EftCompanyId = odataObject.EftCompanyId;
          this.EftConfiguration = odataObject.EftConfiguration;
          this.EftPaymentConnectorName = odataObject.EftPaymentConnectorName;
          this.EftData = odataObject.EftData;
          this.EftDescription = odataObject.EftDescription;
          this.EftMerchantId = odataObject.EftMerchantId;
          this.EftPassword = odataObject.EftPassword;
          this.EftServerName = odataObject.EftServerName;
          this.EftServerPort = odataObject.EftServerPort;
          this.EftUserId = odataObject.EftUserId;
          this.EftTestMode = odataObject.EftTestMode;
          this.MsrEndTrack1 = odataObject.MsrEndTrack1;
          this.MsrEndTrack2 = odataObject.MsrEndTrack2;
          this.FiscalPrinterManagementReportPAFIdentification = odataObject.FiscalPrinterManagementReportPAFIdentification;
          this.FiscalPrinterManagementReportConfigParameter = odataObject.FiscalPrinterManagementReportConfigParameter;
          this.FiscalPrinterManagementReportTenderType = odataObject.FiscalPrinterManagementReportTenderType;
          this.FiscalPrinterManagementReportGiftCard = odataObject.FiscalPrinterManagementReportGiftCard;
          this.FiscalRegisterDeviceTypeValue = odataObject.FiscalRegisterDeviceTypeValue;
          this.FiscalRegisterConfiguration = odataObject.FiscalRegisterConfiguration;
          this.FiscalRegisterDeviceDescription = odataObject.FiscalRegisterDeviceDescription;
          this.FiscalRegisterDeviceName = odataObject.FiscalRegisterDeviceName;
          this.KeyboardMappingId = odataObject.KeyboardMappingId;
          this.KeyLockDeviceTypeValue = odataObject.KeyLockDeviceTypeValue;
          this.KeyLockDeviceDescription = odataObject.KeyLockDeviceDescription;
          this.KeyLockDeviceName = odataObject.KeyLockDeviceName;
          this.MsrDeviceTypeValue = odataObject.MsrDeviceTypeValue;
          this.MsrDeviceDescription = odataObject.MsrDeviceDescription;
          this.MsrDeviceName = odataObject.MsrDeviceName;
          this.MsrMake = odataObject.MsrMake;
          this.MsrModel = odataObject.MsrModel;
          this.MsrSeparator = odataObject.MsrSeparator;
          this.MsrStartTrack = odataObject.MsrStartTrack;
          this.PinPadDeviceTypeValue = odataObject.PinPadDeviceTypeValue;
          this.PinPadDeviceName = odataObject.PinPadDeviceName;
          this.PinPadMake = odataObject.PinPadMake;
          this.PinPadModel = odataObject.PinPadModel;
          this.PinPadDeviceDescription = odataObject.PinPadDeviceDescription;
          this.ProfileDescription = odataObject.ProfileDescription;
          this.ProfileId = odataObject.ProfileId;
          this.RFIDDeviceTypeValue = odataObject.RFIDDeviceTypeValue;
          this.RFIDDeviceName = odataObject.RFIDDeviceName;
          this.RFIDDeviceDescription = odataObject.RFIDDeviceDescription;
          this.ScaleDeviceTypeValue = odataObject.ScaleDeviceTypeValue;
          this.ScaleDeviceName = odataObject.ScaleDeviceName;
          this.ScaleDeviceDescription = odataObject.ScaleDeviceDescription;
          this.ScaleManualInputAllowed = odataObject.ScaleManualInputAllowed;
          this.ScaleTimeoutInSeconds = odataObject.ScaleTimeoutInSeconds;
          this.SignatureCaptureDeviceTypeValue = odataObject.SignatureCaptureDeviceTypeValue;
          this.SignatureCaptureDeviceName = odataObject.SignatureCaptureDeviceName;
          this.SignatureCaptureMake = odataObject.SignatureCaptureMake;
          this.SignatureCaptureModel = odataObject.SignatureCaptureModel;
          this.SignatureCaptureDeviceDescription = odataObject.SignatureCaptureDeviceDescription;
          this.SignatureCaptureFormName = odataObject.SignatureCaptureFormName;
          this.Printers = undefined;
          if (odataObject.Printers) {
              this.Printers = [];
              for (var i = 0; i < odataObject.Printers.length; i++) {
                  if (odataObject.Printers[i] != null) {
                      if (odataObject.Printers[i]['@odata.type'] != null) {
                          var className: string = odataObject.Printers[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Printers[i] = new Commerce.Proxy.Entities[className](odataObject.Printers[i])
                          }
                      } else {
                          this.Printers[i] = new HardwareProfilePrinterClass(odataObject.Printers[i]);
                      }
                  } else {
                      this.Printers[i] = undefined;
                  }
              }
          }
          this.Scanners = undefined;
          if (odataObject.Scanners) {
              this.Scanners = [];
              for (var i = 0; i < odataObject.Scanners.length; i++) {
                  if (odataObject.Scanners[i] != null) {
                      if (odataObject.Scanners[i]['@odata.type'] != null) {
                          var className: string = odataObject.Scanners[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Scanners[i] = new Commerce.Proxy.Entities[className](odataObject.Scanners[i])
                          }
                      } else {
                          this.Scanners[i] = new HardwareProfileScannerClass(odataObject.Scanners[i]);
                      }
                  } else {
                      this.Scanners[i] = undefined;
                  }
              }
          }
          this.FiscalIntegrationTechnicalProfiles = undefined;
          if (odataObject.FiscalIntegrationTechnicalProfiles) {
              this.FiscalIntegrationTechnicalProfiles = [];
              for (var i = 0; i < odataObject.FiscalIntegrationTechnicalProfiles.length; i++) {
                  if (odataObject.FiscalIntegrationTechnicalProfiles[i] != null) {
                      if (odataObject.FiscalIntegrationTechnicalProfiles[i]['@odata.type'] != null) {
                          var className: string = odataObject.FiscalIntegrationTechnicalProfiles[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FiscalIntegrationTechnicalProfiles[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalIntegrationTechnicalProfiles[i])
                          }
                      } else {
                          this.FiscalIntegrationTechnicalProfiles[i] = new FiscalIntegrationTechnicalProfileClass(odataObject.FiscalIntegrationTechnicalProfiles[i]);
                      }
                  } else {
                      this.FiscalIntegrationTechnicalProfiles[i] = undefined;
                  }
              }
          }
          this.CashDrawers = undefined;
          if (odataObject.CashDrawers) {
              this.CashDrawers = [];
              for (var i = 0; i < odataObject.CashDrawers.length; i++) {
                  if (odataObject.CashDrawers[i] != null) {
                      if (odataObject.CashDrawers[i]['@odata.type'] != null) {
                          var className: string = odataObject.CashDrawers[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CashDrawers[i] = new Commerce.Proxy.Entities[className](odataObject.CashDrawers[i])
                          }
                      } else {
                          this.CashDrawers[i] = new HardwareProfileCashDrawerClass(odataObject.CashDrawers[i]);
                      }
                  } else {
                      this.CashDrawers[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SupportedLanguage entity class.
     */
    export class SupportedLanguageClass implements SupportedLanguage {
        public LanguageId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LanguageId = odataObject.LanguageId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PaymentCard entity class.
     */
    export class PaymentCardClass implements PaymentCard {
        public UseShippingAddress: boolean;
        public CardNumber: string;
        public CCID: string;
        public Track1: string;
        public Track2: string;
        public Track3: string;
        public VoiceAuthorizationCode: string;
        public EncryptedPin: string;
        public AdditionalSecurityData: string;
        public IsSwipe: boolean;
        public Phone: string;
        public Country: string;
        public House: string;
        public Address1: string;
        public Address2: string;
        public City: string;
        public State: string;
        public Zip: string;
        public NameOnCard: string;
        public CardTypeId: string;
        public ExpirationMonth: number;
        public ExpirationYear: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.UseShippingAddress = odataObject.UseShippingAddress;
          this.CardNumber = odataObject.CardNumber;
          this.CCID = odataObject.CCID;
          this.Track1 = odataObject.Track1;
          this.Track2 = odataObject.Track2;
          this.Track3 = odataObject.Track3;
          this.VoiceAuthorizationCode = odataObject.VoiceAuthorizationCode;
          this.EncryptedPin = odataObject.EncryptedPin;
          this.AdditionalSecurityData = odataObject.AdditionalSecurityData;
          this.IsSwipe = odataObject.IsSwipe;
          this.Phone = odataObject.Phone;
          this.Country = odataObject.Country;
          this.House = odataObject.House;
          this.Address1 = odataObject.Address1;
          this.Address2 = odataObject.Address2;
          this.City = odataObject.City;
          this.State = odataObject.State;
          this.Zip = odataObject.Zip;
          this.NameOnCard = odataObject.NameOnCard;
          this.CardTypeId = odataObject.CardTypeId;
          this.ExpirationMonth = odataObject.ExpirationMonth;
          this.ExpirationYear = odataObject.ExpirationYear;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CardPaymentAcceptSettings entity class.
     */
    export class CardPaymentAcceptSettingsClass implements CardPaymentAcceptSettings {
        public HostPageOrigin: string;
        public AdaptorPath: string;
        public CardTokenizationEnabled: boolean;
        public CardPaymentEnabled: boolean;
        public PaymentAmount: number;
        public HideBillingAddress: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HostPageOrigin = odataObject.HostPageOrigin;
          this.AdaptorPath = odataObject.AdaptorPath;
          this.CardTokenizationEnabled = odataObject.CardTokenizationEnabled;
          this.CardPaymentEnabled = odataObject.CardPaymentEnabled;
          this.PaymentAmount = (odataObject.PaymentAmount != null) ? parseFloat(odataObject.PaymentAmount) : undefined;
          this.HideBillingAddress = odataObject.HideBillingAddress;
        }
    }
    
    /**
     * CardPaymentAcceptPoint entity class.
     */
    export class CardPaymentAcceptPointClass implements CardPaymentAcceptPoint {
        public AcceptPageUrl: string;
        public AcceptPageSubmitUrl: string;
        public MessageOrigin: string;
        public AcceptPageContent: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AcceptPageUrl = odataObject.AcceptPageUrl;
          this.AcceptPageSubmitUrl = odataObject.AcceptPageSubmitUrl;
          this.MessageOrigin = odataObject.MessageOrigin;
          this.AcceptPageContent = odataObject.AcceptPageContent;
        }
    }
    
    /**
     * CardPaymentAcceptResult entity class.
     */
    export class CardPaymentAcceptResultClass implements CardPaymentAcceptResult {
        public TenderLine: Entities.TenderLine;
        public TokenizedPaymentCard: Entities.TokenizedPaymentCard;
        public PaymentSdkErrors: Entities.PaymentError[];
        public AdditionalContext: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.TenderLine == null) {
              this.TenderLine = undefined;
          } else if (odataObject.TenderLine['@odata.type'] == null) {
              this.TenderLine = new TenderLineClass(odataObject.TenderLine);
          } else {
              var className: string = odataObject.TenderLine['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.TenderLine = new Commerce.Proxy.Entities[className](odataObject.TenderLine)
              }
          }

    
          if (odataObject.TokenizedPaymentCard == null) {
              this.TokenizedPaymentCard = undefined;
          } else if (odataObject.TokenizedPaymentCard['@odata.type'] == null) {
              this.TokenizedPaymentCard = new TokenizedPaymentCardClass(odataObject.TokenizedPaymentCard);
          } else {
              var className: string = odataObject.TokenizedPaymentCard['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.TokenizedPaymentCard = new Commerce.Proxy.Entities[className](odataObject.TokenizedPaymentCard)
              }
          }

    
          this.PaymentSdkErrors = undefined;
          if (odataObject.PaymentSdkErrors) {
              this.PaymentSdkErrors = [];
              for (var i = 0; i < odataObject.PaymentSdkErrors.length; i++) {
                  if (odataObject.PaymentSdkErrors[i] != null) {
                      if (odataObject.PaymentSdkErrors[i]['@odata.type'] != null) {
                          var className: string = odataObject.PaymentSdkErrors[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PaymentSdkErrors[i] = new Commerce.Proxy.Entities[className](odataObject.PaymentSdkErrors[i])
                          }
                      } else {
                          this.PaymentSdkErrors[i] = new PaymentErrorClass(odataObject.PaymentSdkErrors[i]);
                      }
                  } else {
                      this.PaymentSdkErrors[i] = undefined;
                  }
              }
          }
          this.AdditionalContext = odataObject.AdditionalContext;
        }
    }
    
    /**
     * ReasonCodeLine entity class.
     */
    export class ReasonCodeLineClass implements ReasonCodeLine {
        public LineId: string;
        public Amount: number;
        public Information: string;
        public InformationAmount: number;
        public InputTypeValue: number;
        public ItemTender: string;
        public LineNumber: number;
        public LineTypeValue: number;
        public ParentLineId: string;
        public ReasonCodeId: string;
        public StatementCode: string;
        public SubReasonCodeId: string;
        public SourceCode: string;
        public SourceCode2: string;
        public SourceCode3: string;
        public TransactionId: string;
        public CreatedDateTime: Date;
        public FiscalTransactionParentGuid: string;
        public IsChanged: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.Information = odataObject.Information;
          this.InformationAmount = (odataObject.InformationAmount != null) ? parseFloat(odataObject.InformationAmount) : undefined;
          this.InputTypeValue = odataObject.InputTypeValue;
          this.ItemTender = odataObject.ItemTender;
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.LineTypeValue = odataObject.LineTypeValue;
          this.ParentLineId = odataObject.ParentLineId;
          this.ReasonCodeId = odataObject.ReasonCodeId;
          this.StatementCode = odataObject.StatementCode;
          this.SubReasonCodeId = odataObject.SubReasonCodeId;
          this.SourceCode = odataObject.SourceCode;
          this.SourceCode2 = odataObject.SourceCode2;
          this.SourceCode3 = odataObject.SourceCode3;
          this.TransactionId = odataObject.TransactionId;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.FiscalTransactionParentGuid = odataObject.FiscalTransactionParentGuid;
          this.IsChanged = odataObject.IsChanged;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReasonSubCode entity class.
     */
    export class ReasonSubCodeClass implements ReasonSubCode {
        public TriggerCode: string;
        public AmountPercent: number;
        public ReasonCodeId: string;
        public SubCodeId: string;
        public Description: string;
        public TriggerFunctionTypeValue: number;
        public ProductId: number;
        public PriceTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TriggerCode = odataObject.TriggerCode;
          this.AmountPercent = (odataObject.AmountPercent != null) ? parseFloat(odataObject.AmountPercent) : undefined;
          this.ReasonCodeId = odataObject.ReasonCodeId;
          this.SubCodeId = odataObject.SubCodeId;
          this.Description = odataObject.Description;
          this.TriggerFunctionTypeValue = odataObject.TriggerFunctionTypeValue;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.PriceTypeValue = odataObject.PriceTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Receipt entity class.
     */
    export class ReceiptClass implements Receipt {
        public TransactionId: string;
        public Header: string;
        public Body: string;
        public Footer: string;
        public Width: number;
        public ReceiptId: string;
        public LayoutId: string;
        public ReceiptTitle: string;
        public ReceiptTypeValue: number;
        public ReceiptTypeStrValue: string;
        public Printers: Entities.Printer[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionId = odataObject.TransactionId;
          this.Header = odataObject.Header;
          this.Body = odataObject.Body;
          this.Footer = odataObject.Footer;
          this.Width = odataObject.Width;
          this.ReceiptId = odataObject.ReceiptId;
          this.LayoutId = odataObject.LayoutId;
          this.ReceiptTitle = odataObject.ReceiptTitle;
          this.ReceiptTypeValue = odataObject.ReceiptTypeValue;
          this.ReceiptTypeStrValue = odataObject.ReceiptTypeStrValue;
          this.Printers = undefined;
          if (odataObject.Printers) {
              this.Printers = [];
              for (var i = 0; i < odataObject.Printers.length; i++) {
                  if (odataObject.Printers[i] != null) {
                      if (odataObject.Printers[i]['@odata.type'] != null) {
                          var className: string = odataObject.Printers[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Printers[i] = new Commerce.Proxy.Entities[className](odataObject.Printers[i])
                          }
                      } else {
                          this.Printers[i] = new PrinterClass(odataObject.Printers[i]);
                      }
                  } else {
                      this.Printers[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReceiptMask entity class.
     */
    export class ReceiptMaskClass implements ReceiptMask {
        public FunctionalityProfileId: string;
        public IsIndependent: boolean;
        public ReceiptTransactionTypeValue: number;
        public RecordId: number;
        public Mask: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FunctionalityProfileId = odataObject.FunctionalityProfileId;
          this.IsIndependent = odataObject.IsIndependent;
          this.ReceiptTransactionTypeValue = odataObject.ReceiptTransactionTypeValue;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Mask = odataObject.Mask;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesLine entity class.
     */
    export class SalesLineClass implements SalesLine {
        public StaffId: string;
        public LineId: string;
        public Description: string;
        public OriginLineId: string;
        public TaxOverrideCode: string;
        public IsPriceKeyedIn: boolean;
        public IsTaxOverideCodeTaxExempt: boolean;
        public ProductId: number;
        public Barcode: string;
        public BarcodeEmbeddedPrice: number;
        public PriceInBarcode: boolean;
        public EntryMethodTypeValue: number;
        public MasterProductId: number;
        public ListingId: number;
        public IsPriceOverridden: boolean;
        public OriginalPrice: number;
        public TotalAmount: number;
        public NetAmountWithoutTax: number;
        public DiscountAmount: number;
        public DiscountAmountWithoutTax: number;
        public NetPrice: number;
        public TotalDiscount: number;
        public TotalPercentageDiscount: number;
        public LineDiscount: number;
        public PeriodicDiscount: number;
        public LineManualDiscountPercentage: number;
        public LineManualDiscountAmount: number;
        public ShippingAddress: Entities.Address;
        public DeliveryMode: string;
        public Comment: string;
        public RequestedDeliveryDate: Date;
        public InventoryLocationId: string;
        public WarehouseLocation: string;
        public InventoryStatusId: string;
        public LicensePlate: string;
        public InventoryDimensionId: string;
        public ItemType: number;
        public ReservationId: string;
        public LineNumber: number;
        public ReturnQuantity: number;
        public QuantityRemained: number;
        public QuantityShipped: number;
        public LineVersion: number;
        public StatusValue: number;
        public SalesStatusValue: number;
        public ProductSourceValue: number;
        public IsGiftCardLine: boolean;
        public GiftCardId: string;
        public GiftCardCurrencyCode: string;
        public GiftCardOperationValue: number;
        public GiftCardTypeValue: number;
        public IsInvoiceLine: boolean;
        public InvoiceId: string;
        public InvoiceAmount: number;
        public IsInvoiceSettled: boolean;
        public InvoiceTypeValue: number;
        public InvoicedSalesId: string;
        public IsVoided: boolean;
        public IsPriceLocked: boolean;
        public ChargeLines: Entities.ChargeLine[];
        public BasePrice: number;
        public AgreementPrice: number;
        public AdjustedPrice: number;
        public IsWarrantyLine: boolean;
        public WarrantableTransactionId: string;
        public WarrantableSalesId: string;
        public WarrantableLineNumber: number;
        public WarrantableSerialNumber: string;
        public ReturnTransactionId: string;
        public ReturnLineNumber: number;
        public ReturnInventTransId: string;
        public ReturnStore: string;
        public ReturnTerminalId: string;
        public ReturnChannelId: number;
        public FulfillmentStoreId: string;
        public SalesDate: Date;
        public QuantityInvoiced: number;
        public QuantityOrdered: number;
        public QuantityCanceled: number;
        public SavedQuantity: number;
        public IsSavedDiscount: boolean;
        public RecordId: number;
        public SerialNumber: string;
        public BatchId: string;
        public DeliveryModeChargeAmount: number;
        public UnitOfMeasureSymbol: string;
        public CatalogId: number;
        public ElectronicDeliveryEmailAddress: string;
        public ElectronicDeliveryEmailContent: string;
        public LoyaltyDiscountAmount: number;
        public LoyaltyPercentageDiscount: number;
        public TenderDiscountAmount: number;
        public TenderDiscountPercentage: number;
        public GiftCardBalance: number;
        public IsCustomerAccountDeposit: boolean;
        public Blocked: boolean;
        public Found: boolean;
        public DateToActivateItem: Date;
        public LinePercentageDiscount: number;
        public PeriodicPercentageDiscount: number;
        public QuantityDiscounted: number;
        public UnitQuantity: number;
        public UnitOfMeasureConversion: Entities.UnitOfMeasureConversion;
        public DiscountLines: Entities.DiscountLine[];
        public PriceLines: Entities.PriceLine[];
        public PeriodicDiscountPossibilities: Entities.DiscountLine[];
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public ReturnLabelProperties: Entities.ReturnLabelContent;
        public LineMultilineDiscOnItem: string;
        public RelatedDiscountedLineIds: string[];
        public LinkedParentLineId: string;
        public LineMultilineDiscOnItemValue: number;
        public WasChanged: boolean;
        public OriginalSalesOrderUnitOfMeasure: string;
        public InventOrderUnitOfMeasure: string;
        public TrackingId: string;
        public IsLoyaltyDiscountApplied: boolean;
        public CommissionSalesGroup: string;
        public IsCommissionSalesGroupOverriddenByCustomer: boolean;
        public CommissionSalesGroupSetByCashier: string;
        public AttributeValues: Entities.AttributeValueBase[];
        public ThirdPartyGiftCardInfo: Entities.ThirdPartyGiftCardInfo;
        public QuantityReturnable: number;
        public LoyaltyRewardPointLines: Entities.LoyaltyRewardPointLine[];
        public ReturnLoyaltyRewardPointLines: Entities.LoyaltyRewardPointLine[];
        public ItemId: string;
        public Quantity: number;
        public Price: number;
        public ItemTaxGroupId: string;
        public SalesTaxGroupId: string;
        public OriginalSalesTaxGroupId: string;
        public OriginalItemTaxGroupId: string;
        public TaxAmount: number;
        public SalesOrderUnitOfMeasure: string;
        public NetAmount: number;
        public NetAmountPerUnit: number;
        public GrossAmount: number;
        public TaxLines: Entities.TaxLine[];
        public TaxMeasures: Entities.TaxMeasure[];
        public TaxAmountExemptInclusive: number;
        public TaxAmountInclusive: number;
        public TaxAmountExclusive: number;
        public NetAmountWithAllInclusiveTax: number;
        public BeginDateTime: Date;
        public EndDateTime: Date;
        public TaxRatePercent: number;
        public IsReturnByReceipt: boolean;
        public ReturnLineTaxAmount: number;
        public ReturnTaxLines: Entities.TaxLine[];
        public TaxExemptPriceInclusiveReductionAmount: number;
        public TaxExemptPriceInclusiveOriginalPrice: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.StaffId = odataObject.StaffId;
          this.LineId = odataObject.LineId;
          this.Description = odataObject.Description;
          this.OriginLineId = odataObject.OriginLineId;
          this.TaxOverrideCode = odataObject.TaxOverrideCode;
          this.IsPriceKeyedIn = odataObject.IsPriceKeyedIn;
          this.IsTaxOverideCodeTaxExempt = odataObject.IsTaxOverideCodeTaxExempt;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.Barcode = odataObject.Barcode;
          this.BarcodeEmbeddedPrice = (odataObject.BarcodeEmbeddedPrice != null) ? parseFloat(odataObject.BarcodeEmbeddedPrice) : undefined;
          this.PriceInBarcode = odataObject.PriceInBarcode;
          this.EntryMethodTypeValue = odataObject.EntryMethodTypeValue;
          this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
          this.ListingId = (odataObject.ListingId != null) ? parseInt(odataObject.ListingId, 10) : undefined;
          this.IsPriceOverridden = odataObject.IsPriceOverridden;
          this.OriginalPrice = (odataObject.OriginalPrice != null) ? parseFloat(odataObject.OriginalPrice) : undefined;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.NetAmountWithoutTax = (odataObject.NetAmountWithoutTax != null) ? parseFloat(odataObject.NetAmountWithoutTax) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.DiscountAmountWithoutTax = (odataObject.DiscountAmountWithoutTax != null) ? parseFloat(odataObject.DiscountAmountWithoutTax) : undefined;
          this.NetPrice = (odataObject.NetPrice != null) ? parseFloat(odataObject.NetPrice) : undefined;
          this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
          this.TotalPercentageDiscount = (odataObject.TotalPercentageDiscount != null) ? parseFloat(odataObject.TotalPercentageDiscount) : undefined;
          this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
          this.PeriodicDiscount = (odataObject.PeriodicDiscount != null) ? parseFloat(odataObject.PeriodicDiscount) : undefined;
          this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
          this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
          this.DeliveryMode = odataObject.DeliveryMode;
          this.Comment = odataObject.Comment;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.WarehouseLocation = odataObject.WarehouseLocation;
          this.InventoryStatusId = odataObject.InventoryStatusId;
          this.LicensePlate = odataObject.LicensePlate;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.ItemType = odataObject.ItemType;
          this.ReservationId = odataObject.ReservationId;
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.ReturnQuantity = (odataObject.ReturnQuantity != null) ? parseFloat(odataObject.ReturnQuantity) : undefined;
          this.QuantityRemained = (odataObject.QuantityRemained != null) ? parseFloat(odataObject.QuantityRemained) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.LineVersion = odataObject.LineVersion;
          this.StatusValue = odataObject.StatusValue;
          this.SalesStatusValue = odataObject.SalesStatusValue;
          this.ProductSourceValue = odataObject.ProductSourceValue;
          this.IsGiftCardLine = odataObject.IsGiftCardLine;
          this.GiftCardId = odataObject.GiftCardId;
          this.GiftCardCurrencyCode = odataObject.GiftCardCurrencyCode;
          this.GiftCardOperationValue = odataObject.GiftCardOperationValue;
          this.GiftCardTypeValue = odataObject.GiftCardTypeValue;
          this.IsInvoiceLine = odataObject.IsInvoiceLine;
          this.InvoiceId = odataObject.InvoiceId;
          this.InvoiceAmount = (odataObject.InvoiceAmount != null) ? parseFloat(odataObject.InvoiceAmount) : undefined;
          this.IsInvoiceSettled = odataObject.IsInvoiceSettled;
          this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
          this.InvoicedSalesId = odataObject.InvoicedSalesId;
          this.IsVoided = odataObject.IsVoided;
          this.IsPriceLocked = odataObject.IsPriceLocked;
          this.ChargeLines = undefined;
          if (odataObject.ChargeLines) {
              this.ChargeLines = [];
              for (var i = 0; i < odataObject.ChargeLines.length; i++) {
                  if (odataObject.ChargeLines[i] != null) {
                      if (odataObject.ChargeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ChargeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ChargeLines[i])
                          }
                      } else {
                          this.ChargeLines[i] = new ChargeLineClass(odataObject.ChargeLines[i]);
                      }
                  } else {
                      this.ChargeLines[i] = undefined;
                  }
              }
          }
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.AgreementPrice = (odataObject.AgreementPrice != null) ? parseFloat(odataObject.AgreementPrice) : undefined;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          this.IsWarrantyLine = odataObject.IsWarrantyLine;
          this.WarrantableTransactionId = odataObject.WarrantableTransactionId;
          this.WarrantableSalesId = odataObject.WarrantableSalesId;
          this.WarrantableLineNumber = (odataObject.WarrantableLineNumber != null) ? parseFloat(odataObject.WarrantableLineNumber) : undefined;
          this.WarrantableSerialNumber = odataObject.WarrantableSerialNumber;
          this.ReturnTransactionId = odataObject.ReturnTransactionId;
          this.ReturnLineNumber = (odataObject.ReturnLineNumber != null) ? parseFloat(odataObject.ReturnLineNumber) : undefined;
          this.ReturnInventTransId = odataObject.ReturnInventTransId;
          this.ReturnStore = odataObject.ReturnStore;
          this.ReturnTerminalId = odataObject.ReturnTerminalId;
          this.ReturnChannelId = (odataObject.ReturnChannelId != null) ? parseInt(odataObject.ReturnChannelId, 10) : undefined;
          this.FulfillmentStoreId = odataObject.FulfillmentStoreId;
          this.SalesDate = (odataObject.SalesDate instanceof Date) ? odataObject.SalesDate
            : (odataObject.SalesDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.SalesDate, "Edm.DateTimeOffset", false) : undefined;
          this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.QuantityCanceled = (odataObject.QuantityCanceled != null) ? parseFloat(odataObject.QuantityCanceled) : undefined;
          this.SavedQuantity = (odataObject.SavedQuantity != null) ? parseFloat(odataObject.SavedQuantity) : undefined;
          this.IsSavedDiscount = odataObject.IsSavedDiscount;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.SerialNumber = odataObject.SerialNumber;
          this.BatchId = odataObject.BatchId;
          this.DeliveryModeChargeAmount = (odataObject.DeliveryModeChargeAmount != null) ? parseFloat(odataObject.DeliveryModeChargeAmount) : undefined;
          this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.ElectronicDeliveryEmailAddress = odataObject.ElectronicDeliveryEmailAddress;
          this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
          this.LoyaltyDiscountAmount = (odataObject.LoyaltyDiscountAmount != null) ? parseFloat(odataObject.LoyaltyDiscountAmount) : undefined;
          this.LoyaltyPercentageDiscount = (odataObject.LoyaltyPercentageDiscount != null) ? parseFloat(odataObject.LoyaltyPercentageDiscount) : undefined;
          this.TenderDiscountAmount = (odataObject.TenderDiscountAmount != null) ? parseFloat(odataObject.TenderDiscountAmount) : undefined;
          this.TenderDiscountPercentage = (odataObject.TenderDiscountPercentage != null) ? parseFloat(odataObject.TenderDiscountPercentage) : undefined;
          this.GiftCardBalance = (odataObject.GiftCardBalance != null) ? parseFloat(odataObject.GiftCardBalance) : undefined;
          this.IsCustomerAccountDeposit = odataObject.IsCustomerAccountDeposit;
          this.Blocked = odataObject.Blocked;
          this.Found = odataObject.Found;
          this.DateToActivateItem = (odataObject.DateToActivateItem instanceof Date) ? odataObject.DateToActivateItem
            : (odataObject.DateToActivateItem != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToActivateItem, "Edm.DateTimeOffset", false) : undefined;
          this.LinePercentageDiscount = (odataObject.LinePercentageDiscount != null) ? parseFloat(odataObject.LinePercentageDiscount) : undefined;
          this.PeriodicPercentageDiscount = (odataObject.PeriodicPercentageDiscount != null) ? parseFloat(odataObject.PeriodicPercentageDiscount) : undefined;
          this.QuantityDiscounted = (odataObject.QuantityDiscounted != null) ? parseFloat(odataObject.QuantityDiscounted) : undefined;
          this.UnitQuantity = (odataObject.UnitQuantity != null) ? parseFloat(odataObject.UnitQuantity) : undefined;
          if (odataObject.UnitOfMeasureConversion == null) {
              this.UnitOfMeasureConversion = undefined;
          } else if (odataObject.UnitOfMeasureConversion['@odata.type'] == null) {
              this.UnitOfMeasureConversion = new UnitOfMeasureConversionClass(odataObject.UnitOfMeasureConversion);
          } else {
              var className: string = odataObject.UnitOfMeasureConversion['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.UnitOfMeasureConversion = new Commerce.Proxy.Entities[className](odataObject.UnitOfMeasureConversion)
              }
          }

    
          this.DiscountLines = undefined;
          if (odataObject.DiscountLines) {
              this.DiscountLines = [];
              for (var i = 0; i < odataObject.DiscountLines.length; i++) {
                  if (odataObject.DiscountLines[i] != null) {
                      if (odataObject.DiscountLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.DiscountLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DiscountLines[i] = new Commerce.Proxy.Entities[className](odataObject.DiscountLines[i])
                          }
                      } else {
                          this.DiscountLines[i] = new DiscountLineClass(odataObject.DiscountLines[i]);
                      }
                  } else {
                      this.DiscountLines[i] = undefined;
                  }
              }
          }
          this.PriceLines = undefined;
          if (odataObject.PriceLines) {
              this.PriceLines = [];
              for (var i = 0; i < odataObject.PriceLines.length; i++) {
                  if (odataObject.PriceLines[i] != null) {
                      if (odataObject.PriceLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.PriceLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PriceLines[i] = new Commerce.Proxy.Entities[className](odataObject.PriceLines[i])
                          }
                      } else {
                          this.PriceLines[i] = new PriceLineClass(odataObject.PriceLines[i]);
                      }
                  } else {
                      this.PriceLines[i] = undefined;
                  }
              }
          }
          this.PeriodicDiscountPossibilities = undefined;
          if (odataObject.PeriodicDiscountPossibilities) {
              this.PeriodicDiscountPossibilities = [];
              for (var i = 0; i < odataObject.PeriodicDiscountPossibilities.length; i++) {
                  if (odataObject.PeriodicDiscountPossibilities[i] != null) {
                      if (odataObject.PeriodicDiscountPossibilities[i]['@odata.type'] != null) {
                          var className: string = odataObject.PeriodicDiscountPossibilities[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PeriodicDiscountPossibilities[i] = new Commerce.Proxy.Entities[className](odataObject.PeriodicDiscountPossibilities[i])
                          }
                      } else {
                          this.PeriodicDiscountPossibilities[i] = new DiscountLineClass(odataObject.PeriodicDiscountPossibilities[i]);
                      }
                  } else {
                      this.PeriodicDiscountPossibilities[i] = undefined;
                  }
              }
          }
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          if (odataObject.ReturnLabelProperties == null) {
              this.ReturnLabelProperties = undefined;
          } else if (odataObject.ReturnLabelProperties['@odata.type'] == null) {
              this.ReturnLabelProperties = new ReturnLabelContentClass(odataObject.ReturnLabelProperties);
          } else {
              var className: string = odataObject.ReturnLabelProperties['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ReturnLabelProperties = new Commerce.Proxy.Entities[className](odataObject.ReturnLabelProperties)
              }
          }

    
          this.LineMultilineDiscOnItem = odataObject.LineMultilineDiscOnItem;
          this.RelatedDiscountedLineIds = undefined;
          if (odataObject.RelatedDiscountedLineIds) {
              this.RelatedDiscountedLineIds = [];
              for (var i = 0; i < odataObject.RelatedDiscountedLineIds.length; i++) {
                  if (odataObject.RelatedDiscountedLineIds[i] != null) {
                      this.RelatedDiscountedLineIds[i] = odataObject.RelatedDiscountedLineIds[i];              } else {
                      this.RelatedDiscountedLineIds[i] = undefined;
                  }
              }
          }
          this.LinkedParentLineId = odataObject.LinkedParentLineId;
          this.LineMultilineDiscOnItemValue = odataObject.LineMultilineDiscOnItemValue;
          this.WasChanged = odataObject.WasChanged;
          this.OriginalSalesOrderUnitOfMeasure = odataObject.OriginalSalesOrderUnitOfMeasure;
          this.InventOrderUnitOfMeasure = odataObject.InventOrderUnitOfMeasure;
          this.TrackingId = odataObject.TrackingId;
          this.IsLoyaltyDiscountApplied = odataObject.IsLoyaltyDiscountApplied;
          this.CommissionSalesGroup = odataObject.CommissionSalesGroup;
          this.IsCommissionSalesGroupOverriddenByCustomer = odataObject.IsCommissionSalesGroupOverriddenByCustomer;
          this.CommissionSalesGroupSetByCashier = odataObject.CommissionSalesGroupSetByCashier;
          this.AttributeValues = undefined;
          if (odataObject.AttributeValues) {
              this.AttributeValues = [];
              for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                  if (odataObject.AttributeValues[i] != null) {
                      if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i])
                          }
                      } else {
                          this.AttributeValues[i] = new AttributeValueBaseClass(odataObject.AttributeValues[i]);
                      }
                  } else {
                      this.AttributeValues[i] = undefined;
                  }
              }
          }
          if (odataObject.ThirdPartyGiftCardInfo == null) {
              this.ThirdPartyGiftCardInfo = undefined;
          } else if (odataObject.ThirdPartyGiftCardInfo['@odata.type'] == null) {
              this.ThirdPartyGiftCardInfo = new ThirdPartyGiftCardInfoClass(odataObject.ThirdPartyGiftCardInfo);
          } else {
              var className: string = odataObject.ThirdPartyGiftCardInfo['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ThirdPartyGiftCardInfo = new Commerce.Proxy.Entities[className](odataObject.ThirdPartyGiftCardInfo)
              }
          }

    
          this.QuantityReturnable = (odataObject.QuantityReturnable != null) ? parseFloat(odataObject.QuantityReturnable) : undefined;
          this.LoyaltyRewardPointLines = undefined;
          if (odataObject.LoyaltyRewardPointLines) {
              this.LoyaltyRewardPointLines = [];
              for (var i = 0; i < odataObject.LoyaltyRewardPointLines.length; i++) {
                  if (odataObject.LoyaltyRewardPointLines[i] != null) {
                      if (odataObject.LoyaltyRewardPointLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.LoyaltyRewardPointLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyRewardPointLines[i])
                          }
                      } else {
                          this.LoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.LoyaltyRewardPointLines[i]);
                      }
                  } else {
                      this.LoyaltyRewardPointLines[i] = undefined;
                  }
              }
          }
          this.ReturnLoyaltyRewardPointLines = undefined;
          if (odataObject.ReturnLoyaltyRewardPointLines) {
              this.ReturnLoyaltyRewardPointLines = [];
              for (var i = 0; i < odataObject.ReturnLoyaltyRewardPointLines.length; i++) {
                  if (odataObject.ReturnLoyaltyRewardPointLines[i] != null) {
                      if (odataObject.ReturnLoyaltyRewardPointLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReturnLoyaltyRewardPointLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReturnLoyaltyRewardPointLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnLoyaltyRewardPointLines[i])
                          }
                      } else {
                          this.ReturnLoyaltyRewardPointLines[i] = new LoyaltyRewardPointLineClass(odataObject.ReturnLoyaltyRewardPointLines[i]);
                      }
                  } else {
                      this.ReturnLoyaltyRewardPointLines[i] = undefined;
                  }
              }
          }
          this.ItemId = odataObject.ItemId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
          this.SalesTaxGroupId = odataObject.SalesTaxGroupId;
          this.OriginalSalesTaxGroupId = odataObject.OriginalSalesTaxGroupId;
          this.OriginalItemTaxGroupId = odataObject.OriginalItemTaxGroupId;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.SalesOrderUnitOfMeasure = odataObject.SalesOrderUnitOfMeasure;
          this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
          this.NetAmountPerUnit = (odataObject.NetAmountPerUnit != null) ? parseFloat(odataObject.NetAmountPerUnit) : undefined;
          this.GrossAmount = (odataObject.GrossAmount != null) ? parseFloat(odataObject.GrossAmount) : undefined;
          this.TaxLines = undefined;
          if (odataObject.TaxLines) {
              this.TaxLines = [];
              for (var i = 0; i < odataObject.TaxLines.length; i++) {
                  if (odataObject.TaxLines[i] != null) {
                      if (odataObject.TaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.TaxLines[i])
                          }
                      } else {
                          this.TaxLines[i] = new TaxLineClass(odataObject.TaxLines[i]);
                      }
                  } else {
                      this.TaxLines[i] = undefined;
                  }
              }
          }
          this.TaxMeasures = undefined;
          if (odataObject.TaxMeasures) {
              this.TaxMeasures = [];
              for (var i = 0; i < odataObject.TaxMeasures.length; i++) {
                  if (odataObject.TaxMeasures[i] != null) {
                      if (odataObject.TaxMeasures[i]['@odata.type'] != null) {
                          var className: string = odataObject.TaxMeasures[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TaxMeasures[i] = new Commerce.Proxy.Entities[className](odataObject.TaxMeasures[i])
                          }
                      } else {
                          this.TaxMeasures[i] = new TaxMeasureClass(odataObject.TaxMeasures[i]);
                      }
                  } else {
                      this.TaxMeasures[i] = undefined;
                  }
              }
          }
          this.TaxAmountExemptInclusive = (odataObject.TaxAmountExemptInclusive != null) ? parseFloat(odataObject.TaxAmountExemptInclusive) : undefined;
          this.TaxAmountInclusive = (odataObject.TaxAmountInclusive != null) ? parseFloat(odataObject.TaxAmountInclusive) : undefined;
          this.TaxAmountExclusive = (odataObject.TaxAmountExclusive != null) ? parseFloat(odataObject.TaxAmountExclusive) : undefined;
          this.NetAmountWithAllInclusiveTax = (odataObject.NetAmountWithAllInclusiveTax != null) ? parseFloat(odataObject.NetAmountWithAllInclusiveTax) : undefined;
          this.BeginDateTime = (odataObject.BeginDateTime instanceof Date) ? odataObject.BeginDateTime
            : (odataObject.BeginDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.BeginDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.TaxRatePercent = (odataObject.TaxRatePercent != null) ? parseFloat(odataObject.TaxRatePercent) : undefined;
          this.IsReturnByReceipt = odataObject.IsReturnByReceipt;
          this.ReturnLineTaxAmount = (odataObject.ReturnLineTaxAmount != null) ? parseFloat(odataObject.ReturnLineTaxAmount) : undefined;
          this.ReturnTaxLines = undefined;
          if (odataObject.ReturnTaxLines) {
              this.ReturnTaxLines = [];
              for (var i = 0; i < odataObject.ReturnTaxLines.length; i++) {
                  if (odataObject.ReturnTaxLines[i] != null) {
                      if (odataObject.ReturnTaxLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReturnTaxLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReturnTaxLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReturnTaxLines[i])
                          }
                      } else {
                          this.ReturnTaxLines[i] = new TaxLineClass(odataObject.ReturnTaxLines[i]);
                      }
                  } else {
                      this.ReturnTaxLines[i] = undefined;
                  }
              }
          }
          this.TaxExemptPriceInclusiveReductionAmount = (odataObject.TaxExemptPriceInclusiveReductionAmount != null) ? parseFloat(odataObject.TaxExemptPriceInclusiveReductionAmount) : undefined;
          this.TaxExemptPriceInclusiveOriginalPrice = (odataObject.TaxExemptPriceInclusiveOriginalPrice != null) ? parseFloat(odataObject.TaxExemptPriceInclusiveOriginalPrice) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchArea entity class.
     */
    export class SearchAreaClass implements SearchArea {
        public Longitude: number;
        public Latitude: number;
        public Radius: number;
        public DistanceUnitValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
          this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
          this.Radius = (odataObject.Radius != null) ? parseFloat(odataObject.Radius) : undefined;
          this.DistanceUnitValue = odataObject.DistanceUnitValue;
        }
    }
    
    /**
     * ShiftAccountLine entity class.
     */
    export class ShiftAccountLineClass implements ShiftAccountLine {
        public AccountTypeValue: number;
        public AccountNumber: string;
        public Amount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AccountTypeValue = odataObject.AccountTypeValue;
          this.AccountNumber = odataObject.AccountNumber;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShiftTenderLine entity class.
     */
    export class ShiftTenderLineClass implements ShiftTenderLine {
        public TenderTypeId: string;
        public TenderTypeName: string;
        public CardTypeId: string;
        public TenderCurrency: string;
        public CountingRequired: boolean;
        public StartingAmountOfStoreCurrency: number;
        public StartingAmountOfTenderCurrency: number;
        public FloatingEntryAmountOfStoreCurrency: number;
        public FloatingEntryAmountOfTenderCurrency: number;
        public SafeDropAmountOfStoreCurrency: number;
        public SafeDropAmountOfTenderCurrency: number;
        public BankDropAmountOfStoreCurrency: number;
        public BankDropAmountOfTenderCurrency: number;
        public RemoveTenderAmountOfStoreCurrency: number;
        public RemoveTenderAmountOfTenderCurrency: number;
        public DeclareTenderAmountOfStoreCurrency: number;
        public DeclareTenderAmountOfTenderCurrency: number;
        public TenderedAmountOfStoreCurrency: number;
        public TenderedAmountOfTenderCurrency: number;
        public ChangeAmountOfStoreCurrency: number;
        public ChangeAmountOfTenderCurrency: number;
        public Count: number;
        public Notes: string;
        public OverriddenFloatEntryAmountInTenderedCurrency: number;
        public OverriddenBankDropAmountInTenderedCurrency: number;
        public OverriddenChangeAmountInTenderedCurrency: number;
        public OverriddenDeclaredTenderAmountInTenderedCurrency: number;
        public OverriddenRemovedTenderAmountInTenderedCurrency: number;
        public OverriddenSafeDropAmountInTenderedCurrency: number;
        public OverriddenStartingAmountInTenderedCurrency: number;
        public OverriddenTenderedAmountInTenderedCurrency: number;
        public OverShortAmountOfTenderCurrency: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TenderTypeId = odataObject.TenderTypeId;
          this.TenderTypeName = odataObject.TenderTypeName;
          this.CardTypeId = odataObject.CardTypeId;
          this.TenderCurrency = odataObject.TenderCurrency;
          this.CountingRequired = odataObject.CountingRequired;
          this.StartingAmountOfStoreCurrency = (odataObject.StartingAmountOfStoreCurrency != null) ? parseFloat(odataObject.StartingAmountOfStoreCurrency) : undefined;
          this.StartingAmountOfTenderCurrency = (odataObject.StartingAmountOfTenderCurrency != null) ? parseFloat(odataObject.StartingAmountOfTenderCurrency) : undefined;
          this.FloatingEntryAmountOfStoreCurrency = (odataObject.FloatingEntryAmountOfStoreCurrency != null) ? parseFloat(odataObject.FloatingEntryAmountOfStoreCurrency) : undefined;
          this.FloatingEntryAmountOfTenderCurrency = (odataObject.FloatingEntryAmountOfTenderCurrency != null) ? parseFloat(odataObject.FloatingEntryAmountOfTenderCurrency) : undefined;
          this.SafeDropAmountOfStoreCurrency = (odataObject.SafeDropAmountOfStoreCurrency != null) ? parseFloat(odataObject.SafeDropAmountOfStoreCurrency) : undefined;
          this.SafeDropAmountOfTenderCurrency = (odataObject.SafeDropAmountOfTenderCurrency != null) ? parseFloat(odataObject.SafeDropAmountOfTenderCurrency) : undefined;
          this.BankDropAmountOfStoreCurrency = (odataObject.BankDropAmountOfStoreCurrency != null) ? parseFloat(odataObject.BankDropAmountOfStoreCurrency) : undefined;
          this.BankDropAmountOfTenderCurrency = (odataObject.BankDropAmountOfTenderCurrency != null) ? parseFloat(odataObject.BankDropAmountOfTenderCurrency) : undefined;
          this.RemoveTenderAmountOfStoreCurrency = (odataObject.RemoveTenderAmountOfStoreCurrency != null) ? parseFloat(odataObject.RemoveTenderAmountOfStoreCurrency) : undefined;
          this.RemoveTenderAmountOfTenderCurrency = (odataObject.RemoveTenderAmountOfTenderCurrency != null) ? parseFloat(odataObject.RemoveTenderAmountOfTenderCurrency) : undefined;
          this.DeclareTenderAmountOfStoreCurrency = (odataObject.DeclareTenderAmountOfStoreCurrency != null) ? parseFloat(odataObject.DeclareTenderAmountOfStoreCurrency) : undefined;
          this.DeclareTenderAmountOfTenderCurrency = (odataObject.DeclareTenderAmountOfTenderCurrency != null) ? parseFloat(odataObject.DeclareTenderAmountOfTenderCurrency) : undefined;
          this.TenderedAmountOfStoreCurrency = (odataObject.TenderedAmountOfStoreCurrency != null) ? parseFloat(odataObject.TenderedAmountOfStoreCurrency) : undefined;
          this.TenderedAmountOfTenderCurrency = (odataObject.TenderedAmountOfTenderCurrency != null) ? parseFloat(odataObject.TenderedAmountOfTenderCurrency) : undefined;
          this.ChangeAmountOfStoreCurrency = (odataObject.ChangeAmountOfStoreCurrency != null) ? parseFloat(odataObject.ChangeAmountOfStoreCurrency) : undefined;
          this.ChangeAmountOfTenderCurrency = (odataObject.ChangeAmountOfTenderCurrency != null) ? parseFloat(odataObject.ChangeAmountOfTenderCurrency) : undefined;
          this.Count = odataObject.Count;
          this.Notes = odataObject.Notes;
          this.OverriddenFloatEntryAmountInTenderedCurrency = (odataObject.OverriddenFloatEntryAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenFloatEntryAmountInTenderedCurrency) : undefined;
          this.OverriddenBankDropAmountInTenderedCurrency = (odataObject.OverriddenBankDropAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenBankDropAmountInTenderedCurrency) : undefined;
          this.OverriddenChangeAmountInTenderedCurrency = (odataObject.OverriddenChangeAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenChangeAmountInTenderedCurrency) : undefined;
          this.OverriddenDeclaredTenderAmountInTenderedCurrency = (odataObject.OverriddenDeclaredTenderAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenDeclaredTenderAmountInTenderedCurrency) : undefined;
          this.OverriddenRemovedTenderAmountInTenderedCurrency = (odataObject.OverriddenRemovedTenderAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenRemovedTenderAmountInTenderedCurrency) : undefined;
          this.OverriddenSafeDropAmountInTenderedCurrency = (odataObject.OverriddenSafeDropAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenSafeDropAmountInTenderedCurrency) : undefined;
          this.OverriddenStartingAmountInTenderedCurrency = (odataObject.OverriddenStartingAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenStartingAmountInTenderedCurrency) : undefined;
          this.OverriddenTenderedAmountInTenderedCurrency = (odataObject.OverriddenTenderedAmountInTenderedCurrency != null) ? parseFloat(odataObject.OverriddenTenderedAmountInTenderedCurrency) : undefined;
          this.OverShortAmountOfTenderCurrency = (odataObject.OverShortAmountOfTenderCurrency != null) ? parseFloat(odataObject.OverShortAmountOfTenderCurrency) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * StockCountJournalTransaction entity class.
     */
    export class StockCountJournalTransactionClass implements StockCountJournalTransaction {
        public JournalId: string;
        public RecordId: number;
        public OperationType: number;
        public ItemId: string;
        public DataAreaId: string;
        public ProductRecordId: number;
        public ItemName: string;
        public InventDimId: string;
        public Counted: number;
        public Quantity: number;
        public EstimatedOnHandQuantity: number;
        public OnHandCalculationDateTime: Date;
        public Unit: string;
        public UserId: string;
        public TerminalId: string;
        public CountedDate: Date;
        public Status: number;
        public InventBatchId: string;
        public WarehouseLocationId: string;
        public InventoryStatus: string;
        public LicensePlate: string;
        public WarehousePalletId: string;
        public InventSiteId: string;
        public InventLocationId: string;
        public ConfigId: string;
        public InventSizeId: string;
        public InventColorId: string;
        public InventStyleId: string;
        public InventSerialId: string;
        public TrackingGuid: string;
        public UpdatedInAx: boolean;
        public Message: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.JournalId = odataObject.JournalId;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.OperationType = odataObject.OperationType;
          this.ItemId = odataObject.ItemId;
          this.DataAreaId = odataObject.DataAreaId;
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.ItemName = odataObject.ItemName;
          this.InventDimId = odataObject.InventDimId;
          this.Counted = (odataObject.Counted != null) ? parseFloat(odataObject.Counted) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.EstimatedOnHandQuantity = (odataObject.EstimatedOnHandQuantity != null) ? parseFloat(odataObject.EstimatedOnHandQuantity) : undefined;
          this.OnHandCalculationDateTime = (odataObject.OnHandCalculationDateTime instanceof Date) ? odataObject.OnHandCalculationDateTime
            : (odataObject.OnHandCalculationDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OnHandCalculationDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Unit = odataObject.Unit;
          this.UserId = odataObject.UserId;
          this.TerminalId = odataObject.TerminalId;
          this.CountedDate = (odataObject.CountedDate instanceof Date) ? odataObject.CountedDate
            : (odataObject.CountedDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CountedDate, "Edm.DateTimeOffset", false) : undefined;
          this.Status = odataObject.Status;
          this.InventBatchId = odataObject.InventBatchId;
          this.WarehouseLocationId = odataObject.WarehouseLocationId;
          this.InventoryStatus = odataObject.InventoryStatus;
          this.LicensePlate = odataObject.LicensePlate;
          this.WarehousePalletId = odataObject.WarehousePalletId;
          this.InventSiteId = odataObject.InventSiteId;
          this.InventLocationId = odataObject.InventLocationId;
          this.ConfigId = odataObject.ConfigId;
          this.InventSizeId = odataObject.InventSizeId;
          this.InventColorId = odataObject.InventColorId;
          this.InventStyleId = odataObject.InventStyleId;
          this.InventSerialId = odataObject.InventSerialId;
          this.TrackingGuid = odataObject.TrackingGuid;
          this.UpdatedInAx = odataObject.UpdatedInAx;
          this.Message = odataObject.Message;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TaxLine entity class.
     */
    export class TaxLineClass implements TaxLine {
        public TaxGroup: string;
        public Percentage: number;
        public IsExempt: boolean;
        public TaxBasis: number;
        public IsIncludedInPrice: boolean;
        public SaleLineNumber: number;
        public StoreId: string;
        public TerminalId: string;
        public TransactionId: string;
        public TaxCode: string;
        public Amount: number;
        public AmountRefunded: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TaxGroup = odataObject.TaxGroup;
          this.Percentage = (odataObject.Percentage != null) ? parseFloat(odataObject.Percentage) : undefined;
          this.IsExempt = odataObject.IsExempt;
          this.TaxBasis = (odataObject.TaxBasis != null) ? parseFloat(odataObject.TaxBasis) : undefined;
          this.IsIncludedInPrice = odataObject.IsIncludedInPrice;
          this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.TransactionId = odataObject.TransactionId;
          this.TaxCode = odataObject.TaxCode;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.AmountRefunded = (odataObject.AmountRefunded != null) ? parseFloat(odataObject.AmountRefunded) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TenderLine entity class.
     */
    export class TenderLineClass implements TenderLine {
        public StoreId: string;
        public TerminalId: string;
        public TransactionId: string;
        public RefundableAmount: number;
        public CaptureToken: string;
        public CardToken: string;
        public Authorization: string;
        public TransactionStatusValue: number;
        public IncomeExpenseAccountTypeValue: number;
        public MaskedCardNumber: string;
        public TenderDate: Date;
        public IsPreProcessed: boolean;
        public IsDeposit: boolean;
        public IsCustomerAccountFloorLimitUsed: boolean;
        public ChannelId: number;
        public IsLinkedRefund: boolean;
        public LinkedPaymentStore: string;
        public LinkedPaymentTerminalId: string;
        public LinkedPaymentTransactionId: string;
        public LinkedPaymentLineNumber: number;
        public LinkedPaymentCurrency: string;
        public TenderLineId: string;
        public Amount: number;
        public CashBackAmount: number;
        public AmountInTenderedCurrency: number;
        public AmountInCompanyCurrency: number;
        public Currency: string;
        public ExchangeRate: number;
        public CompanyCurrencyExchangeRate: number;
        public TenderTypeId: string;
        public SignatureData: string;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public LineNumber: number;
        public GiftCardId: string;
        public GiftCardPin: string;
        public GiftCardExpirationYear: number;
        public GiftCardExpirationMonth: number;
        public CreditMemoId: string;
        public CustomerId: string;
        public LoyaltyCardId: string;
        public CardTypeId: string;
        public IsChangeLine: boolean;
        public IsHistorical: boolean;
        public IsVoidable: boolean;
        public StatusValue: number;
        public VoidStatusValue: number;
        public AuthorizedAmount: number;
        public PaymentRefRecId: number;
        public CardPaymentAccountId: string;
        public ProcessingTypeValue: number;
        public CardProcessorStatusValue: number;
        public LinkedPaymentRefRecId: number;
        public IsPolicyBypassed: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.TransactionId = odataObject.TransactionId;
          this.RefundableAmount = (odataObject.RefundableAmount != null) ? parseFloat(odataObject.RefundableAmount) : undefined;
          this.CaptureToken = odataObject.CaptureToken;
          this.CardToken = odataObject.CardToken;
          this.Authorization = odataObject.Authorization;
          this.TransactionStatusValue = odataObject.TransactionStatusValue;
          this.IncomeExpenseAccountTypeValue = odataObject.IncomeExpenseAccountTypeValue;
          this.MaskedCardNumber = odataObject.MaskedCardNumber;
          this.TenderDate = (odataObject.TenderDate instanceof Date) ? odataObject.TenderDate
            : (odataObject.TenderDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TenderDate, "Edm.DateTimeOffset", false) : undefined;
          this.IsPreProcessed = odataObject.IsPreProcessed;
          this.IsDeposit = odataObject.IsDeposit;
          this.IsCustomerAccountFloorLimitUsed = odataObject.IsCustomerAccountFloorLimitUsed;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.IsLinkedRefund = odataObject.IsLinkedRefund;
          this.LinkedPaymentStore = odataObject.LinkedPaymentStore;
          this.LinkedPaymentTerminalId = odataObject.LinkedPaymentTerminalId;
          this.LinkedPaymentTransactionId = odataObject.LinkedPaymentTransactionId;
          this.LinkedPaymentLineNumber = (odataObject.LinkedPaymentLineNumber != null) ? parseFloat(odataObject.LinkedPaymentLineNumber) : undefined;
          this.LinkedPaymentCurrency = odataObject.LinkedPaymentCurrency;
          this.TenderLineId = odataObject.TenderLineId;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.CashBackAmount = (odataObject.CashBackAmount != null) ? parseFloat(odataObject.CashBackAmount) : undefined;
          this.AmountInTenderedCurrency = (odataObject.AmountInTenderedCurrency != null) ? parseFloat(odataObject.AmountInTenderedCurrency) : undefined;
          this.AmountInCompanyCurrency = (odataObject.AmountInCompanyCurrency != null) ? parseFloat(odataObject.AmountInCompanyCurrency) : undefined;
          this.Currency = odataObject.Currency;
          this.ExchangeRate = (odataObject.ExchangeRate != null) ? parseFloat(odataObject.ExchangeRate) : undefined;
          this.CompanyCurrencyExchangeRate = (odataObject.CompanyCurrencyExchangeRate != null) ? parseFloat(odataObject.CompanyCurrencyExchangeRate) : undefined;
          this.TenderTypeId = odataObject.TenderTypeId;
          this.SignatureData = odataObject.SignatureData;
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.GiftCardId = odataObject.GiftCardId;
          this.GiftCardPin = odataObject.GiftCardPin;
          this.GiftCardExpirationYear = odataObject.GiftCardExpirationYear;
          this.GiftCardExpirationMonth = odataObject.GiftCardExpirationMonth;
          this.CreditMemoId = odataObject.CreditMemoId;
          this.CustomerId = odataObject.CustomerId;
          this.LoyaltyCardId = odataObject.LoyaltyCardId;
          this.CardTypeId = odataObject.CardTypeId;
          this.IsChangeLine = odataObject.IsChangeLine;
          this.IsHistorical = odataObject.IsHistorical;
          this.IsVoidable = odataObject.IsVoidable;
          this.StatusValue = odataObject.StatusValue;
          this.VoidStatusValue = odataObject.VoidStatusValue;
          this.AuthorizedAmount = (odataObject.AuthorizedAmount != null) ? parseFloat(odataObject.AuthorizedAmount) : undefined;
          this.PaymentRefRecId = (odataObject.PaymentRefRecId != null) ? parseInt(odataObject.PaymentRefRecId, 10) : undefined;
          this.CardPaymentAccountId = odataObject.CardPaymentAccountId;
          this.ProcessingTypeValue = odataObject.ProcessingTypeValue;
          this.CardProcessorStatusValue = odataObject.CardProcessorStatusValue;
          this.LinkedPaymentRefRecId = (odataObject.LinkedPaymentRefRecId != null) ? parseInt(odataObject.LinkedPaymentRefRecId, 10) : undefined;
          this.IsPolicyBypassed = odataObject.IsPolicyBypassed;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TextValueTranslation entity class.
     */
    export class TextValueTranslationClass implements TextValueTranslation {
        public Language: string;
        public Text: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Language = odataObject.Language;
          this.Text = odataObject.Text;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * UnitOfMeasure entity class.
     */
    export class UnitOfMeasureClass implements UnitOfMeasure {
        public DecimalPrecision: number;
        public Symbol: string;
        public Description: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DecimalPrecision = odataObject.DecimalPrecision;
          this.Symbol = odataObject.Symbol;
          this.Description = odataObject.Description;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RecommendedElement entity class.
     */
    export class RecommendedElementClass implements RecommendedElement {
        public ElementId: string;
        public ElementTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ElementId = odataObject.ElementId;
          this.ElementTypeValue = odataObject.ElementTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RecommendationCriteria entity class.
     */
    export class RecommendationCriteriaClass implements RecommendationCriteria {
        public CustomerAccountNumber: string;
        public CatalogId: number;
        public ProductIds: number[];
        public CategoryIds: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.ProductIds = undefined;
          if (odataObject.ProductIds) {
              this.ProductIds = [];
              for (var i = 0; i < odataObject.ProductIds.length; i++) {
                  if (odataObject.ProductIds[i] != null) {
                      this.ProductIds[i] = parseInt(odataObject.ProductIds[i], 10);              } else {
                      this.ProductIds[i] = undefined;
                  }
              }
          }
          this.CategoryIds = undefined;
          if (odataObject.CategoryIds) {
              this.CategoryIds = [];
              for (var i = 0; i < odataObject.CategoryIds.length; i++) {
                  if (odataObject.CategoryIds[i] != null) {
                      this.CategoryIds[i] = parseInt(odataObject.CategoryIds[i], 10);              } else {
                      this.CategoryIds[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductListLine entity class.
     */
    export class ProductListLineClass implements ProductListLine {
        public ProductListId: string;
        public LineId: string;
        public ProductId: number;
        public Quantity: number;
        public UnitOfMeasure: string;
        public CreatedDateTime: Date;
        public LastUpdated: Date;
        public DeletedDateTime: Date;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductListId = odataObject.ProductListId;
          this.LineId = odataObject.LineId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.LastUpdated = (odataObject.LastUpdated instanceof Date) ? odataObject.LastUpdated
            : (odataObject.LastUpdated != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastUpdated, "Edm.DateTimeOffset", false) : undefined;
          this.DeletedDateTime = (odataObject.DeletedDateTime instanceof Date) ? odataObject.DeletedDateTime
            : (odataObject.DeletedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeletedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceListLine entity class.
     */
    export class CommerceListLineClass implements CommerceListLine {
        public CommerceListId: number;
        public LineId: number;
        public CustomerId: string;
        public CustomerName: string;
        public ProductId: number;
        public Quantity: number;
        public UnitOfMeasure: string;
        public IsFavorite: boolean;
        public IsRecurring: boolean;
        public IsPrivate: boolean;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CommerceListId = (odataObject.CommerceListId != null) ? parseInt(odataObject.CommerceListId, 10) : undefined;
          this.LineId = (odataObject.LineId != null) ? parseInt(odataObject.LineId, 10) : undefined;
          this.CustomerId = odataObject.CustomerId;
          this.CustomerName = odataObject.CustomerName;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.IsFavorite = odataObject.IsFavorite;
          this.IsRecurring = odataObject.IsRecurring;
          this.IsPrivate = odataObject.IsPrivate;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceListContributor entity class.
     */
    export class CommerceListContributorClass implements CommerceListContributor {
        public RecordId: number;
        public CustomerId: string;
        public CustomerName: string;
        public InvitationId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.CustomerId = odataObject.CustomerId;
          this.CustomerName = odataObject.CustomerName;
          this.InvitationId = (odataObject.InvitationId != null) ? parseInt(odataObject.InvitationId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceListInvitation entity class.
     */
    export class CommerceListInvitationClass implements CommerceListInvitation {
        public RecordId: number;
        public Invitee: string;
        public IsSent: boolean;
        public LastRequestDateTime: Date;
        public LastSentDateTime: Date;
        public StatusValue: number;
        public Token: string;
        public InvitationTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Invitee = odataObject.Invitee;
          this.IsSent = odataObject.IsSent;
          this.LastRequestDateTime = (odataObject.LastRequestDateTime instanceof Date) ? odataObject.LastRequestDateTime
            : (odataObject.LastRequestDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastRequestDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.LastSentDateTime = (odataObject.LastSentDateTime instanceof Date) ? odataObject.LastSentDateTime
            : (odataObject.LastSentDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastSentDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.StatusValue = odataObject.StatusValue;
          this.Token = odataObject.Token;
          this.InvitationTypeValue = odataObject.InvitationTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchFilter entity class.
     */
    export class SearchFilterClass implements SearchFilter {
        public Key: string;
        public FilterTypeValue: number;
        public SearchValues: Entities.SearchFilterValue[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Key = odataObject.Key;
          this.FilterTypeValue = odataObject.FilterTypeValue;
          this.SearchValues = undefined;
          if (odataObject.SearchValues) {
              this.SearchValues = [];
              for (var i = 0; i < odataObject.SearchValues.length; i++) {
                  if (odataObject.SearchValues[i] != null) {
                      if (odataObject.SearchValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.SearchValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SearchValues[i] = new Commerce.Proxy.Entities[className](odataObject.SearchValues[i])
                          }
                      } else {
                          this.SearchValues[i] = new SearchFilterValueClass(odataObject.SearchValues[i]);
                      }
                  } else {
                      this.SearchValues[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchFilterValue entity class.
     */
    export class SearchFilterValueClass implements SearchFilterValue {
        public Value: Entities.CommercePropertyValue;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.Value == null) {
              this.Value = undefined;
          } else if (odataObject.Value['@odata.type'] == null) {
              this.Value = new CommercePropertyValueClass(odataObject.Value);
          } else {
              var className: string = odataObject.Value['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value = new Commerce.Proxy.Entities[className](odataObject.Value)
              }
          }

    
        }
    }
    
    /**
     * TransactionSearchCriteria entity class.
     */
    export class TransactionSearchCriteriaClass implements TransactionSearchCriteria {
        public TransactionIds: string[];
        public SalesId: string;
        public ReceiptId: string;
        public ChannelReferenceId: string;
        public CustomerAccountNumber: string;
        public CustomerFirstName: string;
        public CustomerLastName: string;
        public StoreId: string;
        public TerminalId: string;
        public ItemId: string;
        public Barcode: string;
        public SerialNumber: string;
        public StaffId: string;
        public StartDateTime: Date;
        public EndDateTime: Date;
        public ReceiptEmailAddress: string;
        public SearchIdentifiers: string;
        public SearchLocationTypeValue: number;
        public CustomFilters: Entities.SearchFilter[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionIds = undefined;
          if (odataObject.TransactionIds) {
              this.TransactionIds = [];
              for (var i = 0; i < odataObject.TransactionIds.length; i++) {
                  if (odataObject.TransactionIds[i] != null) {
                      this.TransactionIds[i] = odataObject.TransactionIds[i];              } else {
                      this.TransactionIds[i] = undefined;
                  }
              }
          }
          this.SalesId = odataObject.SalesId;
          this.ReceiptId = odataObject.ReceiptId;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.CustomerFirstName = odataObject.CustomerFirstName;
          this.CustomerLastName = odataObject.CustomerLastName;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.ItemId = odataObject.ItemId;
          this.Barcode = odataObject.Barcode;
          this.SerialNumber = odataObject.SerialNumber;
          this.StaffId = odataObject.StaffId;
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ReceiptEmailAddress = odataObject.ReceiptEmailAddress;
          this.SearchIdentifiers = odataObject.SearchIdentifiers;
          this.SearchLocationTypeValue = odataObject.SearchLocationTypeValue;
          this.CustomFilters = undefined;
          if (odataObject.CustomFilters) {
              this.CustomFilters = [];
              for (var i = 0; i < odataObject.CustomFilters.length; i++) {
                  if (odataObject.CustomFilters[i] != null) {
                      if (odataObject.CustomFilters[i]['@odata.type'] != null) {
                          var className: string = odataObject.CustomFilters[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CustomFilters[i] = new Commerce.Proxy.Entities[className](odataObject.CustomFilters[i])
                          }
                      } else {
                          this.CustomFilters[i] = new SearchFilterClass(odataObject.CustomFilters[i]);
                      }
                  } else {
                      this.CustomFilters[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesOrderSearchCriteria entity class.
     */
    export class SalesOrderSearchCriteriaClass implements SalesOrderSearchCriteria {
        public TransactionIds: string[];
        public SalesId: string;
        public ReceiptId: string;
        public ChannelReferenceId: string;
        public CustomerAccountNumber: string;
        public CustomerFirstName: string;
        public CustomerLastName: string;
        public StoreId: string;
        public TerminalId: string;
        public ItemId: string;
        public Barcode: string;
        public SerialNumber: string;
        public StaffId: string;
        public SearchTypeValue: number;
        public StartDateTime: Date;
        public EndDateTime: Date;
        public IncludeDetails: boolean;
        public ReceiptEmailAddress: string;
        public SearchIdentifiers: string;
        public SalesTransactionTypeValues: number[];
        public SearchLocationTypeValue: number;
        public TransactionStatusTypeValues: number[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionIds = undefined;
          if (odataObject.TransactionIds) {
              this.TransactionIds = [];
              for (var i = 0; i < odataObject.TransactionIds.length; i++) {
                  if (odataObject.TransactionIds[i] != null) {
                      this.TransactionIds[i] = odataObject.TransactionIds[i];              } else {
                      this.TransactionIds[i] = undefined;
                  }
              }
          }
          this.SalesId = odataObject.SalesId;
          this.ReceiptId = odataObject.ReceiptId;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.CustomerFirstName = odataObject.CustomerFirstName;
          this.CustomerLastName = odataObject.CustomerLastName;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.ItemId = odataObject.ItemId;
          this.Barcode = odataObject.Barcode;
          this.SerialNumber = odataObject.SerialNumber;
          this.StaffId = odataObject.StaffId;
          this.SearchTypeValue = odataObject.SearchTypeValue;
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.IncludeDetails = odataObject.IncludeDetails;
          this.ReceiptEmailAddress = odataObject.ReceiptEmailAddress;
          this.SearchIdentifiers = odataObject.SearchIdentifiers;
          this.SalesTransactionTypeValues = undefined;
          if (odataObject.SalesTransactionTypeValues) {
              this.SalesTransactionTypeValues = [];
              for (var i = 0; i < odataObject.SalesTransactionTypeValues.length; i++) {
                  if (odataObject.SalesTransactionTypeValues[i] != null) {
                      this.SalesTransactionTypeValues[i] = odataObject.SalesTransactionTypeValues[i];              } else {
                      this.SalesTransactionTypeValues[i] = undefined;
                  }
              }
          }
          this.SearchLocationTypeValue = odataObject.SearchLocationTypeValue;
          this.TransactionStatusTypeValues = undefined;
          if (odataObject.TransactionStatusTypeValues) {
              this.TransactionStatusTypeValues = [];
              for (var i = 0; i < odataObject.TransactionStatusTypeValues.length; i++) {
                  if (odataObject.TransactionStatusTypeValues[i] != null) {
                      this.TransactionStatusTypeValues[i] = odataObject.TransactionStatusTypeValues[i];              } else {
                      this.TransactionStatusTypeValues[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchStoreCriteria entity class.
     */
    export class SearchStoreCriteriaClass implements SearchStoreCriteria {
        public ChannelId: number;
        public StoreNumber: string;
        public InventoryLocationId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.StoreNumber = odataObject.StoreNumber;
          this.InventoryLocationId = odataObject.InventoryLocationId;
        }
    }
    
    /**
     * CustomerSearchCriteria entity class.
     */
    export class CustomerSearchCriteriaClass implements CustomerSearchCriteria {
        public Keyword: string;
        public SearchOnlyCurrentCompany: boolean;
        public SearchLocationValue: number;
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Keyword = odataObject.Keyword;
          this.SearchOnlyCurrentCompany = odataObject.SearchOnlyCurrentCompany;
          this.SearchLocationValue = odataObject.SearchLocationValue;
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * ProductPrice entity class.
     */
    export class ProductPriceClass implements ProductPrice {
        public ProductId: number;
        public ListingId: number;
        public BasePrice: number;
        public TradeAgreementPrice: number;
        public AdjustedPrice: number;
        public CustomerContextualPrice: number;
        public DiscountAmount: number;
        public CurrencyCode: string;
        public ItemId: string;
        public InventoryDimensionId: string;
        public UnitOfMeasure: string;
        public ValidFrom: Date;
        public ProductLookupId: number;
        public ChannelId: number;
        public CatalogId: number;
        public DiscountLines: Entities.DiscountLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ListingId = (odataObject.ListingId != null) ? parseInt(odataObject.ListingId, 10) : undefined;
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.TradeAgreementPrice = (odataObject.TradeAgreementPrice != null) ? parseFloat(odataObject.TradeAgreementPrice) : undefined;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          this.CustomerContextualPrice = (odataObject.CustomerContextualPrice != null) ? parseFloat(odataObject.CustomerContextualPrice) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.ItemId = odataObject.ItemId;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ProductLookupId = (odataObject.ProductLookupId != null) ? parseInt(odataObject.ProductLookupId, 10) : undefined;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.DiscountLines = undefined;
          if (odataObject.DiscountLines) {
              this.DiscountLines = [];
              for (var i = 0; i < odataObject.DiscountLines.length; i++) {
                  if (odataObject.DiscountLines[i] != null) {
                      if (odataObject.DiscountLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.DiscountLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DiscountLines[i] = new Commerce.Proxy.Entities[className](odataObject.DiscountLines[i])
                          }
                      } else {
                          this.DiscountLines[i] = new DiscountLineClass(odataObject.DiscountLines[i]);
                      }
                  } else {
                      this.DiscountLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitAvailability entity class.
     */
    export class OrgUnitAvailabilityClass implements OrgUnitAvailability {
        public OrgUnitLocation: Entities.OrgUnitLocation;
        public ItemAvailabilities: Entities.ItemAvailability[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.OrgUnitLocation == null) {
              this.OrgUnitLocation = undefined;
          } else if (odataObject.OrgUnitLocation['@odata.type'] == null) {
              this.OrgUnitLocation = new OrgUnitLocationClass(odataObject.OrgUnitLocation);
          } else {
              var className: string = odataObject.OrgUnitLocation['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.OrgUnitLocation = new Commerce.Proxy.Entities[className](odataObject.OrgUnitLocation)
              }
          }

    
          this.ItemAvailabilities = undefined;
          if (odataObject.ItemAvailabilities) {
              this.ItemAvailabilities = [];
              for (var i = 0; i < odataObject.ItemAvailabilities.length; i++) {
                  if (odataObject.ItemAvailabilities[i] != null) {
                      if (odataObject.ItemAvailabilities[i]['@odata.type'] != null) {
                          var className: string = odataObject.ItemAvailabilities[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ItemAvailabilities[i] = new Commerce.Proxy.Entities[className](odataObject.ItemAvailabilities[i])
                          }
                      } else {
                          this.ItemAvailabilities[i] = new ItemAvailabilityClass(odataObject.ItemAvailabilities[i]);
                      }
                  } else {
                      this.ItemAvailabilities[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductVariantPropertySet entity class.
     */
    export class ProductVariantPropertySetClass implements ProductVariantPropertySet {
        public VariantId: number;
        public ProductVariantPropertiesAsList: Entities.ProductPropertyTranslation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.VariantId = (odataObject.VariantId != null) ? parseInt(odataObject.VariantId, 10) : undefined;
          this.ProductVariantPropertiesAsList = undefined;
          if (odataObject.ProductVariantPropertiesAsList) {
              this.ProductVariantPropertiesAsList = [];
              for (var i = 0; i < odataObject.ProductVariantPropertiesAsList.length; i++) {
                  if (odataObject.ProductVariantPropertiesAsList[i] != null) {
                      if (odataObject.ProductVariantPropertiesAsList[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductVariantPropertiesAsList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductVariantPropertiesAsList[i] = new Commerce.Proxy.Entities[className](odataObject.ProductVariantPropertiesAsList[i])
                          }
                      } else {
                          this.ProductVariantPropertiesAsList[i] = new ProductPropertyTranslationClass(odataObject.ProductVariantPropertiesAsList[i]);
                      }
                  } else {
                      this.ProductVariantPropertiesAsList[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PurchaseOrderLine entity class.
     */
    export class PurchaseOrderLineClass implements PurchaseOrderLine {
        public RecordId: number;
        public OrderId: string;
        public ProductRecordId: number;
        public ItemId: string;
        public ItemName: string;
        public InventDimId: string;
        public QuantityOrdered: number;
        public PurchaseQuantity: number;
        public PurchaseUnit: string;
        public PurchaseReceived: number;
        public PurchaseReceivedNow: number;
        public InventBatchId: string;
        public WMSLocationId: string;
        public WMSPalletId: string;
        public InventoryStatus: string;
        public LicensePlate: string;
        public InventSiteId: string;
        public InventLocationId: string;
        public ConfigId: string;
        public InventSerialId: string;
        public InventSizeId: string;
        public InventColorId: string;
        public InventStyleId: string;
        public IsCommitted: boolean;
        public Message: string;
        public UniqueIdentifier: string;
        public DeliveryMethod: string;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.OrderId = odataObject.OrderId;
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.ItemName = odataObject.ItemName;
          this.InventDimId = odataObject.InventDimId;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.PurchaseQuantity = (odataObject.PurchaseQuantity != null) ? parseFloat(odataObject.PurchaseQuantity) : undefined;
          this.PurchaseUnit = odataObject.PurchaseUnit;
          this.PurchaseReceived = (odataObject.PurchaseReceived != null) ? parseFloat(odataObject.PurchaseReceived) : undefined;
          this.PurchaseReceivedNow = (odataObject.PurchaseReceivedNow != null) ? parseFloat(odataObject.PurchaseReceivedNow) : undefined;
          this.InventBatchId = odataObject.InventBatchId;
          this.WMSLocationId = odataObject.WMSLocationId;
          this.WMSPalletId = odataObject.WMSPalletId;
          this.InventoryStatus = odataObject.InventoryStatus;
          this.LicensePlate = odataObject.LicensePlate;
          this.InventSiteId = odataObject.InventSiteId;
          this.InventLocationId = odataObject.InventLocationId;
          this.ConfigId = odataObject.ConfigId;
          this.InventSerialId = odataObject.InventSerialId;
          this.InventSizeId = odataObject.InventSizeId;
          this.InventColorId = odataObject.InventColorId;
          this.InventStyleId = odataObject.InventStyleId;
          this.IsCommitted = odataObject.IsCommitted;
          this.Message = odataObject.Message;
          this.UniqueIdentifier = odataObject.UniqueIdentifier;
          this.DeliveryMethod = odataObject.DeliveryMethod;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TransferOrderLine entity class.
     */
    export class TransferOrderLineClass implements TransferOrderLine {
        public RecordId: number;
        public OrderId: string;
        public ProductRecordId: number;
        public ItemId: string;
        public ItemName: string;
        public InventDimId: string;
        public QuantityTransferred: number;
        public QuantityShipped: number;
        public QuantityReceived: number;
        public QuantityShipNow: number;
        public QuantityReceiveNow: number;
        public QuantityRemainShip: number;
        public QuantityRemainReceive: number;
        public PurchaseUnit: string;
        public InventBatchId: string;
        public WMSLocationId: string;
        public WMSPalletId: string;
        public InventoryStatus: string;
        public LicensePlate: string;
        public InventSiteId: string;
        public InventLocationId: string;
        public ConfigId: string;
        public InventSerialId: string;
        public InventSizeId: string;
        public InventColorId: string;
        public InventStyleId: string;
        public IsCommitted: boolean;
        public Message: string;
        public Guid: string;
        public DeliveryMethod: string;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.OrderId = odataObject.OrderId;
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.ItemName = odataObject.ItemName;
          this.InventDimId = odataObject.InventDimId;
          this.QuantityTransferred = (odataObject.QuantityTransferred != null) ? parseFloat(odataObject.QuantityTransferred) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
          this.QuantityShipNow = (odataObject.QuantityShipNow != null) ? parseFloat(odataObject.QuantityShipNow) : undefined;
          this.QuantityReceiveNow = (odataObject.QuantityReceiveNow != null) ? parseFloat(odataObject.QuantityReceiveNow) : undefined;
          this.QuantityRemainShip = (odataObject.QuantityRemainShip != null) ? parseFloat(odataObject.QuantityRemainShip) : undefined;
          this.QuantityRemainReceive = (odataObject.QuantityRemainReceive != null) ? parseFloat(odataObject.QuantityRemainReceive) : undefined;
          this.PurchaseUnit = odataObject.PurchaseUnit;
          this.InventBatchId = odataObject.InventBatchId;
          this.WMSLocationId = odataObject.WMSLocationId;
          this.WMSPalletId = odataObject.WMSPalletId;
          this.InventoryStatus = odataObject.InventoryStatus;
          this.LicensePlate = odataObject.LicensePlate;
          this.InventSiteId = odataObject.InventSiteId;
          this.InventLocationId = odataObject.InventLocationId;
          this.ConfigId = odataObject.ConfigId;
          this.InventSerialId = odataObject.InventSerialId;
          this.InventSizeId = odataObject.InventSizeId;
          this.InventColorId = odataObject.InventColorId;
          this.InventStyleId = odataObject.InventStyleId;
          this.IsCommitted = odataObject.IsCommitted;
          this.Message = odataObject.Message;
          this.Guid = odataObject.Guid;
          this.DeliveryMethod = odataObject.DeliveryMethod;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TransferOrderJournal entity class.
     */
    export class TransferOrderJournalClass implements TransferOrderJournal {
        public OrderId: string;
        public VoucherId: string;
        public UpdatedByWorker: string;
        public InventLocationIdFrom: string;
        public InventLocationIdTo: string;
        public QuantityShipped: number;
        public PostingDate: Date;
        public DeliveryMode: string;
        public Comments: string;
        public JournalLines: Entities.TransferOrderJournalLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrderId = odataObject.OrderId;
          this.VoucherId = odataObject.VoucherId;
          this.UpdatedByWorker = odataObject.UpdatedByWorker;
          this.InventLocationIdFrom = odataObject.InventLocationIdFrom;
          this.InventLocationIdTo = odataObject.InventLocationIdTo;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.PostingDate = (odataObject.PostingDate instanceof Date) ? odataObject.PostingDate
            : (odataObject.PostingDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.PostingDate, "Edm.DateTimeOffset", false) : undefined;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.Comments = odataObject.Comments;
          this.JournalLines = undefined;
          if (odataObject.JournalLines) {
              this.JournalLines = [];
              for (var i = 0; i < odataObject.JournalLines.length; i++) {
                  if (odataObject.JournalLines[i] != null) {
                      if (odataObject.JournalLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.JournalLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.JournalLines[i] = new Commerce.Proxy.Entities[className](odataObject.JournalLines[i])
                          }
                      } else {
                          this.JournalLines[i] = new TransferOrderJournalLineClass(odataObject.JournalLines[i]);
                      }
                  } else {
                      this.JournalLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PickingListLine entity class.
     */
    export class PickingListLineClass implements PickingListLine {
        public RecordId: number;
        public OrderId: string;
        public ProductRecordId: number;
        public ItemId: string;
        public ItemName: string;
        public InventDimId: string;
        public QuantityOrdered: number;
        public PurchaseReceivedNow: number;
        public InventBatchId: string;
        public WMSLocationId: string;
        public WMSPalletId: string;
        public InventoryStatus: string;
        public LicensePlate: string;
        public InventSiteId: string;
        public InventLocationId: string;
        public ConfigId: string;
        public InventSerialId: string;
        public InventSizeId: string;
        public InventColorId: string;
        public InventStyleId: string;
        public IsCommitted: boolean;
        public Message: string;
        public Guid: string;
        public DeliveryMethod: string;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.OrderId = odataObject.OrderId;
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.ItemName = odataObject.ItemName;
          this.InventDimId = odataObject.InventDimId;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.PurchaseReceivedNow = (odataObject.PurchaseReceivedNow != null) ? parseFloat(odataObject.PurchaseReceivedNow) : undefined;
          this.InventBatchId = odataObject.InventBatchId;
          this.WMSLocationId = odataObject.WMSLocationId;
          this.WMSPalletId = odataObject.WMSPalletId;
          this.InventoryStatus = odataObject.InventoryStatus;
          this.LicensePlate = odataObject.LicensePlate;
          this.InventSiteId = odataObject.InventSiteId;
          this.InventLocationId = odataObject.InventLocationId;
          this.ConfigId = odataObject.ConfigId;
          this.InventSerialId = odataObject.InventSerialId;
          this.InventSizeId = odataObject.InventSizeId;
          this.InventColorId = odataObject.InventColorId;
          this.InventStyleId = odataObject.InventStyleId;
          this.IsCommitted = odataObject.IsCommitted;
          this.Message = odataObject.Message;
          this.Guid = odataObject.Guid;
          this.DeliveryMethod = odataObject.DeliveryMethod;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Affiliation entity class.
     */
    export class AffiliationClass implements Affiliation {
        public RecordId: number;
        public AffiliationTypeValue: number;
        public Description: string;
        public Name: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.AffiliationTypeValue = odataObject.AffiliationTypeValue;
          this.Description = odataObject.Description;
          this.Name = odataObject.Name;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryInboundOutboundDocumentLinesSummary entity class.
     */
    export class InventoryInboundOutboundDocumentLinesSummaryClass implements InventoryInboundOutboundDocumentLinesSummary {
        public InProgressQuantity: number;
        public TotalLineNumber: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.InProgressQuantity = (odataObject.InProgressQuantity != null) ? parseFloat(odataObject.InProgressQuantity) : undefined;
          this.TotalLineNumber = odataObject.TotalLineNumber;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSerialNumberLinesSummary entity class.
     */
    export class InventoryDocumentSerialNumberLinesSummaryClass implements InventoryDocumentSerialNumberLinesSummary {
        public RegisteringQuantity: number;
        public RegisteredQuantity: number;
        public TotalLineNumber: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RegisteringQuantity = (odataObject.RegisteringQuantity != null) ? parseFloat(odataObject.RegisteringQuantity) : undefined;
          this.RegisteredQuantity = (odataObject.RegisteredQuantity != null) ? parseFloat(odataObject.RegisteredQuantity) : undefined;
          this.TotalLineNumber = odataObject.TotalLineNumber;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryInboundOutboundDocumentLine entity class.
     */
    export class InventoryInboundOutboundDocumentLineClass implements InventoryInboundOutboundDocumentLine {
        public WorkDocumentId: string;
        public LineId: string;
        public SourceDocumentRecordId: number;
        public SourceDocumentLineRecordId: number;
        public SourceDocumentTypeValue: number;
        public QuantityOrdered: number;
        public QuantityShipped: number;
        public QuantityReceived: number;
        public QuantityCancelled: number;
        public QuantityToUpdate: number;
        public LocationId: string;
        public ItemId: string;
        public ProductId: number;
        public ItemName: string;
        public ItemPrimaryImageUrl: string;
        public IsLocationActive: boolean;
        public IsLocationAllowBlankReceiptEnabled: boolean;
        public IsLocationBlankIssueAllowed: boolean;
        public ProductDimensions: Entities.ProductDimension[];
        public Note: string;
        public OperationResultMessage: string;
        public IsCloseLine: boolean;
        public SourceDocumentLine: Entities.InventoryInboundOutboundSourceDocumentLine;
        public SerialNumberLines: Entities.InventoryDocumentSerialNumberLine[];
        public LongVersion: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.WorkDocumentId = odataObject.WorkDocumentId;
          this.LineId = odataObject.LineId;
          this.SourceDocumentRecordId = (odataObject.SourceDocumentRecordId != null) ? parseInt(odataObject.SourceDocumentRecordId, 10) : undefined;
          this.SourceDocumentLineRecordId = (odataObject.SourceDocumentLineRecordId != null) ? parseInt(odataObject.SourceDocumentLineRecordId, 10) : undefined;
          this.SourceDocumentTypeValue = odataObject.SourceDocumentTypeValue;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
          this.QuantityCancelled = (odataObject.QuantityCancelled != null) ? parseFloat(odataObject.QuantityCancelled) : undefined;
          this.QuantityToUpdate = (odataObject.QuantityToUpdate != null) ? parseFloat(odataObject.QuantityToUpdate) : undefined;
          this.LocationId = odataObject.LocationId;
          this.ItemId = odataObject.ItemId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ItemName = odataObject.ItemName;
          this.ItemPrimaryImageUrl = odataObject.ItemPrimaryImageUrl;
          this.IsLocationActive = odataObject.IsLocationActive;
          this.IsLocationAllowBlankReceiptEnabled = odataObject.IsLocationAllowBlankReceiptEnabled;
          this.IsLocationBlankIssueAllowed = odataObject.IsLocationBlankIssueAllowed;
          this.ProductDimensions = undefined;
          if (odataObject.ProductDimensions) {
              this.ProductDimensions = [];
              for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                  if (odataObject.ProductDimensions[i] != null) {
                      if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductDimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i])
                          }
                      } else {
                          this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                      }
                  } else {
                      this.ProductDimensions[i] = undefined;
                  }
              }
          }
          this.Note = odataObject.Note;
          this.OperationResultMessage = odataObject.OperationResultMessage;
          this.IsCloseLine = odataObject.IsCloseLine;
          if (odataObject.SourceDocumentLine == null) {
              this.SourceDocumentLine = undefined;
          } else if (odataObject.SourceDocumentLine['@odata.type'] == null) {
              this.SourceDocumentLine = new InventoryInboundOutboundSourceDocumentLineClass(odataObject.SourceDocumentLine);
          } else {
              var className: string = odataObject.SourceDocumentLine['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SourceDocumentLine = new Commerce.Proxy.Entities[className](odataObject.SourceDocumentLine)
              }
          }

    
          this.SerialNumberLines = undefined;
          if (odataObject.SerialNumberLines) {
              this.SerialNumberLines = [];
              for (var i = 0; i < odataObject.SerialNumberLines.length; i++) {
                  if (odataObject.SerialNumberLines[i] != null) {
                      if (odataObject.SerialNumberLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.SerialNumberLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SerialNumberLines[i] = new Commerce.Proxy.Entities[className](odataObject.SerialNumberLines[i])
                          }
                      } else {
                          this.SerialNumberLines[i] = new InventoryDocumentSerialNumberLineClass(odataObject.SerialNumberLines[i]);
                      }
                  } else {
                      this.SerialNumberLines[i] = undefined;
                  }
              }
          }
          this.LongVersion = (odataObject.LongVersion != null) ? parseInt(odataObject.LongVersion, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryInboundOutboundSourceDocument entity class.
     */
    export class InventoryInboundOutboundSourceDocumentClass implements InventoryInboundOutboundSourceDocument {
        public RecordId: number;
        public DocumentTypeValue: number;
        public DocumentId: string;
        public StatusValue: number;
        public ReceiveDate: Date;
        public ShipDate: Date;
        public Sender: string;
        public Receiver: string;
        public SenderDetails: string;
        public ReceiverDetails: string;
        public DeliveryMode: string;
        public TotalQuantityOrdered: number;
        public TotalQuantityShipped: number;
        public TotalQuantityReceived: number;
        public TotalQuantityCancelled: number;
        public DataAreaId: string;
        public Note: string;
        public TotalLines: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.DocumentTypeValue = odataObject.DocumentTypeValue;
          this.DocumentId = odataObject.DocumentId;
          this.StatusValue = odataObject.StatusValue;
          this.ReceiveDate = (odataObject.ReceiveDate instanceof Date) ? odataObject.ReceiveDate
            : (odataObject.ReceiveDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ReceiveDate, "Edm.DateTimeOffset", false) : undefined;
          this.ShipDate = (odataObject.ShipDate instanceof Date) ? odataObject.ShipDate
            : (odataObject.ShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShipDate, "Edm.DateTimeOffset", false) : undefined;
          this.Sender = odataObject.Sender;
          this.Receiver = odataObject.Receiver;
          this.SenderDetails = odataObject.SenderDetails;
          this.ReceiverDetails = odataObject.ReceiverDetails;
          this.DeliveryMode = odataObject.DeliveryMode;
          this.TotalQuantityOrdered = (odataObject.TotalQuantityOrdered != null) ? parseFloat(odataObject.TotalQuantityOrdered) : undefined;
          this.TotalQuantityShipped = (odataObject.TotalQuantityShipped != null) ? parseFloat(odataObject.TotalQuantityShipped) : undefined;
          this.TotalQuantityReceived = (odataObject.TotalQuantityReceived != null) ? parseFloat(odataObject.TotalQuantityReceived) : undefined;
          this.TotalQuantityCancelled = (odataObject.TotalQuantityCancelled != null) ? parseFloat(odataObject.TotalQuantityCancelled) : undefined;
          this.DataAreaId = odataObject.DataAreaId;
          this.Note = odataObject.Note;
          this.TotalLines = (odataObject.TotalLines != null) ? parseInt(odataObject.TotalLines, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryInboundOutboundSourceDocumentLine entity class.
     */
    export class InventoryInboundOutboundSourceDocumentLineClass implements InventoryInboundOutboundSourceDocumentLine {
        public DocumentRecordId: number;
        public DocumentTypeValue: number;
        public RecordId: number;
        public LineNumber: number;
        public ItemId: string;
        public ProductId: number;
        public QuantityOrdered: number;
        public QuantityShipped: number;
        public QuantityReceived: number;
        public QuantityCancelled: number;
        public LocationId: string;
        public OverDeliveryPercentage: number;
        public UnderDeliveryPercentage: number;
        public UnitId: string;
        public Receiver: string;
        public DataAreaId: string;
        public Note: string;
        public DocumentId: string;
        public ItemName: string;
        public ItemPrimaryImageUrl: string;
        public IsLocationActive: boolean;
        public IsLocationAllowBlankReceiptEnabled: boolean;
        public IsLocationBlankIssueAllowed: boolean;
        public HasSerialNumber: boolean;
        public IsSerialNumberBlankReceiptAllowed: boolean;
        public IsSerialNumberDuplicateCheckEnabled: boolean;
        public ProductDimensions: Entities.ProductDimension[];
        public SerialNumberLines: Entities.InventoryDocumentSourceSerialNumberLine[];
        public StatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentRecordId = (odataObject.DocumentRecordId != null) ? parseInt(odataObject.DocumentRecordId, 10) : undefined;
          this.DocumentTypeValue = odataObject.DocumentTypeValue;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.LineNumber = odataObject.LineNumber;
          this.ItemId = odataObject.ItemId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.QuantityReceived = (odataObject.QuantityReceived != null) ? parseFloat(odataObject.QuantityReceived) : undefined;
          this.QuantityCancelled = (odataObject.QuantityCancelled != null) ? parseFloat(odataObject.QuantityCancelled) : undefined;
          this.LocationId = odataObject.LocationId;
          this.OverDeliveryPercentage = (odataObject.OverDeliveryPercentage != null) ? parseFloat(odataObject.OverDeliveryPercentage) : undefined;
          this.UnderDeliveryPercentage = (odataObject.UnderDeliveryPercentage != null) ? parseFloat(odataObject.UnderDeliveryPercentage) : undefined;
          this.UnitId = odataObject.UnitId;
          this.Receiver = odataObject.Receiver;
          this.DataAreaId = odataObject.DataAreaId;
          this.Note = odataObject.Note;
          this.DocumentId = odataObject.DocumentId;
          this.ItemName = odataObject.ItemName;
          this.ItemPrimaryImageUrl = odataObject.ItemPrimaryImageUrl;
          this.IsLocationActive = odataObject.IsLocationActive;
          this.IsLocationAllowBlankReceiptEnabled = odataObject.IsLocationAllowBlankReceiptEnabled;
          this.IsLocationBlankIssueAllowed = odataObject.IsLocationBlankIssueAllowed;
          this.HasSerialNumber = odataObject.HasSerialNumber;
          this.IsSerialNumberBlankReceiptAllowed = odataObject.IsSerialNumberBlankReceiptAllowed;
          this.IsSerialNumberDuplicateCheckEnabled = odataObject.IsSerialNumberDuplicateCheckEnabled;
          this.ProductDimensions = undefined;
          if (odataObject.ProductDimensions) {
              this.ProductDimensions = [];
              for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                  if (odataObject.ProductDimensions[i] != null) {
                      if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductDimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i])
                          }
                      } else {
                          this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                      }
                  } else {
                      this.ProductDimensions[i] = undefined;
                  }
              }
          }
          this.SerialNumberLines = undefined;
          if (odataObject.SerialNumberLines) {
              this.SerialNumberLines = [];
              for (var i = 0; i < odataObject.SerialNumberLines.length; i++) {
                  if (odataObject.SerialNumberLines[i] != null) {
                      if (odataObject.SerialNumberLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.SerialNumberLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SerialNumberLines[i] = new Commerce.Proxy.Entities[className](odataObject.SerialNumberLines[i])
                          }
                      } else {
                          this.SerialNumberLines[i] = new InventoryDocumentSourceSerialNumberLineClass(odataObject.SerialNumberLines[i]);
                      }
                  } else {
                      this.SerialNumberLines[i] = undefined;
                  }
              }
          }
          this.StatusValue = odataObject.StatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentLineFilterCriteria entity class.
     */
    export class InventoryDocumentLineFilterCriteriaClass implements InventoryDocumentLineFilterCriteria {
        public ProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentUpdateLinesAction entity class.
     */
    export class InventoryDocumentUpdateLinesActionClass implements InventoryDocumentUpdateLinesAction {
        public Quantity: number;
        public ActionTypeValue: number;
        public LocationId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.ActionTypeValue = odataObject.ActionTypeValue;
          this.LocationId = odataObject.LocationId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentLineOperationResultSettings entity class.
     */
    export class InventoryDocumentLineOperationResultSettingsClass implements InventoryDocumentLineOperationResultSettings {
        public ModeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ModeValue = odataObject.ModeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentLineSearchCriteria entity class.
     */
    export class InventoryDocumentLineSearchCriteriaClass implements InventoryDocumentLineSearchCriteria {
        public SourceDocumentId: string;
        public SourceDocumentTypeValue: number;
        public WorkDocumentId: string;
        public AvailableSerializedLineOnly: boolean;
        public DocumentLineIds: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SourceDocumentId = odataObject.SourceDocumentId;
          this.SourceDocumentTypeValue = odataObject.SourceDocumentTypeValue;
          this.WorkDocumentId = odataObject.WorkDocumentId;
          this.AvailableSerializedLineOnly = odataObject.AvailableSerializedLineOnly;
          this.DocumentLineIds = undefined;
          if (odataObject.DocumentLineIds) {
              this.DocumentLineIds = [];
              for (var i = 0; i < odataObject.DocumentLineIds.length; i++) {
                  if (odataObject.DocumentLineIds[i] != null) {
                      this.DocumentLineIds[i] = odataObject.DocumentLineIds[i];              } else {
                      this.DocumentLineIds[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSearchCriteria entity class.
     */
    export class InventoryDocumentSearchCriteriaClass implements InventoryDocumentSearchCriteria {
        public DocumentId: string;
        public DocumentStateValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentId = odataObject.DocumentId;
          this.DocumentStateValue = odataObject.DocumentStateValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSerialNumberLineSearchCriteria entity class.
     */
    export class InventoryDocumentSerialNumberLineSearchCriteriaClass implements InventoryDocumentSerialNumberLineSearchCriteria {
        public DocumentLineId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentLineId = odataObject.DocumentLineId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSerialNumberLineUpdateAction entity class.
     */
    export class InventoryDocumentSerialNumberLineUpdateActionClass implements InventoryDocumentSerialNumberLineUpdateAction {
        public DocumentLineId: string;
        public LineId: string;
        public SerialNumber: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentLineId = odataObject.DocumentLineId;
          this.LineId = odataObject.LineId;
          this.SerialNumber = odataObject.SerialNumber;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSerialNumberLineResetAction entity class.
     */
    export class InventoryDocumentSerialNumberLineResetActionClass implements InventoryDocumentSerialNumberLineResetAction {
        public DocumentLineId: string;
        public LineId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentLineId = odataObject.DocumentLineId;
          this.LineId = odataObject.LineId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult entity class.
     */
    export class InventoryInboundOutboundDocumentUpdateLinesByCriteriaResultClass implements InventoryInboundOutboundDocumentUpdateLinesByCriteriaResult {
        public UpdatedLines: Entities.InventoryInboundOutboundDocumentLine[];
        public TotalLinesUpdated: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.UpdatedLines = undefined;
          if (odataObject.UpdatedLines) {
              this.UpdatedLines = [];
              for (var i = 0; i < odataObject.UpdatedLines.length; i++) {
                  if (odataObject.UpdatedLines[i] != null) {
                      if (odataObject.UpdatedLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.UpdatedLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.UpdatedLines[i] = new Commerce.Proxy.Entities[className](odataObject.UpdatedLines[i])
                          }
                      } else {
                          this.UpdatedLines[i] = new InventoryInboundOutboundDocumentLineClass(odataObject.UpdatedLines[i]);
                      }
                  } else {
                      this.UpdatedLines[i] = undefined;
                  }
              }
          }
          this.TotalLinesUpdated = odataObject.TotalLinesUpdated;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * WarehouseLocationSearchCriteria entity class.
     */
    export class WarehouseLocationSearchCriteriaClass implements WarehouseLocationSearchCriteria {
        public WarehouseIds: string[];
        public IsLocationProfileRequired: boolean;
        public SearchText: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.WarehouseIds = undefined;
          if (odataObject.WarehouseIds) {
              this.WarehouseIds = [];
              for (var i = 0; i < odataObject.WarehouseIds.length; i++) {
                  if (odataObject.WarehouseIds[i] != null) {
                      this.WarehouseIds[i] = odataObject.WarehouseIds[i];              } else {
                      this.WarehouseIds[i] = undefined;
                  }
              }
          }
          this.IsLocationProfileRequired = odataObject.IsLocationProfileRequired;
          this.SearchText = odataObject.SearchText;
        }
    }
    
    /**
     * InventoryDocumentSerialNumberLine entity class.
     */
    export class InventoryDocumentSerialNumberLineClass implements InventoryDocumentSerialNumberLine {
        public WorkDocumentId: string;
        public WorkDocumentLineId: string;
        public SourceLineId: string;
        public LineId: string;
        public Quantity: number;
        public SerialNumber: string;
        public StatusValue: number;
        public ProductId: number;
        public ModifiedDateTime: Date;
        public SourceLine: Entities.InventoryDocumentSourceSerialNumberLine;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.WorkDocumentId = odataObject.WorkDocumentId;
          this.WorkDocumentLineId = odataObject.WorkDocumentLineId;
          this.SourceLineId = odataObject.SourceLineId;
          this.LineId = odataObject.LineId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.SerialNumber = odataObject.SerialNumber;
          this.StatusValue = odataObject.StatusValue;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
            : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
          if (odataObject.SourceLine == null) {
              this.SourceLine = undefined;
          } else if (odataObject.SourceLine['@odata.type'] == null) {
              this.SourceLine = new InventoryDocumentSourceSerialNumberLineClass(odataObject.SourceLine);
          } else {
              var className: string = odataObject.SourceLine['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SourceLine = new Commerce.Proxy.Entities[className](odataObject.SourceLine)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentValidationCategoryResultsSummary entity class.
     */
    export class InventoryDocumentValidationCategoryResultsSummaryClass implements InventoryDocumentValidationCategoryResultsSummary {
        public CategoryName: string;
        public SeverityValue: number;
        public TotalValidationResultCount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CategoryName = odataObject.CategoryName;
          this.SeverityValue = odataObject.SeverityValue;
          this.TotalValidationResultCount = odataObject.TotalValidationResultCount;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentValidationResultSummary entity class.
     */
    export class InventoryDocumentValidationResultSummaryClass implements InventoryDocumentValidationResultSummary {
        public DocumentId: string;
        public DocumentVersion: number;
        public CategorySummaries: Entities.InventoryDocumentValidationCategoryResultsSummary[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentId = odataObject.DocumentId;
          this.DocumentVersion = (odataObject.DocumentVersion != null) ? parseInt(odataObject.DocumentVersion, 10) : undefined;
          this.CategorySummaries = undefined;
          if (odataObject.CategorySummaries) {
              this.CategorySummaries = [];
              for (var i = 0; i < odataObject.CategorySummaries.length; i++) {
                  if (odataObject.CategorySummaries[i] != null) {
                      if (odataObject.CategorySummaries[i]['@odata.type'] != null) {
                          var className: string = odataObject.CategorySummaries[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CategorySummaries[i] = new Commerce.Proxy.Entities[className](odataObject.CategorySummaries[i])
                          }
                      } else {
                          this.CategorySummaries[i] = new InventoryDocumentValidationCategoryResultsSummaryClass(odataObject.CategorySummaries[i]);
                      }
                  } else {
                      this.CategorySummaries[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentValidationResultLine entity class.
     */
    export class InventoryDocumentValidationResultLineClass implements InventoryDocumentValidationResultLine {
        public DocumentValidationResultLineId: string;
        public CategoryName: string;
        public SeverityValue: number;
        public ErrorCode: number;
        public ErrorMessage: string;
        public DocumentId: string;
        public DocumentLongVersion: number;
        public DocumentLineId: string;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentValidationResultLineId = odataObject.DocumentValidationResultLineId;
          this.CategoryName = odataObject.CategoryName;
          this.SeverityValue = odataObject.SeverityValue;
          this.ErrorCode = odataObject.ErrorCode;
          this.ErrorMessage = odataObject.ErrorMessage;
          this.DocumentId = odataObject.DocumentId;
          this.DocumentLongVersion = (odataObject.DocumentLongVersion != null) ? parseInt(odataObject.DocumentLongVersion, 10) : undefined;
          this.DocumentLineId = odataObject.DocumentLineId;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentValidationResultSearchCriteria entity class.
     */
    export class InventoryDocumentValidationResultSearchCriteriaClass implements InventoryDocumentValidationResultSearchCriteria {
        public DocumentId: string;
        public DocumentVersion: number;
        public SeverityValue: number;
        public Categories: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DocumentId = odataObject.DocumentId;
          this.DocumentVersion = (odataObject.DocumentVersion != null) ? parseInt(odataObject.DocumentVersion, 10) : undefined;
          this.SeverityValue = odataObject.SeverityValue;
          this.Categories = undefined;
          if (odataObject.Categories) {
              this.Categories = [];
              for (var i = 0; i < odataObject.Categories.length; i++) {
                  if (odataObject.Categories[i] != null) {
                      this.Categories[i] = odataObject.Categories[i];              } else {
                      this.Categories[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductDimension entity class.
     */
    export class ProductDimensionClass implements ProductDimension {
        public DimensionTypeValue: number;
        public DimensionValue: Entities.ProductDimensionValue;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DimensionTypeValue = odataObject.DimensionTypeValue;
          if (odataObject.DimensionValue == null) {
              this.DimensionValue = undefined;
          } else if (odataObject.DimensionValue['@odata.type'] == null) {
              this.DimensionValue = new ProductDimensionValueClass(odataObject.DimensionValue);
          } else {
              var className: string = odataObject.DimensionValue['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DimensionValue = new Commerce.Proxy.Entities[className](odataObject.DimensionValue)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductDimensionValue entity class.
     */
    export class ProductDimensionValueClass implements ProductDimensionValue {
        public RecordId: number;
        public Value: string;
        public DimensionId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Value = odataObject.Value;
          this.DimensionId = odataObject.DimensionId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductDimensionCombination entity class.
     */
    export class ProductDimensionCombinationClass implements ProductDimensionCombination {
        public ProductDimensions: Entities.ProductDimension[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductDimensions = undefined;
          if (odataObject.ProductDimensions) {
              this.ProductDimensions = [];
              for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                  if (odataObject.ProductDimensions[i] != null) {
                      if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductDimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i])
                          }
                      } else {
                          this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                      }
                  } else {
                      this.ProductDimensions[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchRefiner entity class.
     */
    export class SearchRefinerClass implements SearchRefiner {
        public RecordId: number;
        public KeyName: string;
        public DataTypeValue: number;
        public RefinerTypeValue: number;
        public DisplayTemplateValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.KeyName = odataObject.KeyName;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.RefinerTypeValue = odataObject.RefinerTypeValue;
          this.DisplayTemplateValue = odataObject.DisplayTemplateValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchRefinerValue entity class.
     */
    export class SearchRefinerValueClass implements SearchRefinerValue {
        public RefinerRecordId: number;
        public DataTypeValue: number;
        public LeftValueBoundString: string;
        public RightValueBoundString: string;
        public UnitText: string;
        public RowNumber: number;
        public Count: number;
        public LeftValueBoundLocalizedString: string;
        public RightValueBoundLocalizedString: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RefinerRecordId = (odataObject.RefinerRecordId != null) ? parseInt(odataObject.RefinerRecordId, 10) : undefined;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.LeftValueBoundString = odataObject.LeftValueBoundString;
          this.RightValueBoundString = odataObject.RightValueBoundString;
          this.UnitText = odataObject.UnitText;
          this.RowNumber = odataObject.RowNumber;
          this.Count = odataObject.Count;
          this.LeftValueBoundLocalizedString = odataObject.LeftValueBoundLocalizedString;
          this.RightValueBoundLocalizedString = odataObject.RightValueBoundLocalizedString;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductRefiner entity class.
     */
    export class ProductRefinerClass extends SearchRefinerClass implements ProductRefiner {
        public SourceValue: number;
        public Values: Entities.ProductRefinerValue[];
        public IsDimension: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.SourceValue = odataObject.SourceValue;
          this.Values = undefined;
          if (odataObject.Values) {
              this.Values = [];
              for (var i = 0; i < odataObject.Values.length; i++) {
                  if (odataObject.Values[i] != null) {
                      if (odataObject.Values[i]['@odata.type'] != null) {
                          var className: string = odataObject.Values[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Values[i] = new Commerce.Proxy.Entities[className](odataObject.Values[i])
                          }
                      } else {
                          this.Values[i] = new ProductRefinerValueClass(odataObject.Values[i]);
                      }
                  } else {
                      this.Values[i] = undefined;
                  }
              }
          }
          this.IsDimension = odataObject.IsDimension; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductRefiner";
            
        }
    }
    
    /**
     * ProductRefinerValue entity class.
     */
    export class ProductRefinerValueClass extends SearchRefinerValueClass implements ProductRefinerValue {
        public RefinerSourceValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RefinerSourceValue = odataObject.RefinerSourceValue; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductRefinerValue";
            
        }
    }
    
    /**
     * ClientBookRefiner entity class.
     */
    export class ClientBookRefinerClass extends SearchRefinerClass implements ClientBookRefiner {
        public SourceValue: number;
        public Values: Entities.ClientBookRefinerValue[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.SourceValue = odataObject.SourceValue;
          this.Values = undefined;
          if (odataObject.Values) {
              this.Values = [];
              for (var i = 0; i < odataObject.Values.length; i++) {
                  if (odataObject.Values[i] != null) {
                      if (odataObject.Values[i]['@odata.type'] != null) {
                          var className: string = odataObject.Values[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Values[i] = new Commerce.Proxy.Entities[className](odataObject.Values[i])
                          }
                      } else {
                          this.Values[i] = new ClientBookRefinerValueClass(odataObject.Values[i]);
                      }
                  } else {
                      this.Values[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ClientBookRefiner";
            
        }
    }
    
    /**
     * ClientBookRefinerValue entity class.
     */
    export class ClientBookRefinerValueClass extends SearchRefinerValueClass implements ClientBookRefinerValue {
        public RefinerSourceValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RefinerSourceValue = odataObject.RefinerSourceValue; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ClientBookRefinerValue";
            
        }
    }
    
    /**
     * ProductRelationType entity class.
     */
    export class ProductRelationTypeClass implements ProductRelationType {
        public Name: string;
        public RecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ComponentInSlotRelation entity class.
     */
    export class ComponentInSlotRelationClass implements ComponentInSlotRelation {
        public ComponentId: number;
        public SlotId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ComponentId = (odataObject.ComponentId != null) ? parseInt(odataObject.ComponentId, 10) : undefined;
          this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductRules entity class.
     */
    export class ProductRulesClass implements ProductRules {
        public HasLinkedProducts: boolean;
        public IsSerialized: boolean;
        public IsActiveInSalesProcess: boolean;
        public IsBlocked: boolean;
        public DateOfBlocking: Date;
        public DateToActivate: Date;
        public DateToBlock: Date;
        public DefaultUnitOfMeasure: string;
        public PriceKeyingRequirementValue: number;
        public QuantityKeyingRequirementValue: number;
        public MustKeyInComment: boolean;
        public CanQuantityBecomeNegative: boolean;
        public MustScaleItem: boolean;
        public CanPriceBeZero: boolean;
        public ProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HasLinkedProducts = odataObject.HasLinkedProducts;
          this.IsSerialized = odataObject.IsSerialized;
          this.IsActiveInSalesProcess = odataObject.IsActiveInSalesProcess;
          this.IsBlocked = odataObject.IsBlocked;
          this.DateOfBlocking = (odataObject.DateOfBlocking instanceof Date) ? odataObject.DateOfBlocking
            : (odataObject.DateOfBlocking != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateOfBlocking, "Edm.DateTimeOffset", false) : undefined;
          this.DateToActivate = (odataObject.DateToActivate instanceof Date) ? odataObject.DateToActivate
            : (odataObject.DateToActivate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToActivate, "Edm.DateTimeOffset", false) : undefined;
          this.DateToBlock = (odataObject.DateToBlock instanceof Date) ? odataObject.DateToBlock
            : (odataObject.DateToBlock != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateToBlock, "Edm.DateTimeOffset", false) : undefined;
          this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
          this.PriceKeyingRequirementValue = odataObject.PriceKeyingRequirementValue;
          this.QuantityKeyingRequirementValue = odataObject.QuantityKeyingRequirementValue;
          this.MustKeyInComment = odataObject.MustKeyInComment;
          this.CanQuantityBecomeNegative = odataObject.CanQuantityBecomeNegative;
          this.MustScaleItem = odataObject.MustScaleItem;
          this.CanPriceBeZero = odataObject.CanPriceBeZero;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LocalizedString entity class.
     */
    export class LocalizedStringClass implements LocalizedString {
        public RecordId: number;
        public LanguageId: string;
        public TextId: number;
        public Text: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.LanguageId = odataObject.LanguageId;
          this.TextId = odataObject.TextId;
          this.Text = odataObject.Text;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyCard entity class.
     */
    export class LoyaltyCardClass implements LoyaltyCard {
        public CardNumber: string;
        public CardTenderTypeValue: number;
        public CustomerAccount: string;
        public LoyaltyGroups: Entities.LoyaltyGroup[];
        public RewardPoints: Entities.LoyaltyRewardPoint[];
        public LoyaltyEnrollmentDate: Date;
        public LoyaltyEnrollmentDateLocal: Date;
        public LoyaltyEnrollmentTime: number;
        public LoyaltyEnrollmentTimeLocal: number;
        public OmOperatingUnitId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CardNumber = odataObject.CardNumber;
          this.CardTenderTypeValue = odataObject.CardTenderTypeValue;
          this.CustomerAccount = odataObject.CustomerAccount;
          this.LoyaltyGroups = undefined;
          if (odataObject.LoyaltyGroups) {
              this.LoyaltyGroups = [];
              for (var i = 0; i < odataObject.LoyaltyGroups.length; i++) {
                  if (odataObject.LoyaltyGroups[i] != null) {
                      if (odataObject.LoyaltyGroups[i]['@odata.type'] != null) {
                          var className: string = odataObject.LoyaltyGroups[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LoyaltyGroups[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyGroups[i])
                          }
                      } else {
                          this.LoyaltyGroups[i] = new LoyaltyGroupClass(odataObject.LoyaltyGroups[i]);
                      }
                  } else {
                      this.LoyaltyGroups[i] = undefined;
                  }
              }
          }
          this.RewardPoints = undefined;
          if (odataObject.RewardPoints) {
              this.RewardPoints = [];
              for (var i = 0; i < odataObject.RewardPoints.length; i++) {
                  if (odataObject.RewardPoints[i] != null) {
                      if (odataObject.RewardPoints[i]['@odata.type'] != null) {
                          var className: string = odataObject.RewardPoints[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RewardPoints[i] = new Commerce.Proxy.Entities[className](odataObject.RewardPoints[i])
                          }
                      } else {
                          this.RewardPoints[i] = new LoyaltyRewardPointClass(odataObject.RewardPoints[i]);
                      }
                  } else {
                      this.RewardPoints[i] = undefined;
                  }
              }
          }
          this.LoyaltyEnrollmentDate = (odataObject.LoyaltyEnrollmentDate instanceof Date) ? odataObject.LoyaltyEnrollmentDate
            : (odataObject.LoyaltyEnrollmentDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LoyaltyEnrollmentDate, "Edm.DateTimeOffset", false) : undefined;
          this.LoyaltyEnrollmentDateLocal = (odataObject.LoyaltyEnrollmentDateLocal instanceof Date) ? odataObject.LoyaltyEnrollmentDateLocal
            : (odataObject.LoyaltyEnrollmentDateLocal != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LoyaltyEnrollmentDateLocal, "Edm.DateTimeOffset", false) : undefined;
          this.LoyaltyEnrollmentTime = odataObject.LoyaltyEnrollmentTime;
          this.LoyaltyEnrollmentTimeLocal = odataObject.LoyaltyEnrollmentTimeLocal;
          this.OmOperatingUnitId = (odataObject.OmOperatingUnitId != null) ? parseInt(odataObject.OmOperatingUnitId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductComponent entity class.
     */
    export class ProductComponentClass implements ProductComponent {
        public ProductId: number;
        public SlotId: number;
        public Product: Entities.SimpleProduct;
        public AdditionalChargeForComponent: number;
        public Behavior: Entities.ProductBehavior;
        public Description: string;
        public Dimensions: Entities.ProductDimension[];
        public ItemId: string;
        public Name: string;
        public ProductTypeValue: number;
        public Quantity: number;
        public UnitOfMeasure: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined;
          if (odataObject.Product == null) {
              this.Product = undefined;
          } else if (odataObject.Product['@odata.type'] == null) {
              this.Product = new SimpleProductClass(odataObject.Product);
          } else {
              var className: string = odataObject.Product['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Product = new Commerce.Proxy.Entities[className](odataObject.Product)
              }
          }

    
          this.AdditionalChargeForComponent = (odataObject.AdditionalChargeForComponent != null) ? parseFloat(odataObject.AdditionalChargeForComponent) : undefined;
          if (odataObject.Behavior == null) {
              this.Behavior = undefined;
          } else if (odataObject.Behavior['@odata.type'] == null) {
              this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
          } else {
              var className: string = odataObject.Behavior['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior)
              }
          }

    
          this.Description = odataObject.Description;
          this.Dimensions = undefined;
          if (odataObject.Dimensions) {
              this.Dimensions = [];
              for (var i = 0; i < odataObject.Dimensions.length; i++) {
                  if (odataObject.Dimensions[i] != null) {
                      if (odataObject.Dimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.Dimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i])
                          }
                      } else {
                          this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                      }
                  } else {
                      this.Dimensions[i] = undefined;
                  }
              }
          }
          this.ItemId = odataObject.ItemId;
          this.Name = odataObject.Name;
          this.ProductTypeValue = odataObject.ProductTypeValue;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SimpleProduct entity class.
     */
    export class SimpleProductClass implements SimpleProduct {
        public RecordId: number;
        public ItemId: string;
        public Name: string;
        public Description: string;
        public ProductTypeValue: number;
        public DefaultUnitOfMeasure: string;
        public BasePrice: number;
        public Price: number;
        public AdjustedPrice: number;
        public MasterProductId: number;
        public Components: Entities.ProductComponent[];
        public Dimensions: Entities.ProductDimension[];
        public Behavior: Entities.ProductBehavior;
        public LinkedProducts: Entities.SimpleLinkedProduct[];
        public PrimaryImageUrl: string;
        public ItemTypeValue: number;
        public ItemServiceTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.ProductTypeValue = odataObject.ProductTypeValue;
          this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
          this.Components = undefined;
          if (odataObject.Components) {
              this.Components = [];
              for (var i = 0; i < odataObject.Components.length; i++) {
                  if (odataObject.Components[i] != null) {
                      if (odataObject.Components[i]['@odata.type'] != null) {
                          var className: string = odataObject.Components[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Components[i] = new Commerce.Proxy.Entities[className](odataObject.Components[i])
                          }
                      } else {
                          this.Components[i] = new ProductComponentClass(odataObject.Components[i]);
                      }
                  } else {
                      this.Components[i] = undefined;
                  }
              }
          }
          this.Dimensions = undefined;
          if (odataObject.Dimensions) {
              this.Dimensions = [];
              for (var i = 0; i < odataObject.Dimensions.length; i++) {
                  if (odataObject.Dimensions[i] != null) {
                      if (odataObject.Dimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.Dimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i])
                          }
                      } else {
                          this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                      }
                  } else {
                      this.Dimensions[i] = undefined;
                  }
              }
          }
          if (odataObject.Behavior == null) {
              this.Behavior = undefined;
          } else if (odataObject.Behavior['@odata.type'] == null) {
              this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
          } else {
              var className: string = odataObject.Behavior['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior)
              }
          }

    
          this.LinkedProducts = undefined;
          if (odataObject.LinkedProducts) {
              this.LinkedProducts = [];
              for (var i = 0; i < odataObject.LinkedProducts.length; i++) {
                  if (odataObject.LinkedProducts[i] != null) {
                      if (odataObject.LinkedProducts[i]['@odata.type'] != null) {
                          var className: string = odataObject.LinkedProducts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LinkedProducts[i] = new Commerce.Proxy.Entities[className](odataObject.LinkedProducts[i])
                          }
                      } else {
                          this.LinkedProducts[i] = new SimpleLinkedProductClass(odataObject.LinkedProducts[i]);
                      }
                  } else {
                      this.LinkedProducts[i] = undefined;
                  }
              }
          }
          this.PrimaryImageUrl = odataObject.PrimaryImageUrl;
          this.ItemTypeValue = odataObject.ItemTypeValue;
          this.ItemServiceTypeValue = odataObject.ItemServiceTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductBehavior entity class.
     */
    export class ProductBehaviorClass implements ProductBehavior {
        public HasSerialNumber: boolean;
        public IsDiscountAllowed: boolean;
        public IsManualDiscountAllowed: boolean;
        public IsKitDisassemblyAllowed: boolean;
        public IsNegativeQuantityAllowed: boolean;
        public IsReturnAllowed: boolean;
        public IsSaleAtPhysicalStoresAllowed: boolean;
        public IsZeroSalePriceAllowed: boolean;
        public KeyInPriceValue: number;
        public KeyInQuantityValue: number;
        public MustKeyInComment: boolean;
        public MustPrintIndividualShelfLabelsForVariants: boolean;
        public MustPromptForSerialNumberOnlyAtSale: boolean;
        public MustWeighProductAtSale: boolean;
        public ValidFromDateForSaleAtPhysicalStores: Date;
        public ValidToDateForSaleAtPhysicalStores: Date;
        public IsStorageDimensionGroupLocationActive: boolean;
        public IsStorageDimensionGroupLocationAllowBlankReceiptEnabled: boolean;
        public AllowNegativePhysicalInventory: boolean;
        public IsBlankSerialNumberAllowed: boolean;
        public IsBlankSerialNumberReceiptAllowed: boolean;
        public IsSerialNumberControlEnabled: boolean;
        public IsStorageDimensionGroupLocationBlankIssueAllowed: boolean;
        public IsSerialNumberRequired: boolean;
        public DefaultQuantity: number;
        public MaximumQuantity: number;
        public MinimumQuantity: number;
        public MultipleOfQuantity: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HasSerialNumber = odataObject.HasSerialNumber;
          this.IsDiscountAllowed = odataObject.IsDiscountAllowed;
          this.IsManualDiscountAllowed = odataObject.IsManualDiscountAllowed;
          this.IsKitDisassemblyAllowed = odataObject.IsKitDisassemblyAllowed;
          this.IsNegativeQuantityAllowed = odataObject.IsNegativeQuantityAllowed;
          this.IsReturnAllowed = odataObject.IsReturnAllowed;
          this.IsSaleAtPhysicalStoresAllowed = odataObject.IsSaleAtPhysicalStoresAllowed;
          this.IsZeroSalePriceAllowed = odataObject.IsZeroSalePriceAllowed;
          this.KeyInPriceValue = odataObject.KeyInPriceValue;
          this.KeyInQuantityValue = odataObject.KeyInQuantityValue;
          this.MustKeyInComment = odataObject.MustKeyInComment;
          this.MustPrintIndividualShelfLabelsForVariants = odataObject.MustPrintIndividualShelfLabelsForVariants;
          this.MustPromptForSerialNumberOnlyAtSale = odataObject.MustPromptForSerialNumberOnlyAtSale;
          this.MustWeighProductAtSale = odataObject.MustWeighProductAtSale;
          this.ValidFromDateForSaleAtPhysicalStores = (odataObject.ValidFromDateForSaleAtPhysicalStores instanceof Date) ? odataObject.ValidFromDateForSaleAtPhysicalStores
            : (odataObject.ValidFromDateForSaleAtPhysicalStores != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFromDateForSaleAtPhysicalStores, "Edm.DateTimeOffset", false) : undefined;
          this.ValidToDateForSaleAtPhysicalStores = (odataObject.ValidToDateForSaleAtPhysicalStores instanceof Date) ? odataObject.ValidToDateForSaleAtPhysicalStores
            : (odataObject.ValidToDateForSaleAtPhysicalStores != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidToDateForSaleAtPhysicalStores, "Edm.DateTimeOffset", false) : undefined;
          this.IsStorageDimensionGroupLocationActive = odataObject.IsStorageDimensionGroupLocationActive;
          this.IsStorageDimensionGroupLocationAllowBlankReceiptEnabled = odataObject.IsStorageDimensionGroupLocationAllowBlankReceiptEnabled;
          this.AllowNegativePhysicalInventory = odataObject.AllowNegativePhysicalInventory;
          this.IsBlankSerialNumberAllowed = odataObject.IsBlankSerialNumberAllowed;
          this.IsBlankSerialNumberReceiptAllowed = odataObject.IsBlankSerialNumberReceiptAllowed;
          this.IsSerialNumberControlEnabled = odataObject.IsSerialNumberControlEnabled;
          this.IsStorageDimensionGroupLocationBlankIssueAllowed = odataObject.IsStorageDimensionGroupLocationBlankIssueAllowed;
          this.IsSerialNumberRequired = odataObject.IsSerialNumberRequired;
          this.DefaultQuantity = (odataObject.DefaultQuantity != null) ? parseFloat(odataObject.DefaultQuantity) : undefined;
          this.MaximumQuantity = (odataObject.MaximumQuantity != null) ? parseFloat(odataObject.MaximumQuantity) : undefined;
          this.MinimumQuantity = (odataObject.MinimumQuantity != null) ? parseFloat(odataObject.MinimumQuantity) : undefined;
          this.MultipleOfQuantity = (odataObject.MultipleOfQuantity != null) ? parseFloat(odataObject.MultipleOfQuantity) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SimpleLinkedProduct entity class.
     */
    export class SimpleLinkedProductClass implements SimpleLinkedProduct {
        public RecordId: number;
        public ItemId: string;
        public Name: string;
        public Description: string;
        public ProductTypeValue: number;
        public DefaultUnitOfMeasure: string;
        public BasePrice: number;
        public Price: number;
        public AdjustedPrice: number;
        public Quantity: number;
        public Behavior: Entities.ProductBehavior;
        public Dimensions: Entities.ProductDimension[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.ProductTypeValue = odataObject.ProductTypeValue;
          this.DefaultUnitOfMeasure = odataObject.DefaultUnitOfMeasure;
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          if (odataObject.Behavior == null) {
              this.Behavior = undefined;
          } else if (odataObject.Behavior['@odata.type'] == null) {
              this.Behavior = new ProductBehaviorClass(odataObject.Behavior);
          } else {
              var className: string = odataObject.Behavior['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Behavior = new Commerce.Proxy.Entities[className](odataObject.Behavior)
              }
          }

    
          this.Dimensions = undefined;
          if (odataObject.Dimensions) {
              this.Dimensions = [];
              for (var i = 0; i < odataObject.Dimensions.length; i++) {
                  if (odataObject.Dimensions[i] != null) {
                      if (odataObject.Dimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.Dimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i])
                          }
                      } else {
                          this.Dimensions[i] = new ProductDimensionClass(odataObject.Dimensions[i]);
                      }
                  } else {
                      this.Dimensions[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductSearchResult entity class.
     */
    export class ProductSearchResultClass implements ProductSearchResult {
        public ItemId: string;
        public Name: string;
        public Price: number;
        public PrimaryImageUrl: string;
        public RecordId: number;
        public TrackingId: string;
        public AverageRating: number;
        public TotalRatings: number;
        public Description: string;
        public BasePrice: number;
        public DisplayOrder: number;
        public AttributeValues: Entities.AttributeValue[];
        public IsMasterProduct: boolean;
        public MasterProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.Name = odataObject.Name;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.PrimaryImageUrl = odataObject.PrimaryImageUrl;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TrackingId = odataObject.TrackingId;
          this.AverageRating = (odataObject.AverageRating != null) ? parseFloat(odataObject.AverageRating) : undefined;
          this.TotalRatings = odataObject.TotalRatings;
          this.Description = odataObject.Description;
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.DisplayOrder = (odataObject.DisplayOrder != null) ? parseFloat(odataObject.DisplayOrder) : undefined;
          this.AttributeValues = undefined;
          if (odataObject.AttributeValues) {
              this.AttributeValues = [];
              for (var i = 0; i < odataObject.AttributeValues.length; i++) {
                  if (odataObject.AttributeValues[i] != null) {
                      if (odataObject.AttributeValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttributeValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttributeValues[i] = new Commerce.Proxy.Entities[className](odataObject.AttributeValues[i])
                          }
                      } else {
                          this.AttributeValues[i] = new AttributeValueClass(odataObject.AttributeValues[i]);
                      }
                  } else {
                      this.AttributeValues[i] = undefined;
                  }
              }
          }
          this.IsMasterProduct = odataObject.IsMasterProduct;
          this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SearchSuggestion entity class.
     */
    export class SearchSuggestionClass implements SearchSuggestion {
        public Value: string;
        public Value2: Entities.CommerceProperty;
        public Value3: Entities.CommerceProperty;
        public Value4: Entities.CommerceProperty;
        public SuggestionType: string;
        public Id: string;
        public ImageUrl: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Value = odataObject.Value;
          if (odataObject.Value2 == null) {
              this.Value2 = undefined;
          } else if (odataObject.Value2['@odata.type'] == null) {
              this.Value2 = new CommercePropertyClass(odataObject.Value2);
          } else {
              var className: string = odataObject.Value2['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value2 = new Commerce.Proxy.Entities[className](odataObject.Value2)
              }
          }

    
          if (odataObject.Value3 == null) {
              this.Value3 = undefined;
          } else if (odataObject.Value3['@odata.type'] == null) {
              this.Value3 = new CommercePropertyClass(odataObject.Value3);
          } else {
              var className: string = odataObject.Value3['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value3 = new Commerce.Proxy.Entities[className](odataObject.Value3)
              }
          }

    
          if (odataObject.Value4 == null) {
              this.Value4 = undefined;
          } else if (odataObject.Value4['@odata.type'] == null) {
              this.Value4 = new CommercePropertyClass(odataObject.Value4);
          } else {
              var className: string = odataObject.Value4['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Value4 = new Commerce.Proxy.Entities[className](odataObject.Value4)
              }
          }

    
          this.SuggestionType = odataObject.SuggestionType;
          this.Id = odataObject.Id;
          this.ImageUrl = odataObject.ImageUrl;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyPointRedemptionEstimate entity class.
     */
    export class LoyaltyPointRedemptionEstimateClass implements LoyaltyPointRedemptionEstimate {
        public MaxCurrencyValueOfLoyaltyPoints: number;
        public RewardPointToRedeemList: Entities.LoyaltyRewardPointLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.MaxCurrencyValueOfLoyaltyPoints = (odataObject.MaxCurrencyValueOfLoyaltyPoints != null) ? parseFloat(odataObject.MaxCurrencyValueOfLoyaltyPoints) : undefined;
          this.RewardPointToRedeemList = undefined;
          if (odataObject.RewardPointToRedeemList) {
              this.RewardPointToRedeemList = [];
              for (var i = 0; i < odataObject.RewardPointToRedeemList.length; i++) {
                  if (odataObject.RewardPointToRedeemList[i] != null) {
                      if (odataObject.RewardPointToRedeemList[i]['@odata.type'] != null) {
                          var className: string = odataObject.RewardPointToRedeemList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RewardPointToRedeemList[i] = new Commerce.Proxy.Entities[className](odataObject.RewardPointToRedeemList[i])
                          }
                      } else {
                          this.RewardPointToRedeemList[i] = new LoyaltyRewardPointLineClass(odataObject.RewardPointToRedeemList[i]);
                      }
                  } else {
                      this.RewardPointToRedeemList[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyGroup entity class.
     */
    export class LoyaltyGroupClass implements LoyaltyGroup {
        public Description: string;
        public Name: string;
        public RecordId: number;
        public LoyaltyTiers: Entities.LoyaltyTier[];
        public LoyaltyCardTiers: Entities.LoyaltyCardTier[];
        public HighestActiveLoyaltyCardTier: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Description = odataObject.Description;
          this.Name = odataObject.Name;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.LoyaltyTiers = undefined;
          if (odataObject.LoyaltyTiers) {
              this.LoyaltyTiers = [];
              for (var i = 0; i < odataObject.LoyaltyTiers.length; i++) {
                  if (odataObject.LoyaltyTiers[i] != null) {
                      if (odataObject.LoyaltyTiers[i]['@odata.type'] != null) {
                          var className: string = odataObject.LoyaltyTiers[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LoyaltyTiers[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyTiers[i])
                          }
                      } else {
                          this.LoyaltyTiers[i] = new LoyaltyTierClass(odataObject.LoyaltyTiers[i]);
                      }
                  } else {
                      this.LoyaltyTiers[i] = undefined;
                  }
              }
          }
          this.LoyaltyCardTiers = undefined;
          if (odataObject.LoyaltyCardTiers) {
              this.LoyaltyCardTiers = [];
              for (var i = 0; i < odataObject.LoyaltyCardTiers.length; i++) {
                  if (odataObject.LoyaltyCardTiers[i] != null) {
                      if (odataObject.LoyaltyCardTiers[i]['@odata.type'] != null) {
                          var className: string = odataObject.LoyaltyCardTiers[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.LoyaltyCardTiers[i] = new Commerce.Proxy.Entities[className](odataObject.LoyaltyCardTiers[i])
                          }
                      } else {
                          this.LoyaltyCardTiers[i] = new LoyaltyCardTierClass(odataObject.LoyaltyCardTiers[i]);
                      }
                  } else {
                      this.LoyaltyCardTiers[i] = undefined;
                  }
              }
          }
          this.HighestActiveLoyaltyCardTier = (odataObject.HighestActiveLoyaltyCardTier != null) ? parseInt(odataObject.HighestActiveLoyaltyCardTier, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyTier entity class.
     */
    export class LoyaltyTierClass implements LoyaltyTier {
        public Description: string;
        public RecordId: number;
        public TierId: string;
        public TierLevel: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Description = odataObject.Description;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TierId = odataObject.TierId;
          this.TierLevel = (odataObject.TierLevel != null) ? parseFloat(odataObject.TierLevel) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyCardTier entity class.
     */
    export class LoyaltyCardTierClass implements LoyaltyCardTier {
        public RecordId: number;
        public TierId: string;
        public LoyaltyTierRecordId: number;
        public ValidFrom: Date;
        public ValidTo: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TierId = odataObject.TierId;
          this.LoyaltyTierRecordId = (odataObject.LoyaltyTierRecordId != null) ? parseInt(odataObject.LoyaltyTierRecordId, 10) : undefined;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyRewardPoint entity class.
     */
    export class LoyaltyRewardPointClass implements LoyaltyRewardPoint {
        public IsRedeemable: boolean;
        public RewardPointCurrency: string;
        public RewardPointTypeValue: number;
        public Description: string;
        public RewardPointId: string;
        public IssuedPoints: number;
        public UsedPoints: number;
        public ExpiredPoints: number;
        public ActivePoints: number;
        public PointsExpiringSoon: number;
        public UnvestedPoints: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsRedeemable = odataObject.IsRedeemable;
          this.RewardPointCurrency = odataObject.RewardPointCurrency;
          this.RewardPointTypeValue = odataObject.RewardPointTypeValue;
          this.Description = odataObject.Description;
          this.RewardPointId = odataObject.RewardPointId;
          this.IssuedPoints = (odataObject.IssuedPoints != null) ? parseFloat(odataObject.IssuedPoints) : undefined;
          this.UsedPoints = (odataObject.UsedPoints != null) ? parseFloat(odataObject.UsedPoints) : undefined;
          this.ExpiredPoints = (odataObject.ExpiredPoints != null) ? parseFloat(odataObject.ExpiredPoints) : undefined;
          this.ActivePoints = (odataObject.ActivePoints != null) ? parseFloat(odataObject.ActivePoints) : undefined;
          this.PointsExpiringSoon = (odataObject.PointsExpiringSoon != null) ? parseFloat(odataObject.PointsExpiringSoon) : undefined;
          this.UnvestedPoints = (odataObject.UnvestedPoints != null) ? parseFloat(odataObject.UnvestedPoints) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyCardTransaction entity class.
     */
    export class LoyaltyCardTransactionClass implements LoyaltyCardTransaction {
        public ChannelName: string;
        public EntryDateTime: Date;
        public EntryTypeValue: number;
        public ExpirationDate: Date;
        public RewardPointAmountQuantity: number;
        public TransactionId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelName = odataObject.ChannelName;
          this.EntryDateTime = (odataObject.EntryDateTime instanceof Date) ? odataObject.EntryDateTime
            : (odataObject.EntryDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EntryDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EntryTypeValue = odataObject.EntryTypeValue;
          this.ExpirationDate = (odataObject.ExpirationDate instanceof Date) ? odataObject.ExpirationDate
            : (odataObject.ExpirationDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ExpirationDate, "Edm.DateTimeOffset", false) : undefined;
          this.RewardPointAmountQuantity = (odataObject.RewardPointAmountQuantity != null) ? parseFloat(odataObject.RewardPointAmountQuantity) : undefined;
          this.TransactionId = odataObject.TransactionId;
        }
    }
    
    /**
     * GiftCard entity class.
     */
    export class GiftCardClass implements GiftCard {
        public Id: string;
        public Balance: number;
        public BalanceCurrencyCode: string;
        public BalanceInCardCurrency: number;
        public CardCurrencyCode: string;
        public GiftCardIssueAmount: number;
        public GiftCardActiveFrom: Date;
        public GiftCardExpireDate: Date;
        public GiftCardHistoryDetails: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
          this.BalanceCurrencyCode = odataObject.BalanceCurrencyCode;
          this.BalanceInCardCurrency = (odataObject.BalanceInCardCurrency != null) ? parseFloat(odataObject.BalanceInCardCurrency) : undefined;
          this.CardCurrencyCode = odataObject.CardCurrencyCode;
          this.GiftCardIssueAmount = (odataObject.GiftCardIssueAmount != null) ? parseFloat(odataObject.GiftCardIssueAmount) : undefined;
          this.GiftCardActiveFrom = (odataObject.GiftCardActiveFrom instanceof Date) ? odataObject.GiftCardActiveFrom
            : (odataObject.GiftCardActiveFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardActiveFrom, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardExpireDate = (odataObject.GiftCardExpireDate instanceof Date) ? odataObject.GiftCardExpireDate
            : (odataObject.GiftCardExpireDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.GiftCardExpireDate, "Edm.DateTimeOffset", false) : undefined;
          this.GiftCardHistoryDetails = odataObject.GiftCardHistoryDetails;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OperationPermission entity class.
     */
    export class OperationPermissionClass implements OperationPermission {
        public OperationName: string;
        public OperationId: number;
        public CheckUserAccess: boolean;
        public AllowAnonymousAccess: boolean;
        public AllowCustomerAccess: boolean;
        public AllowApplicationAccess: boolean;
        public IsEnabledForTaskManagement: boolean;
        public Permissions: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OperationName = odataObject.OperationName;
          this.OperationId = odataObject.OperationId;
          this.CheckUserAccess = odataObject.CheckUserAccess;
          this.AllowAnonymousAccess = odataObject.AllowAnonymousAccess;
          this.AllowCustomerAccess = odataObject.AllowCustomerAccess;
          this.AllowApplicationAccess = odataObject.AllowApplicationAccess;
          this.IsEnabledForTaskManagement = odataObject.IsEnabledForTaskManagement;
          this.Permissions = undefined;
          if (odataObject.Permissions) {
              this.Permissions = [];
              for (var i = 0; i < odataObject.Permissions.length; i++) {
                  if (odataObject.Permissions[i] != null) {
                      this.Permissions[i] = odataObject.Permissions[i];              } else {
                      this.Permissions[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * StateProvinceInfo entity class.
     */
    export class StateProvinceInfoClass implements StateProvinceInfo {
        public CountryRegionId: string;
        public StateId: string;
        public StateName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CountryRegionId = odataObject.CountryRegionId;
          this.StateId = odataObject.StateId;
          this.StateName = odataObject.StateName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TransactionLog entity class.
     */
    export class TransactionLogClass extends TransactionClass implements TransactionLog {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TransactionLog";
            
        }
    }
    
    /**
     * KitTransaction entity class.
     */
    export class KitTransactionClass extends TransactionLogClass implements KitTransaction {
        public KitTransactionLines: Entities.KitTransactionLine[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.KitTransactionLines = undefined;
          if (odataObject.KitTransactionLines) {
              this.KitTransactionLines = [];
              for (var i = 0; i < odataObject.KitTransactionLines.length; i++) {
                  if (odataObject.KitTransactionLines[i] != null) {
                      if (odataObject.KitTransactionLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.KitTransactionLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.KitTransactionLines[i] = new Commerce.Proxy.Entities[className](odataObject.KitTransactionLines[i])
                          }
                      } else {
                          this.KitTransactionLines[i] = new KitTransactionLineClass(odataObject.KitTransactionLines[i]);
                      }
                  } else {
                      this.KitTransactionLines[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.KitTransaction";
            
        }
    }
    
    /**
     * SalesTaxGroup entity class.
     */
    export class SalesTaxGroupClass implements SalesTaxGroup {
        public RecordId: number;
        public TaxGroup: string;
        public TaxGroupName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TaxGroup = odataObject.TaxGroup;
          this.TaxGroupName = odataObject.TaxGroupName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductProperty entity class.
     */
    export class ProductPropertyClass implements ProductProperty {
        public ValueString: string;
        public UnitText: string;
        public PropertyTypeValue: number;
        public KeyName: string;
        public FriendlyName: string;
        public RecordId: number;
        public IsDimensionProperty: boolean;
        public AttributeValueId: number;
        public GroupId: number;
        public GroupTypeValue: number;
        public GroupName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        public ProductId: number;
        public CatalogId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ValueString = odataObject.ValueString;
          this.UnitText = odataObject.UnitText;
          this.PropertyTypeValue = odataObject.PropertyTypeValue;
          this.KeyName = odataObject.KeyName;
          this.FriendlyName = odataObject.FriendlyName;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.IsDimensionProperty = odataObject.IsDimensionProperty;
          this.AttributeValueId = (odataObject.AttributeValueId != null) ? parseInt(odataObject.AttributeValueId, 10) : undefined;
          this.GroupId = (odataObject.GroupId != null) ? parseInt(odataObject.GroupId, 10) : undefined;
          this.GroupTypeValue = odataObject.GroupTypeValue;
          this.GroupName = odataObject.GroupName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
        }
    }
    
    /**
     * ProductCompositionInformation entity class.
     */
    export class ProductCompositionInformationClass implements ProductCompositionInformation {
        public VariantInformation: Entities.ProductVariantInformation;
        public KitDefinition: Entities.KitDefinition;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.VariantInformation == null) {
              this.VariantInformation = undefined;
          } else if (odataObject.VariantInformation['@odata.type'] == null) {
              this.VariantInformation = new ProductVariantInformationClass(odataObject.VariantInformation);
          } else {
              var className: string = odataObject.VariantInformation['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.VariantInformation = new Commerce.Proxy.Entities[className](odataObject.VariantInformation)
              }
          }

    
          if (odataObject.KitDefinition == null) {
              this.KitDefinition = undefined;
          } else if (odataObject.KitDefinition['@odata.type'] == null) {
              this.KitDefinition = new KitDefinitionClass(odataObject.KitDefinition);
          } else {
              var className: string = odataObject.KitDefinition['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.KitDefinition = new Commerce.Proxy.Entities[className](odataObject.KitDefinition)
              }
          }

    
        }
    }
    
    /**
     * ProductVariantInformation entity class.
     */
    export class ProductVariantInformationClass implements ProductVariantInformation {
        public ActiveVariantProductId: number;
        public Variants: Entities.ProductVariant[];
        public Dimensions: Entities.ProductDimensionSet[];
        public ItemId: string;
        public MasterProductId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ActiveVariantProductId = (odataObject.ActiveVariantProductId != null) ? parseInt(odataObject.ActiveVariantProductId, 10) : undefined;
          this.Variants = undefined;
          if (odataObject.Variants) {
              this.Variants = [];
              for (var i = 0; i < odataObject.Variants.length; i++) {
                  if (odataObject.Variants[i] != null) {
                      if (odataObject.Variants[i]['@odata.type'] != null) {
                          var className: string = odataObject.Variants[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Variants[i] = new Commerce.Proxy.Entities[className](odataObject.Variants[i])
                          }
                      } else {
                          this.Variants[i] = new ProductVariantClass(odataObject.Variants[i]);
                      }
                  } else {
                      this.Variants[i] = undefined;
                  }
              }
          }
          this.Dimensions = undefined;
          if (odataObject.Dimensions) {
              this.Dimensions = [];
              for (var i = 0; i < odataObject.Dimensions.length; i++) {
                  if (odataObject.Dimensions[i] != null) {
                      if (odataObject.Dimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.Dimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Dimensions[i] = new Commerce.Proxy.Entities[className](odataObject.Dimensions[i])
                          }
                      } else {
                          this.Dimensions[i] = new ProductDimensionSetClass(odataObject.Dimensions[i]);
                      }
                  } else {
                      this.Dimensions[i] = undefined;
                  }
              }
          }
          this.ItemId = odataObject.ItemId;
          this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
        }
    }
    
    /**
     * ProductChangeTrackingInformation entity class.
     */
    export class ProductChangeTrackingInformationClass implements ProductChangeTrackingInformation {
        public ModifiedDateTime: Date;
        public ChangeActionValue: number;
        public RequestedActionValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ModifiedDateTime = (odataObject.ModifiedDateTime instanceof Date) ? odataObject.ModifiedDateTime
            : (odataObject.ModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ChangeActionValue = odataObject.ChangeActionValue;
          this.RequestedActionValue = odataObject.RequestedActionValue;
        }
    }
    
    /**
     * ProductDimensionSet entity class.
     */
    export class ProductDimensionSetClass implements ProductDimensionSet {
        public DimensionKey: string;
        public DimensionValues: Entities.ProductDimensionValueSet[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DimensionKey = odataObject.DimensionKey;
          this.DimensionValues = undefined;
          if (odataObject.DimensionValues) {
              this.DimensionValues = [];
              for (var i = 0; i < odataObject.DimensionValues.length; i++) {
                  if (odataObject.DimensionValues[i] != null) {
                      if (odataObject.DimensionValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.DimensionValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DimensionValues[i] = new Commerce.Proxy.Entities[className](odataObject.DimensionValues[i])
                          }
                      } else {
                          this.DimensionValues[i] = new ProductDimensionValueSetClass(odataObject.DimensionValues[i]);
                      }
                  } else {
                      this.DimensionValues[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductDimensionValueSet entity class.
     */
    export class ProductDimensionValueSetClass implements ProductDimensionValueSet {
        public DimensionId: string;
        public DimensionValue: string;
        public VariantSet: number[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DimensionId = odataObject.DimensionId;
          this.DimensionValue = odataObject.DimensionValue;
          this.VariantSet = undefined;
          if (odataObject.VariantSet) {
              this.VariantSet = [];
              for (var i = 0; i < odataObject.VariantSet.length; i++) {
                  if (odataObject.VariantSet[i] != null) {
                      this.VariantSet[i] = parseInt(odataObject.VariantSet[i], 10);              } else {
                      this.VariantSet[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RichMediaLocations entity class.
     */
    export class RichMediaLocationsClass implements RichMediaLocations {
        public Items: Entities.RichMediaLocationsRichMediaLocation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Items = undefined;
          if (odataObject.Items) {
              this.Items = [];
              for (var i = 0; i < odataObject.Items.length; i++) {
                  if (odataObject.Items[i] != null) {
                      if (odataObject.Items[i]['@odata.type'] != null) {
                          var className: string = odataObject.Items[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Items[i] = new Commerce.Proxy.Entities[className](odataObject.Items[i])
                          }
                      } else {
                          this.Items[i] = new RichMediaLocationsRichMediaLocationClass(odataObject.Items[i]);
                      }
                  } else {
                      this.Items[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RichMediaLocationsRichMediaLocation entity class.
     */
    export class RichMediaLocationsRichMediaLocationClass implements RichMediaLocationsRichMediaLocation {
        public Url: string;
        public AltText: string;
        public IsSelfHosted: boolean;
        public IsDefault: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Url = odataObject.Url;
          this.AltText = odataObject.AltText;
          this.IsSelfHosted = odataObject.IsSelfHosted;
          this.IsDefault = odataObject.IsDefault;
        }
    }
    
    /**
     * KitDefinition entity class.
     */
    export class KitDefinitionClass implements KitDefinition {
        public DisassembleAtRegister: boolean;
        public KitLineDefinitions: Entities.KitLineDefinition[];
        public KitLineProductToVariantMap: Entities.ComponentKitVariantSet[];
        public KitVariantToComponentMap: Entities.KitVariantContent[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DisassembleAtRegister = odataObject.DisassembleAtRegister;
          this.KitLineDefinitions = undefined;
          if (odataObject.KitLineDefinitions) {
              this.KitLineDefinitions = [];
              for (var i = 0; i < odataObject.KitLineDefinitions.length; i++) {
                  if (odataObject.KitLineDefinitions[i] != null) {
                      if (odataObject.KitLineDefinitions[i]['@odata.type'] != null) {
                          var className: string = odataObject.KitLineDefinitions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.KitLineDefinitions[i] = new Commerce.Proxy.Entities[className](odataObject.KitLineDefinitions[i])
                          }
                      } else {
                          this.KitLineDefinitions[i] = new KitLineDefinitionClass(odataObject.KitLineDefinitions[i]);
                      }
                  } else {
                      this.KitLineDefinitions[i] = undefined;
                  }
              }
          }
          this.KitLineProductToVariantMap = undefined;
          if (odataObject.KitLineProductToVariantMap) {
              this.KitLineProductToVariantMap = [];
              for (var i = 0; i < odataObject.KitLineProductToVariantMap.length; i++) {
                  if (odataObject.KitLineProductToVariantMap[i] != null) {
                      if (odataObject.KitLineProductToVariantMap[i]['@odata.type'] != null) {
                          var className: string = odataObject.KitLineProductToVariantMap[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.KitLineProductToVariantMap[i] = new Commerce.Proxy.Entities[className](odataObject.KitLineProductToVariantMap[i])
                          }
                      } else {
                          this.KitLineProductToVariantMap[i] = new ComponentKitVariantSetClass(odataObject.KitLineProductToVariantMap[i]);
                      }
                  } else {
                      this.KitLineProductToVariantMap[i] = undefined;
                  }
              }
          }
          this.KitVariantToComponentMap = undefined;
          if (odataObject.KitVariantToComponentMap) {
              this.KitVariantToComponentMap = [];
              for (var i = 0; i < odataObject.KitVariantToComponentMap.length; i++) {
                  if (odataObject.KitVariantToComponentMap[i] != null) {
                      if (odataObject.KitVariantToComponentMap[i]['@odata.type'] != null) {
                          var className: string = odataObject.KitVariantToComponentMap[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.KitVariantToComponentMap[i] = new Commerce.Proxy.Entities[className](odataObject.KitVariantToComponentMap[i])
                          }
                      } else {
                          this.KitVariantToComponentMap[i] = new KitVariantContentClass(odataObject.KitVariantToComponentMap[i]);
                      }
                  } else {
                      this.KitVariantToComponentMap[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ComponentKitVariantSet entity class.
     */
    export class ComponentKitVariantSetClass implements ComponentKitVariantSet {
        public KitLineProductId: number;
        public KitVariantIdList: number[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.KitLineProductId = (odataObject.KitLineProductId != null) ? parseInt(odataObject.KitLineProductId, 10) : undefined;
          this.KitVariantIdList = undefined;
          if (odataObject.KitVariantIdList) {
              this.KitVariantIdList = [];
              for (var i = 0; i < odataObject.KitVariantIdList.length; i++) {
                  if (odataObject.KitVariantIdList[i] != null) {
                      this.KitVariantIdList[i] = parseInt(odataObject.KitVariantIdList[i], 10);              } else {
                      this.KitVariantIdList[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * KitLineDefinition entity class.
     */
    export class KitLineDefinitionClass implements KitLineDefinition {
        public ComponentProductId: number;
        public KitLineIdentifier: number;
        public SubstituteProductIds: number[];
        public ComponentProperties: Entities.KitLineProductProperty[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ComponentProductId = (odataObject.ComponentProductId != null) ? parseInt(odataObject.ComponentProductId, 10) : undefined;
          this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
          this.SubstituteProductIds = undefined;
          if (odataObject.SubstituteProductIds) {
              this.SubstituteProductIds = [];
              for (var i = 0; i < odataObject.SubstituteProductIds.length; i++) {
                  if (odataObject.SubstituteProductIds[i] != null) {
                      this.SubstituteProductIds[i] = parseInt(odataObject.SubstituteProductIds[i], 10);              } else {
                      this.SubstituteProductIds[i] = undefined;
                  }
              }
          }
          this.ComponentProperties = undefined;
          if (odataObject.ComponentProperties) {
              this.ComponentProperties = [];
              for (var i = 0; i < odataObject.ComponentProperties.length; i++) {
                  if (odataObject.ComponentProperties[i] != null) {
                      if (odataObject.ComponentProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ComponentProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ComponentProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ComponentProperties[i])
                          }
                      } else {
                          this.ComponentProperties[i] = new KitLineProductPropertyClass(odataObject.ComponentProperties[i]);
                      }
                  } else {
                      this.ComponentProperties[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * KitLineProductProperty entity class.
     */
    export class KitLineProductPropertyClass implements KitLineProductProperty {
        public KitLineIdentifier: number;
        public ProductId: number;
        public Unit: string;
        public Quantity: number;
        public Charge: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.Unit = odataObject.Unit;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Charge = (odataObject.Charge != null) ? parseFloat(odataObject.Charge) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * KitComponentKey entity class.
     */
    export class KitComponentKeyClass implements KitComponentKey {
        public KitLineIdentifier: number;
        public DistinctProductId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.KitLineIdentifier = (odataObject.KitLineIdentifier != null) ? parseInt(odataObject.KitLineIdentifier, 10) : undefined;
          this.DistinctProductId = (odataObject.DistinctProductId != null) ? parseInt(odataObject.DistinctProductId, 10) : undefined;
        }
    }
    
    /**
     * KitVariantContent entity class.
     */
    export class KitVariantContentClass implements KitVariantContent {
        public KitVariantId: number;
        public KitComponentKeyList: Entities.KitComponentKey[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.KitVariantId = (odataObject.KitVariantId != null) ? parseInt(odataObject.KitVariantId, 10) : undefined;
          this.KitComponentKeyList = undefined;
          if (odataObject.KitComponentKeyList) {
              this.KitComponentKeyList = [];
              for (var i = 0; i < odataObject.KitComponentKeyList.length; i++) {
                  if (odataObject.KitComponentKeyList[i] != null) {
                      if (odataObject.KitComponentKeyList[i]['@odata.type'] != null) {
                          var className: string = odataObject.KitComponentKeyList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.KitComponentKeyList[i] = new Commerce.Proxy.Entities[className](odataObject.KitComponentKeyList[i])
                          }
                      } else {
                          this.KitComponentKeyList[i] = new KitComponentKeyClass(odataObject.KitComponentKeyList[i]);
                      }
                  } else {
                      this.KitComponentKeyList[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductLookupClause entity class.
     */
    export class ProductLookupClauseClass implements ProductLookupClause {
        public ItemId: string;
        public InventDimensionId: string;
        public Barcode: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.InventDimensionId = odataObject.InventDimensionId;
          this.Barcode = odataObject.Barcode;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductAssortmentInterval entity class.
     */
    export class ProductAssortmentIntervalClass implements ProductAssortmentInterval {
        public ProductId: number;
        public ValidFrom: Date;
        public ValidTo: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitLocation entity class.
     */
    export class OrgUnitLocationClass implements OrgUnitLocation {
        public Contacts: Entities.OrgUnitContact[];
        public ChannelId: number;
        public Latitude: number;
        public Longitude: number;
        public OrgUnitName: string;
        public OrgUnitNumber: string;
        public Address: string;
        public Street: string;
        public StreetNumber: string;
        public City: string;
        public DistrictName: string;
        public BuildingCompliment: string;
        public Postbox: string;
        public Zip: string;
        public County: string;
        public CountyName: string;
        public State: string;
        public StateName: string;
        public Country: string;
        public Distance: number;
        public InventoryLocationId: string;
        public InventorySiteId: string;
        public PostalAddressId: number;
        public OpenFrom: number;
        public OpenTo: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Contacts = undefined;
          if (odataObject.Contacts) {
              this.Contacts = [];
              for (var i = 0; i < odataObject.Contacts.length; i++) {
                  if (odataObject.Contacts[i] != null) {
                      if (odataObject.Contacts[i]['@odata.type'] != null) {
                          var className: string = odataObject.Contacts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Contacts[i] = new Commerce.Proxy.Entities[className](odataObject.Contacts[i])
                          }
                      } else {
                          this.Contacts[i] = new OrgUnitContactClass(odataObject.Contacts[i]);
                      }
                  } else {
                      this.Contacts[i] = undefined;
                  }
              }
          }
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.Latitude = (odataObject.Latitude != null) ? parseFloat(odataObject.Latitude) : undefined;
          this.Longitude = (odataObject.Longitude != null) ? parseFloat(odataObject.Longitude) : undefined;
          this.OrgUnitName = odataObject.OrgUnitName;
          this.OrgUnitNumber = odataObject.OrgUnitNumber;
          this.Address = odataObject.Address;
          this.Street = odataObject.Street;
          this.StreetNumber = odataObject.StreetNumber;
          this.City = odataObject.City;
          this.DistrictName = odataObject.DistrictName;
          this.BuildingCompliment = odataObject.BuildingCompliment;
          this.Postbox = odataObject.Postbox;
          this.Zip = odataObject.Zip;
          this.County = odataObject.County;
          this.CountyName = odataObject.CountyName;
          this.State = odataObject.State;
          this.StateName = odataObject.StateName;
          this.Country = odataObject.Country;
          this.Distance = (odataObject.Distance != null) ? parseFloat(odataObject.Distance) : undefined;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.InventorySiteId = odataObject.InventorySiteId;
          this.PostalAddressId = (odataObject.PostalAddressId != null) ? parseInt(odataObject.PostalAddressId, 10) : undefined;
          this.OpenFrom = odataObject.OpenFrom;
          this.OpenTo = odataObject.OpenTo;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitContact entity class.
     */
    export class OrgUnitContactClass implements OrgUnitContact {
        public ChannelId: number;
        public Locator: string;
        public LocatorExtension: string;
        public ContactTypeValue: number;
        public IsPrimary: boolean;
        public IsPrivate: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.Locator = odataObject.Locator;
          this.LocatorExtension = odataObject.LocatorExtension;
          this.ContactTypeValue = odataObject.ContactTypeValue;
          this.IsPrimary = odataObject.IsPrimary;
          this.IsPrivate = odataObject.IsPrivate;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesLineDeliveryOption entity class.
     */
    export class SalesLineDeliveryOptionClass implements SalesLineDeliveryOption {
        public SalesLineId: string;
        public DeliveryOptions: Entities.DeliveryOption[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesLineId = odataObject.SalesLineId;
          this.DeliveryOptions = undefined;
          if (odataObject.DeliveryOptions) {
              this.DeliveryOptions = [];
              for (var i = 0; i < odataObject.DeliveryOptions.length; i++) {
                  if (odataObject.DeliveryOptions[i] != null) {
                      if (odataObject.DeliveryOptions[i]['@odata.type'] != null) {
                          var className: string = odataObject.DeliveryOptions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DeliveryOptions[i] = new Commerce.Proxy.Entities[className](odataObject.DeliveryOptions[i])
                          }
                      } else {
                          this.DeliveryOptions[i] = new DeliveryOptionClass(odataObject.DeliveryOptions[i]);
                      }
                  } else {
                      this.DeliveryOptions[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DeliveryOption entity class.
     */
    export class DeliveryOptionClass implements DeliveryOption {
        public ChargeGroup: string;
        public Code: string;
        public Description: string;
        public RecordId: number;
        public DeliveryChargeLines: Entities.DeliveryChargeLine[];
        public TotalChargeAmount: number;
        public ShippingChargeAmount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChargeGroup = odataObject.ChargeGroup;
          this.Code = odataObject.Code;
          this.Description = odataObject.Description;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.DeliveryChargeLines = undefined;
          if (odataObject.DeliveryChargeLines) {
              this.DeliveryChargeLines = [];
              for (var i = 0; i < odataObject.DeliveryChargeLines.length; i++) {
                  if (odataObject.DeliveryChargeLines[i] != null) {
                      if (odataObject.DeliveryChargeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.DeliveryChargeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DeliveryChargeLines[i] = new Commerce.Proxy.Entities[className](odataObject.DeliveryChargeLines[i])
                          }
                      } else {
                          this.DeliveryChargeLines[i] = new DeliveryChargeLineClass(odataObject.DeliveryChargeLines[i]);
                      }
                  } else {
                      this.DeliveryChargeLines[i] = undefined;
                  }
              }
          }
          this.TotalChargeAmount = (odataObject.TotalChargeAmount != null) ? parseFloat(odataObject.TotalChargeAmount) : undefined;
          this.ShippingChargeAmount = (odataObject.ShippingChargeAmount != null) ? parseFloat(odataObject.ShippingChargeAmount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelIdentity entity class.
     */
    export class ChannelIdentityClass implements ChannelIdentity {
        public Name: string;
        public OperatingUnitNumber: string;
        public DataAreaId: string;
        public RecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.OperatingUnitNumber = odataObject.OperatingUnitNumber;
          this.DataAreaId = odataObject.DataAreaId;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelProfileProperty entity class.
     */
    export class ChannelProfilePropertyClass implements ChannelProfileProperty {
        public Key: number;
        public Value: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Key = odataObject.Key;
          this.Value = odataObject.Value;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelConfiguration entity class.
     */
    export class ChannelConfigurationClass implements ChannelConfiguration {
        public RecordId: number;
        public ChannelNaturalId: string;
        public MinimumDepositPercentage: number;
        public QuoteExpirationDays: number;
        public PickupDeliveryModeCode: string;
        public CarryoutDeliveryModeCode: string;
        public CancellationChargePercentage: number;
        public InventLocation: string;
        public InventLocationDataAreaId: string;
        public BingMapsApiKey: string;
        public BingMapsEnabled: boolean;
        public Currency: string;
        public CatalogDefaultImageTemplate: string;
        public CompanyCurrency: string;
        public PriceIncludesSalesTax: boolean;
        public CountryRegionId: string;
        public ChannelCountryRegionISOCode: string;
        public DefaultLanguageId: string;
        public TimeZoneInfoId: string;
        public EmailDeliveryModeCode: string;
        public GiftCardItemId: string;
        public EnableProductRecommendations: boolean;
        public RefundableShippingAmountWithoutApproval: number;
        public RefundShippingCharges: boolean;
        public ReceiptSettingsValue: number;
        public CustomerAttributeGroupId: number;
        public ClientBookAttributeGroupId: number;
        public NotificationRefreshInterval: number;
        public AllowExchangeOnReturnOrders: boolean;
        public FiscalRegistrationProcessId: string;
        public IsInventoryAutomaticValidationEnabled: boolean;
        public ProfileProperties: Entities.ChannelProfileProperty[];
        public Properties: Entities.ChannelProperty[];
        public Languages: Entities.ChannelLanguage[];
        public UseAdvancedAutoCharges: boolean;
        public UseRTSForOnlineOrderCreation: boolean;
        public IsWarrantyAutoPromptEnabled: boolean;
        public EnableProductRatingsForRetailStores: boolean;
        public EnableFetchingPickingListsForPickingAndReceiving: boolean;
        public EnableReturnsForMultipleOrderInvoices: boolean;
        public VoidSuspendedTransactionsOnCloseShift: number;
        public EnableOmniChannelPayments: boolean;
        public UseAdvancedCashManagement: boolean;
        public EnableFiscalRegistrationStorageBackup: boolean;
        public UseSalesReceiptAsDefaultReceiptTypeInJournal: boolean;
        public SalesOrderHeaderAttributeGroups: number[];
        public SalesOrderLinesAttributeGroups: number[];
        public EnableReturnPolicies: boolean;
        public InventAvailabilityCalculationMode: string;
        public IsPriceInclusiveTaxExemptCalculationEnabled: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ChannelNaturalId = odataObject.ChannelNaturalId;
          this.MinimumDepositPercentage = (odataObject.MinimumDepositPercentage != null) ? parseFloat(odataObject.MinimumDepositPercentage) : undefined;
          this.QuoteExpirationDays = odataObject.QuoteExpirationDays;
          this.PickupDeliveryModeCode = odataObject.PickupDeliveryModeCode;
          this.CarryoutDeliveryModeCode = odataObject.CarryoutDeliveryModeCode;
          this.CancellationChargePercentage = (odataObject.CancellationChargePercentage != null) ? parseFloat(odataObject.CancellationChargePercentage) : undefined;
          this.InventLocation = odataObject.InventLocation;
          this.InventLocationDataAreaId = odataObject.InventLocationDataAreaId;
          this.BingMapsApiKey = odataObject.BingMapsApiKey;
          this.BingMapsEnabled = odataObject.BingMapsEnabled;
          this.Currency = odataObject.Currency;
          this.CatalogDefaultImageTemplate = odataObject.CatalogDefaultImageTemplate;
          this.CompanyCurrency = odataObject.CompanyCurrency;
          this.PriceIncludesSalesTax = odataObject.PriceIncludesSalesTax;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.ChannelCountryRegionISOCode = odataObject.ChannelCountryRegionISOCode;
          this.DefaultLanguageId = odataObject.DefaultLanguageId;
          this.TimeZoneInfoId = odataObject.TimeZoneInfoId;
          this.EmailDeliveryModeCode = odataObject.EmailDeliveryModeCode;
          this.GiftCardItemId = odataObject.GiftCardItemId;
          this.EnableProductRecommendations = odataObject.EnableProductRecommendations;
          this.RefundableShippingAmountWithoutApproval = (odataObject.RefundableShippingAmountWithoutApproval != null) ? parseFloat(odataObject.RefundableShippingAmountWithoutApproval) : undefined;
          this.RefundShippingCharges = odataObject.RefundShippingCharges;
          this.ReceiptSettingsValue = odataObject.ReceiptSettingsValue;
          this.CustomerAttributeGroupId = (odataObject.CustomerAttributeGroupId != null) ? parseInt(odataObject.CustomerAttributeGroupId, 10) : undefined;
          this.ClientBookAttributeGroupId = (odataObject.ClientBookAttributeGroupId != null) ? parseInt(odataObject.ClientBookAttributeGroupId, 10) : undefined;
          this.NotificationRefreshInterval = odataObject.NotificationRefreshInterval;
          this.AllowExchangeOnReturnOrders = odataObject.AllowExchangeOnReturnOrders;
          this.FiscalRegistrationProcessId = odataObject.FiscalRegistrationProcessId;
          this.IsInventoryAutomaticValidationEnabled = odataObject.IsInventoryAutomaticValidationEnabled;
          this.ProfileProperties = undefined;
          if (odataObject.ProfileProperties) {
              this.ProfileProperties = [];
              for (var i = 0; i < odataObject.ProfileProperties.length; i++) {
                  if (odataObject.ProfileProperties[i] != null) {
                      if (odataObject.ProfileProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProfileProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProfileProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ProfileProperties[i])
                          }
                      } else {
                          this.ProfileProperties[i] = new ChannelProfilePropertyClass(odataObject.ProfileProperties[i]);
                      }
                  } else {
                      this.ProfileProperties[i] = undefined;
                  }
              }
          }
          this.Properties = undefined;
          if (odataObject.Properties) {
              this.Properties = [];
              for (var i = 0; i < odataObject.Properties.length; i++) {
                  if (odataObject.Properties[i] != null) {
                      if (odataObject.Properties[i]['@odata.type'] != null) {
                          var className: string = odataObject.Properties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Properties[i] = new Commerce.Proxy.Entities[className](odataObject.Properties[i])
                          }
                      } else {
                          this.Properties[i] = new ChannelPropertyClass(odataObject.Properties[i]);
                      }
                  } else {
                      this.Properties[i] = undefined;
                  }
              }
          }
          this.Languages = undefined;
          if (odataObject.Languages) {
              this.Languages = [];
              for (var i = 0; i < odataObject.Languages.length; i++) {
                  if (odataObject.Languages[i] != null) {
                      if (odataObject.Languages[i]['@odata.type'] != null) {
                          var className: string = odataObject.Languages[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Languages[i] = new Commerce.Proxy.Entities[className](odataObject.Languages[i])
                          }
                      } else {
                          this.Languages[i] = new ChannelLanguageClass(odataObject.Languages[i]);
                      }
                  } else {
                      this.Languages[i] = undefined;
                  }
              }
          }
          this.UseAdvancedAutoCharges = odataObject.UseAdvancedAutoCharges;
          this.UseRTSForOnlineOrderCreation = odataObject.UseRTSForOnlineOrderCreation;
          this.IsWarrantyAutoPromptEnabled = odataObject.IsWarrantyAutoPromptEnabled;
          this.EnableProductRatingsForRetailStores = odataObject.EnableProductRatingsForRetailStores;
          this.EnableFetchingPickingListsForPickingAndReceiving = odataObject.EnableFetchingPickingListsForPickingAndReceiving;
          this.EnableReturnsForMultipleOrderInvoices = odataObject.EnableReturnsForMultipleOrderInvoices;
          this.VoidSuspendedTransactionsOnCloseShift = odataObject.VoidSuspendedTransactionsOnCloseShift;
          this.EnableOmniChannelPayments = odataObject.EnableOmniChannelPayments;
          this.UseAdvancedCashManagement = odataObject.UseAdvancedCashManagement;
          this.EnableFiscalRegistrationStorageBackup = odataObject.EnableFiscalRegistrationStorageBackup;
          this.UseSalesReceiptAsDefaultReceiptTypeInJournal = odataObject.UseSalesReceiptAsDefaultReceiptTypeInJournal;
          this.SalesOrderHeaderAttributeGroups = undefined;
          if (odataObject.SalesOrderHeaderAttributeGroups) {
              this.SalesOrderHeaderAttributeGroups = [];
              for (var i = 0; i < odataObject.SalesOrderHeaderAttributeGroups.length; i++) {
                  if (odataObject.SalesOrderHeaderAttributeGroups[i] != null) {
                      this.SalesOrderHeaderAttributeGroups[i] = parseInt(odataObject.SalesOrderHeaderAttributeGroups[i], 10);              } else {
                      this.SalesOrderHeaderAttributeGroups[i] = undefined;
                  }
              }
          }
          this.SalesOrderLinesAttributeGroups = undefined;
          if (odataObject.SalesOrderLinesAttributeGroups) {
              this.SalesOrderLinesAttributeGroups = [];
              for (var i = 0; i < odataObject.SalesOrderLinesAttributeGroups.length; i++) {
                  if (odataObject.SalesOrderLinesAttributeGroups[i] != null) {
                      this.SalesOrderLinesAttributeGroups[i] = parseInt(odataObject.SalesOrderLinesAttributeGroups[i], 10);              } else {
                      this.SalesOrderLinesAttributeGroups[i] = undefined;
                  }
              }
          }
          this.EnableReturnPolicies = odataObject.EnableReturnPolicies;
          this.InventAvailabilityCalculationMode = odataObject.InventAvailabilityCalculationMode;
          this.IsPriceInclusiveTaxExemptCalculationEnabled = odataObject.IsPriceInclusiveTaxExemptCalculationEnabled;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelProperty entity class.
     */
    export class ChannelPropertyClass implements ChannelProperty {
        public Name: string;
        public Value: string;
        public Channel: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Value = odataObject.Value;
          this.Channel = (odataObject.Channel != null) ? parseInt(odataObject.Channel, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelLanguage entity class.
     */
    export class ChannelLanguageClass implements ChannelLanguage {
        public LanguageId: string;
        public IsDefault: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LanguageId = odataObject.LanguageId;
          this.IsDefault = odataObject.IsDefault;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * NonSalesTransaction entity class.
     */
    export class NonSalesTransactionClass extends TransactionClass implements NonSalesTransaction {
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public Amount: number;
        public ForeignCurrency: string;
        public OpenDrawer: boolean;
        public DenominationDetails: Entities.DenominationDetail[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.ForeignCurrency = odataObject.ForeignCurrency;
          this.OpenDrawer = odataObject.OpenDrawer;
          this.DenominationDetails = undefined;
          if (odataObject.DenominationDetails) {
              this.DenominationDetails = [];
              for (var i = 0; i < odataObject.DenominationDetails.length; i++) {
                  if (odataObject.DenominationDetails[i] != null) {
                      if (odataObject.DenominationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.DenominationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DenominationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.DenominationDetails[i])
                          }
                      } else {
                          this.DenominationDetails[i] = new DenominationDetailClass(odataObject.DenominationDetails[i]);
                      }
                  } else {
                      this.DenominationDetails[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.NonSalesTransaction";
            
        }
    }
    
    /**
     * DropAndDeclareTransaction entity class.
     */
    export class DropAndDeclareTransactionClass extends TransactionClass implements DropAndDeclareTransaction {
        public TenderDetails: Entities.TenderDetail[];
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public OpenDrawer: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.TenderDetails = undefined;
          if (odataObject.TenderDetails) {
              this.TenderDetails = [];
              for (var i = 0; i < odataObject.TenderDetails.length; i++) {
                  if (odataObject.TenderDetails[i] != null) {
                      if (odataObject.TenderDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderDetails[i] = new Commerce.Proxy.Entities[className](odataObject.TenderDetails[i])
                          }
                      } else {
                          this.TenderDetails[i] = new TenderDetailClass(odataObject.TenderDetails[i]);
                      }
                  } else {
                      this.TenderDetails[i] = undefined;
                  }
              }
          }
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.OpenDrawer = odataObject.OpenDrawer; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.DropAndDeclareTransaction";
            
        }
    }
    
    /**
     * ProductSearchCriteria entity class.
     */
    export class ProductSearchCriteriaClass implements ProductSearchCriteria {
        public Ids: number[];
        public CategoryIds: number[];
        public IncludeProductsFromDescendantCategories: boolean;
        public SearchCondition: string;
        public SkipVariantExpansion: boolean;
        public IncludeAttributes: boolean;
        public Barcodes: string[];
        public ItemIds: Entities.ProductLookupClause[];
        public Refinement: Entities.ProductRefinerValue[];
        public CustomerAccountNumber: string;
        public RecommendationListId: string;
        public DownloadProductData: boolean;
        public Context: Entities.ProjectionDomain;
        public Language: string;
        public IsOnline: boolean;
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Ids = undefined;
          if (odataObject.Ids) {
              this.Ids = [];
              for (var i = 0; i < odataObject.Ids.length; i++) {
                  if (odataObject.Ids[i] != null) {
                      this.Ids[i] = parseInt(odataObject.Ids[i], 10);              } else {
                      this.Ids[i] = undefined;
                  }
              }
          }
          this.CategoryIds = undefined;
          if (odataObject.CategoryIds) {
              this.CategoryIds = [];
              for (var i = 0; i < odataObject.CategoryIds.length; i++) {
                  if (odataObject.CategoryIds[i] != null) {
                      this.CategoryIds[i] = parseInt(odataObject.CategoryIds[i], 10);              } else {
                      this.CategoryIds[i] = undefined;
                  }
              }
          }
          this.IncludeProductsFromDescendantCategories = odataObject.IncludeProductsFromDescendantCategories;
          this.SearchCondition = odataObject.SearchCondition;
          this.SkipVariantExpansion = odataObject.SkipVariantExpansion;
          this.IncludeAttributes = odataObject.IncludeAttributes;
          this.Barcodes = undefined;
          if (odataObject.Barcodes) {
              this.Barcodes = [];
              for (var i = 0; i < odataObject.Barcodes.length; i++) {
                  if (odataObject.Barcodes[i] != null) {
                      this.Barcodes[i] = odataObject.Barcodes[i];              } else {
                      this.Barcodes[i] = undefined;
                  }
              }
          }
          this.ItemIds = undefined;
          if (odataObject.ItemIds) {
              this.ItemIds = [];
              for (var i = 0; i < odataObject.ItemIds.length; i++) {
                  if (odataObject.ItemIds[i] != null) {
                      if (odataObject.ItemIds[i]['@odata.type'] != null) {
                          var className: string = odataObject.ItemIds[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ItemIds[i] = new Commerce.Proxy.Entities[className](odataObject.ItemIds[i])
                          }
                      } else {
                          this.ItemIds[i] = new ProductLookupClauseClass(odataObject.ItemIds[i]);
                      }
                  } else {
                      this.ItemIds[i] = undefined;
                  }
              }
          }
          this.Refinement = undefined;
          if (odataObject.Refinement) {
              this.Refinement = [];
              for (var i = 0; i < odataObject.Refinement.length; i++) {
                  if (odataObject.Refinement[i] != null) {
                      if (odataObject.Refinement[i]['@odata.type'] != null) {
                          var className: string = odataObject.Refinement[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Refinement[i] = new Commerce.Proxy.Entities[className](odataObject.Refinement[i])
                          }
                      } else {
                          this.Refinement[i] = new ProductRefinerValueClass(odataObject.Refinement[i]);
                      }
                  } else {
                      this.Refinement[i] = undefined;
                  }
              }
          }
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.RecommendationListId = odataObject.RecommendationListId;
          this.DownloadProductData = odataObject.DownloadProductData;
          if (odataObject.Context == null) {
              this.Context = undefined;
          } else if (odataObject.Context['@odata.type'] == null) {
              this.Context = new ProjectionDomainClass(odataObject.Context);
          } else {
              var className: string = odataObject.Context['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Context = new Commerce.Proxy.Entities[className](odataObject.Context)
              }
          }

    
          this.Language = odataObject.Language;
          this.IsOnline = odataObject.IsOnline;
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * ChangedProductsSearchCriteria entity class.
     */
    export class ChangedProductsSearchCriteriaClass implements ChangedProductsSearchCriteria {
        public SynchronizationToken: string;
        public Context: Entities.ProjectionDomain;
        public AsListings: boolean;
        public Session: Entities.ReadChangedProductsSession;
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SynchronizationToken = odataObject.SynchronizationToken;
          if (odataObject.Context == null) {
              this.Context = undefined;
          } else if (odataObject.Context['@odata.type'] == null) {
              this.Context = new ProjectionDomainClass(odataObject.Context);
          } else {
              var className: string = odataObject.Context['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Context = new Commerce.Proxy.Entities[className](odataObject.Context)
              }
          }

    
          this.AsListings = odataObject.AsListings;
          if (odataObject.Session == null) {
              this.Session = undefined;
          } else if (odataObject.Session['@odata.type'] == null) {
              this.Session = new ReadChangedProductsSessionClass(odataObject.Session);
          } else {
              var className: string = odataObject.Session['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Session = new Commerce.Proxy.Entities[className](odataObject.Session)
              }
          }

    
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * EmployeeActivitySearchCriteria entity class.
     */
    export class EmployeeActivitySearchCriteriaClass implements EmployeeActivitySearchCriteria {
        public FromDateTimeOffset: Date;
        public ToDateTimeOffset: Date;
        public StoreNumber: string;
        public EmployeeActivityTypeValues: number[];
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FromDateTimeOffset = (odataObject.FromDateTimeOffset instanceof Date) ? odataObject.FromDateTimeOffset
            : (odataObject.FromDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.FromDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
          this.ToDateTimeOffset = (odataObject.ToDateTimeOffset instanceof Date) ? odataObject.ToDateTimeOffset
            : (odataObject.ToDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ToDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
          this.StoreNumber = odataObject.StoreNumber;
          this.EmployeeActivityTypeValues = undefined;
          if (odataObject.EmployeeActivityTypeValues) {
              this.EmployeeActivityTypeValues = [];
              for (var i = 0; i < odataObject.EmployeeActivityTypeValues.length; i++) {
                  if (odataObject.EmployeeActivityTypeValues[i] != null) {
                      this.EmployeeActivityTypeValues[i] = odataObject.EmployeeActivityTypeValues[i];              } else {
                      this.EmployeeActivityTypeValues[i] = undefined;
                  }
              }
          }
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * SearchSuggestionCriteria entity class.
     */
    export class SearchSuggestionCriteriaClass implements SearchSuggestionCriteria {
        public ProductSearchCriteria: Entities.ProductSearchCriteria;
        public SuggestionType: string;
        public HitPrefix: string;
        public HitSuffix: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.ProductSearchCriteria == null) {
              this.ProductSearchCriteria = undefined;
          } else if (odataObject.ProductSearchCriteria['@odata.type'] == null) {
              this.ProductSearchCriteria = new ProductSearchCriteriaClass(odataObject.ProductSearchCriteria);
          } else {
              var className: string = odataObject.ProductSearchCriteria['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ProductSearchCriteria = new Commerce.Proxy.Entities[className](odataObject.ProductSearchCriteria)
              }
          }

    
          this.SuggestionType = odataObject.SuggestionType;
          this.HitPrefix = odataObject.HitPrefix;
          this.HitSuffix = odataObject.HitSuffix;
        }
    }
    
    /**
     * CartLineDeliveryPreference entity class.
     */
    export class CartLineDeliveryPreferenceClass implements CartLineDeliveryPreference {
        public LineId: string;
        public DeliveryPreferenceTypeValues: number[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          this.DeliveryPreferenceTypeValues = undefined;
          if (odataObject.DeliveryPreferenceTypeValues) {
              this.DeliveryPreferenceTypeValues = [];
              for (var i = 0; i < odataObject.DeliveryPreferenceTypeValues.length; i++) {
                  if (odataObject.DeliveryPreferenceTypeValues[i] != null) {
                      this.DeliveryPreferenceTypeValues[i] = odataObject.DeliveryPreferenceTypeValues[i];              } else {
                      this.DeliveryPreferenceTypeValues[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CartLinePromotion entity class.
     */
    export class CartLinePromotionClass implements CartLinePromotion {
        public LineId: string;
        public Promotions: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          this.Promotions = undefined;
          if (odataObject.Promotions) {
              this.Promotions = [];
              for (var i = 0; i < odataObject.Promotions.length; i++) {
                  if (odataObject.Promotions[i] != null) {
                      this.Promotions[i] = odataObject.Promotions[i];              } else {
                      this.Promotions[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductVariant entity class.
     */
    export class ProductVariantClass implements ProductVariant {
        public ItemId: string;
        public MasterProductId: number;
        public InventoryDimensionId: string;
        public AdjustedPrice: number;
        public BasePrice: number;
        public Price: number;
        public Color: string;
        public Style: string;
        public Size: string;
        public Configuration: string;
        public ColorId: string;
        public StyleId: string;
        public SizeId: string;
        public ConfigId: string;
        public VariantId: string;
        public Images: Entities.RichMediaLocations[];
        public DistinctProductVariantId: number;
        public ProductNumber: string;
        public PropertiesAsList: Entities.ProductPropertyTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.MasterProductId = (odataObject.MasterProductId != null) ? parseInt(odataObject.MasterProductId, 10) : undefined;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.AdjustedPrice = (odataObject.AdjustedPrice != null) ? parseFloat(odataObject.AdjustedPrice) : undefined;
          this.BasePrice = (odataObject.BasePrice != null) ? parseFloat(odataObject.BasePrice) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.Color = odataObject.Color;
          this.Style = odataObject.Style;
          this.Size = odataObject.Size;
          this.Configuration = odataObject.Configuration;
          this.ColorId = odataObject.ColorId;
          this.StyleId = odataObject.StyleId;
          this.SizeId = odataObject.SizeId;
          this.ConfigId = odataObject.ConfigId;
          this.VariantId = odataObject.VariantId;
          this.Images = undefined;
          if (odataObject.Images) {
              this.Images = [];
              for (var i = 0; i < odataObject.Images.length; i++) {
                  if (odataObject.Images[i] != null) {
                      if (odataObject.Images[i]['@odata.type'] != null) {
                          var className: string = odataObject.Images[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Images[i] = new Commerce.Proxy.Entities[className](odataObject.Images[i])
                          }
                      } else {
                          this.Images[i] = new RichMediaLocationsClass(odataObject.Images[i]);
                      }
                  } else {
                      this.Images[i] = undefined;
                  }
              }
          }
          this.DistinctProductVariantId = (odataObject.DistinctProductVariantId != null) ? parseInt(odataObject.DistinctProductVariantId, 10) : undefined;
          this.ProductNumber = odataObject.ProductNumber;
          this.PropertiesAsList = undefined;
          if (odataObject.PropertiesAsList) {
              this.PropertiesAsList = [];
              for (var i = 0; i < odataObject.PropertiesAsList.length; i++) {
                  if (odataObject.PropertiesAsList[i] != null) {
                      if (odataObject.PropertiesAsList[i]['@odata.type'] != null) {
                          var className: string = odataObject.PropertiesAsList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PropertiesAsList[i] = new Commerce.Proxy.Entities[className](odataObject.PropertiesAsList[i])
                          }
                      } else {
                          this.PropertiesAsList[i] = new ProductPropertyTranslationClass(odataObject.PropertiesAsList[i]);
                      }
                  } else {
                      this.PropertiesAsList[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareProfilePrinter entity class.
     */
    export class HardwareProfilePrinterClass implements HardwareProfilePrinter {
        public ProfileId: string;
        public DeviceTypeValue: number;
        public DeviceName: string;
        public DeviceMake: string;
        public DeviceModel: string;
        public DeviceDescription: string;
        public CharacterSet: number;
        public ReceiptProfileId: string;
        public BinaryConversion: boolean;
        public DocInsertRemovalTimeout: number;
        public Logo: string;
        public LogoAlignment: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProfileId = odataObject.ProfileId;
          this.DeviceTypeValue = odataObject.DeviceTypeValue;
          this.DeviceName = odataObject.DeviceName;
          this.DeviceMake = odataObject.DeviceMake;
          this.DeviceModel = odataObject.DeviceModel;
          this.DeviceDescription = odataObject.DeviceDescription;
          this.CharacterSet = odataObject.CharacterSet;
          this.ReceiptProfileId = odataObject.ReceiptProfileId;
          this.BinaryConversion = odataObject.BinaryConversion;
          this.DocInsertRemovalTimeout = odataObject.DocInsertRemovalTimeout;
          this.Logo = odataObject.Logo;
          this.LogoAlignment = odataObject.LogoAlignment;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareProfileScanner entity class.
     */
    export class HardwareProfileScannerClass implements HardwareProfileScanner {
        public ProfileId: string;
        public DeviceTypeValue: number;
        public DeviceName: string;
        public DeviceDescription: string;
        public DecodeData: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProfileId = odataObject.ProfileId;
          this.DeviceTypeValue = odataObject.DeviceTypeValue;
          this.DeviceName = odataObject.DeviceName;
          this.DeviceDescription = odataObject.DeviceDescription;
          this.DecodeData = odataObject.DecodeData;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareProfileCashDrawer entity class.
     */
    export class HardwareProfileCashDrawerClass implements HardwareProfileCashDrawer {
        public ProfileId: string;
        public DeviceTypeValue: number;
        public DeviceName: string;
        public DeviceDescription: string;
        public DeviceMake: string;
        public DeviceModel: string;
        public IsSharedShiftDrawer: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProfileId = odataObject.ProfileId;
          this.DeviceTypeValue = odataObject.DeviceTypeValue;
          this.DeviceName = odataObject.DeviceName;
          this.DeviceDescription = odataObject.DeviceDescription;
          this.DeviceMake = odataObject.DeviceMake;
          this.DeviceModel = odataObject.DeviceModel;
          this.IsSharedShiftDrawer = odataObject.IsSharedShiftDrawer;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TillLayout entity class.
     */
    export class TillLayoutClass implements TillLayout {
        public CashChangerLayoutXml: string;
        public CustomerLayoutId: string;
        public CustomerLayoutXml: string;
        public Height: number;
        public LayoutId: string;
        public LayoutTypeValue: number;
        public LayoutXml: string;
        public LayoutXmlPortrait: string;
        public Name: string;
        public ReceiptId: string;
        public ReceiptItemsLayoutXml: string;
        public ReceiptPaymentLayoutXml: string;
        public TotalId: string;
        public TotalsLayoutXml: string;
        public Width: number;
        public RecordId: number;
        public StartScreen: number;
        public ButtonGridZones: Entities.ButtonGridZone[];
        public ImageZones: Entities.ImageZone[];
        public ReportZones: Entities.ReportZone[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CashChangerLayoutXml = odataObject.CashChangerLayoutXml;
          this.CustomerLayoutId = odataObject.CustomerLayoutId;
          this.CustomerLayoutXml = odataObject.CustomerLayoutXml;
          this.Height = odataObject.Height;
          this.LayoutId = odataObject.LayoutId;
          this.LayoutTypeValue = odataObject.LayoutTypeValue;
          this.LayoutXml = odataObject.LayoutXml;
          this.LayoutXmlPortrait = odataObject.LayoutXmlPortrait;
          this.Name = odataObject.Name;
          this.ReceiptId = odataObject.ReceiptId;
          this.ReceiptItemsLayoutXml = odataObject.ReceiptItemsLayoutXml;
          this.ReceiptPaymentLayoutXml = odataObject.ReceiptPaymentLayoutXml;
          this.TotalId = odataObject.TotalId;
          this.TotalsLayoutXml = odataObject.TotalsLayoutXml;
          this.Width = odataObject.Width;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.StartScreen = odataObject.StartScreen;
          this.ButtonGridZones = undefined;
          if (odataObject.ButtonGridZones) {
              this.ButtonGridZones = [];
              for (var i = 0; i < odataObject.ButtonGridZones.length; i++) {
                  if (odataObject.ButtonGridZones[i] != null) {
                      if (odataObject.ButtonGridZones[i]['@odata.type'] != null) {
                          var className: string = odataObject.ButtonGridZones[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ButtonGridZones[i] = new Commerce.Proxy.Entities[className](odataObject.ButtonGridZones[i])
                          }
                      } else {
                          this.ButtonGridZones[i] = new ButtonGridZoneClass(odataObject.ButtonGridZones[i]);
                      }
                  } else {
                      this.ButtonGridZones[i] = undefined;
                  }
              }
          }
          this.ImageZones = undefined;
          if (odataObject.ImageZones) {
              this.ImageZones = [];
              for (var i = 0; i < odataObject.ImageZones.length; i++) {
                  if (odataObject.ImageZones[i] != null) {
                      if (odataObject.ImageZones[i]['@odata.type'] != null) {
                          var className: string = odataObject.ImageZones[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ImageZones[i] = new Commerce.Proxy.Entities[className](odataObject.ImageZones[i])
                          }
                      } else {
                          this.ImageZones[i] = new ImageZoneClass(odataObject.ImageZones[i]);
                      }
                  } else {
                      this.ImageZones[i] = undefined;
                  }
              }
          }
          this.ReportZones = undefined;
          if (odataObject.ReportZones) {
              this.ReportZones = [];
              for (var i = 0; i < odataObject.ReportZones.length; i++) {
                  if (odataObject.ReportZones[i] != null) {
                      if (odataObject.ReportZones[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReportZones[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReportZones[i] = new Commerce.Proxy.Entities[className](odataObject.ReportZones[i])
                          }
                      } else {
                          this.ReportZones[i] = new ReportZoneClass(odataObject.ReportZones[i]);
                      }
                  } else {
                      this.ReportZones[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesInvoice entity class.
     */
    export class SalesInvoiceClass implements SalesInvoice {
        public RecordId: number;
        public Id: string;
        public SalesId: string;
        public SalesType: string;
        public InvoiceDate: Date;
        public CurrencyCode: string;
        public Amount: number;
        public AmountPaid: number;
        public Account: string;
        public Name: string;
        public TotalManualDiscountPercentage: number;
        public TotalManualDiscountAmount: number;
        public SalesInvoiceLine: Entities.SalesInvoiceLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Id = odataObject.Id;
          this.SalesId = odataObject.SalesId;
          this.SalesType = odataObject.SalesType;
          this.InvoiceDate = (odataObject.InvoiceDate instanceof Date) ? odataObject.InvoiceDate
            : (odataObject.InvoiceDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.InvoiceDate, "Edm.DateTimeOffset", false) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
          this.Account = odataObject.Account;
          this.Name = odataObject.Name;
          this.TotalManualDiscountPercentage = (odataObject.TotalManualDiscountPercentage != null) ? parseFloat(odataObject.TotalManualDiscountPercentage) : undefined;
          this.TotalManualDiscountAmount = (odataObject.TotalManualDiscountAmount != null) ? parseFloat(odataObject.TotalManualDiscountAmount) : undefined;
          this.SalesInvoiceLine = undefined;
          if (odataObject.SalesInvoiceLine) {
              this.SalesInvoiceLine = [];
              for (var i = 0; i < odataObject.SalesInvoiceLine.length; i++) {
                  if (odataObject.SalesInvoiceLine[i] != null) {
                      if (odataObject.SalesInvoiceLine[i]['@odata.type'] != null) {
                          var className: string = odataObject.SalesInvoiceLine[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SalesInvoiceLine[i] = new Commerce.Proxy.Entities[className](odataObject.SalesInvoiceLine[i])
                          }
                      } else {
                          this.SalesInvoiceLine[i] = new SalesInvoiceLineClass(odataObject.SalesInvoiceLine[i]);
                      }
                  } else {
                      this.SalesInvoiceLine[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrderInvoice entity class.
     */
    export class OrderInvoiceClass implements OrderInvoice {
        public Id: string;
        public CustomerAccountNumber: string;
        public CustomerName: string;
        public InvoiceDate: Date;
        public TotalAmount: number;
        public AmountPaid: number;
        public AmountBalance: number;
        public InvoiceTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.CustomerName = odataObject.CustomerName;
          this.InvoiceDate = (odataObject.InvoiceDate instanceof Date) ? odataObject.InvoiceDate
            : (odataObject.InvoiceDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.InvoiceDate, "Edm.DateTimeOffset", false) : undefined;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.AmountPaid = (odataObject.AmountPaid != null) ? parseFloat(odataObject.AmountPaid) : undefined;
          this.AmountBalance = (odataObject.AmountBalance != null) ? parseFloat(odataObject.AmountBalance) : undefined;
          this.InvoiceTypeValue = odataObject.InvoiceTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TaxOverride entity class.
     */
    export class TaxOverrideClass implements TaxOverride {
        public Code: string;
        public SourceTaxGroup: string;
        public DestinationTaxGroup: string;
        public SourceItemTaxGroup: string;
        public DestinationItemTaxGroup: string;
        public ChannelId: number;
        public AdditionalDescription: string;
        public Status: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Code = odataObject.Code;
          this.SourceTaxGroup = odataObject.SourceTaxGroup;
          this.DestinationTaxGroup = odataObject.DestinationTaxGroup;
          this.SourceItemTaxGroup = odataObject.SourceItemTaxGroup;
          this.DestinationItemTaxGroup = odataObject.DestinationItemTaxGroup;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.AdditionalDescription = odataObject.AdditionalDescription;
          this.Status = odataObject.Status;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TenderType entity class.
     */
    export class TenderTypeClass implements TenderType {
        public Function: number;
        public TenderTypeId: string;
        public Name: string;
        public OperationId: number;
        public OperationName: string;
        public ChangeTenderTypeId: string;
        public AboveMinimumChangeAmount: number;
        public AboveMinimumChangeTenderTypeId: string;
        public OpenDrawer: boolean;
        public UseSignatureCaptureDevice: boolean;
        public MinimumSignatureCaptureAmount: number;
        public IsOvertenderAllowed: boolean;
        public IsUndertenderAllowed: boolean;
        public MaximumOvertenderAmount: number;
        public MaximumUndertenderAmount: number;
        public MaximumAmountPerTransaction: number;
        public MaximumAmountPerLine: number;
        public MinimumAmountPerTransaction: number;
        public MinimumAmountPerLine: number;
        public RoundOff: number;
        public CountingRequired: number;
        public TakenToBank: number;
        public TakenToSafe: number;
        public ConnectorId: string;
        public GiftCardItem: string;
        public GiftCardCashoutOutThreshold: number;
        public ChangeLineOnReceipt: string;
        public HideCardInputDetails: boolean;
        public CashDrawerLimitEnabled: boolean;
        public CashDrawerLimit: number;
        public RestrictReturnsWithoutReceipt: boolean;
        public HasTenderDiscount: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Function = odataObject.Function;
          this.TenderTypeId = odataObject.TenderTypeId;
          this.Name = odataObject.Name;
          this.OperationId = odataObject.OperationId;
          this.OperationName = odataObject.OperationName;
          this.ChangeTenderTypeId = odataObject.ChangeTenderTypeId;
          this.AboveMinimumChangeAmount = (odataObject.AboveMinimumChangeAmount != null) ? parseFloat(odataObject.AboveMinimumChangeAmount) : undefined;
          this.AboveMinimumChangeTenderTypeId = odataObject.AboveMinimumChangeTenderTypeId;
          this.OpenDrawer = odataObject.OpenDrawer;
          this.UseSignatureCaptureDevice = odataObject.UseSignatureCaptureDevice;
          this.MinimumSignatureCaptureAmount = (odataObject.MinimumSignatureCaptureAmount != null) ? parseFloat(odataObject.MinimumSignatureCaptureAmount) : undefined;
          this.IsOvertenderAllowed = odataObject.IsOvertenderAllowed;
          this.IsUndertenderAllowed = odataObject.IsUndertenderAllowed;
          this.MaximumOvertenderAmount = (odataObject.MaximumOvertenderAmount != null) ? parseFloat(odataObject.MaximumOvertenderAmount) : undefined;
          this.MaximumUndertenderAmount = (odataObject.MaximumUndertenderAmount != null) ? parseFloat(odataObject.MaximumUndertenderAmount) : undefined;
          this.MaximumAmountPerTransaction = (odataObject.MaximumAmountPerTransaction != null) ? parseFloat(odataObject.MaximumAmountPerTransaction) : undefined;
          this.MaximumAmountPerLine = (odataObject.MaximumAmountPerLine != null) ? parseFloat(odataObject.MaximumAmountPerLine) : undefined;
          this.MinimumAmountPerTransaction = (odataObject.MinimumAmountPerTransaction != null) ? parseFloat(odataObject.MinimumAmountPerTransaction) : undefined;
          this.MinimumAmountPerLine = (odataObject.MinimumAmountPerLine != null) ? parseFloat(odataObject.MinimumAmountPerLine) : undefined;
          this.RoundOff = (odataObject.RoundOff != null) ? parseFloat(odataObject.RoundOff) : undefined;
          this.CountingRequired = odataObject.CountingRequired;
          this.TakenToBank = odataObject.TakenToBank;
          this.TakenToSafe = odataObject.TakenToSafe;
          this.ConnectorId = odataObject.ConnectorId;
          this.GiftCardItem = odataObject.GiftCardItem;
          this.GiftCardCashoutOutThreshold = (odataObject.GiftCardCashoutOutThreshold != null) ? parseFloat(odataObject.GiftCardCashoutOutThreshold) : undefined;
          this.ChangeLineOnReceipt = odataObject.ChangeLineOnReceipt;
          this.HideCardInputDetails = odataObject.HideCardInputDetails;
          this.CashDrawerLimitEnabled = odataObject.CashDrawerLimitEnabled;
          this.CashDrawerLimit = (odataObject.CashDrawerLimit != null) ? parseFloat(odataObject.CashDrawerLimit) : undefined;
          this.RestrictReturnsWithoutReceipt = odataObject.RestrictReturnsWithoutReceipt;
          this.HasTenderDiscount = odataObject.HasTenderDiscount;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReasonCode entity class.
     */
    export class ReasonCodeClass implements ReasonCode {
        public InputRequired: boolean;
        public LinkedReasonCodeId: string;
        public MaximumLength: number;
        public MaximumValue: number;
        public MinimumLength: number;
        public MinimumValue: number;
        public OncePerTransaction: boolean;
        public PrintInputNameOnReceipt: boolean;
        public PrintInputToReceipt: boolean;
        public PrintPromptToReceipt: boolean;
        public Prompt: string;
        public RandomFactor: number;
        public RetailUseReasonCode: boolean;
        public ReasonCodeId: string;
        public Description: string;
        public InputTypeValue: number;
        public ActivityValue: number;
        public IsMultiLineText: boolean;
        public ReasonSubCodes: Entities.ReasonSubCode[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.InputRequired = odataObject.InputRequired;
          this.LinkedReasonCodeId = odataObject.LinkedReasonCodeId;
          this.MaximumLength = odataObject.MaximumLength;
          this.MaximumValue = (odataObject.MaximumValue != null) ? parseFloat(odataObject.MaximumValue) : undefined;
          this.MinimumLength = odataObject.MinimumLength;
          this.MinimumValue = (odataObject.MinimumValue != null) ? parseFloat(odataObject.MinimumValue) : undefined;
          this.OncePerTransaction = odataObject.OncePerTransaction;
          this.PrintInputNameOnReceipt = odataObject.PrintInputNameOnReceipt;
          this.PrintInputToReceipt = odataObject.PrintInputToReceipt;
          this.PrintPromptToReceipt = odataObject.PrintPromptToReceipt;
          this.Prompt = odataObject.Prompt;
          this.RandomFactor = (odataObject.RandomFactor != null) ? parseFloat(odataObject.RandomFactor) : undefined;
          this.RetailUseReasonCode = odataObject.RetailUseReasonCode;
          this.ReasonCodeId = odataObject.ReasonCodeId;
          this.Description = odataObject.Description;
          this.InputTypeValue = odataObject.InputTypeValue;
          this.ActivityValue = odataObject.ActivityValue;
          this.IsMultiLineText = odataObject.IsMultiLineText;
          this.ReasonSubCodes = undefined;
          if (odataObject.ReasonSubCodes) {
              this.ReasonSubCodes = [];
              for (var i = 0; i < odataObject.ReasonSubCodes.length; i++) {
                  if (odataObject.ReasonSubCodes[i] != null) {
                      if (odataObject.ReasonSubCodes[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonSubCodes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonSubCodes[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonSubCodes[i])
                          }
                      } else {
                          this.ReasonSubCodes[i] = new ReasonSubCodeClass(odataObject.ReasonSubCodes[i]);
                      }
                  } else {
                      this.ReasonSubCodes[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReportDataSet entity class.
     */
    export class ReportDataSetClass implements ReportDataSet {
        public ReportId: string;
        public Parameters: Entities.CommerceProperty[];
        public Locale: string;
        public Output: Entities.ReportRow[];
        public HasTotalRow: boolean;
        public HasDisclaimer: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ReportId = odataObject.ReportId;
          this.Parameters = undefined;
          if (odataObject.Parameters) {
              this.Parameters = [];
              for (var i = 0; i < odataObject.Parameters.length; i++) {
                  if (odataObject.Parameters[i] != null) {
                      if (odataObject.Parameters[i]['@odata.type'] != null) {
                          var className: string = odataObject.Parameters[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Parameters[i] = new Commerce.Proxy.Entities[className](odataObject.Parameters[i])
                          }
                      } else {
                          this.Parameters[i] = new CommercePropertyClass(odataObject.Parameters[i]);
                      }
                  } else {
                      this.Parameters[i] = undefined;
                  }
              }
          }
          this.Locale = odataObject.Locale;
          this.Output = undefined;
          if (odataObject.Output) {
              this.Output = [];
              for (var i = 0; i < odataObject.Output.length; i++) {
                  if (odataObject.Output[i] != null) {
                      if (odataObject.Output[i]['@odata.type'] != null) {
                          var className: string = odataObject.Output[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Output[i] = new Commerce.Proxy.Entities[className](odataObject.Output[i])
                          }
                      } else {
                          this.Output[i] = new ReportRowClass(odataObject.Output[i]);
                      }
                  } else {
                      this.Output[i] = undefined;
                  }
              }
          }
          this.HasTotalRow = odataObject.HasTotalRow;
          this.HasDisclaimer = odataObject.HasDisclaimer;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ZipCodeInfo entity class.
     */
    export class ZipCodeInfoClass implements ZipCodeInfo {
        public ZipPostalCode: string;
        public StreetName: string;
        public TimeZone: number;
        public CountryRegionId: string;
        public StateId: string;
        public CountyId: string;
        public CityName: string;
        public CityAlias: string;
        public District: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ZipPostalCode = odataObject.ZipPostalCode;
          this.StreetName = odataObject.StreetName;
          this.TimeZone = odataObject.TimeZone;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.StateId = odataObject.StateId;
          this.CountyId = odataObject.CountyId;
          this.CityName = odataObject.CityName;
          this.CityAlias = odataObject.CityAlias;
          this.District = odataObject.District;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReasonCodeRequirement entity class.
     */
    export class ReasonCodeRequirementClass implements ReasonCodeRequirement {
        public ReasonCodeId: string;
        public SourceId: string;
        public TableRefTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ReasonCodeId = odataObject.ReasonCodeId;
          this.SourceId = odataObject.SourceId;
          this.TableRefTypeValue = odataObject.TableRefTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * QueryResultSettings entity class.
     */
    export class QueryResultSettingsClass implements QueryResultSettings {
        public Paging: Entities.PagingInfo;
        public Sorting: Entities.SortingInfo;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.Paging == null) {
              this.Paging = undefined;
          } else if (odataObject.Paging['@odata.type'] == null) {
              this.Paging = new PagingInfoClass(odataObject.Paging);
          } else {
              var className: string = odataObject.Paging['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Paging = new Commerce.Proxy.Entities[className](odataObject.Paging)
              }
          }

    
          if (odataObject.Sorting == null) {
              this.Sorting = undefined;
          } else if (odataObject.Sorting['@odata.type'] == null) {
              this.Sorting = new SortingInfoClass(odataObject.Sorting);
          } else {
              var className: string = odataObject.Sorting['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Sorting = new Commerce.Proxy.Entities[className](odataObject.Sorting)
              }
          }

    
        }
    }
    
    /**
     * SortingInfo entity class.
     */
    export class SortingInfoClass implements SortingInfo {
        public Columns: Entities.SortColumn[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Columns = undefined;
          if (odataObject.Columns) {
              this.Columns = [];
              for (var i = 0; i < odataObject.Columns.length; i++) {
                  if (odataObject.Columns[i] != null) {
                      if (odataObject.Columns[i]['@odata.type'] != null) {
                          var className: string = odataObject.Columns[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Columns[i] = new Commerce.Proxy.Entities[className](odataObject.Columns[i])
                          }
                      } else {
                          this.Columns[i] = new SortColumnClass(odataObject.Columns[i]);
                      }
                  } else {
                      this.Columns[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SortColumn entity class.
     */
    export class SortColumnClass implements SortColumn {
        public ColumnName: string;
        public IsDescending: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ColumnName = odataObject.ColumnName;
          this.IsDescending = odataObject.IsDescending;
        }
    }
    
    /**
     * PagingInfo entity class.
     */
    export class PagingInfoClass implements PagingInfo {
        public Top: number;
        public Skip: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Top = (odataObject.Top != null) ? parseInt(odataObject.Top, 10) : undefined;
          this.Skip = (odataObject.Skip != null) ? parseInt(odataObject.Skip, 10) : undefined;
        }
    }
    
    /**
     * ProductPropertyTranslation entity class.
     */
    export class ProductPropertyTranslationClass implements ProductPropertyTranslation {
        public TranslationLanguage: string;
        public TranslatedProperties: Entities.ProductProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TranslationLanguage = odataObject.TranslationLanguage;
          this.TranslatedProperties = undefined;
          if (odataObject.TranslatedProperties) {
              this.TranslatedProperties = [];
              for (var i = 0; i < odataObject.TranslatedProperties.length; i++) {
                  if (odataObject.TranslatedProperties[i] != null) {
                      if (odataObject.TranslatedProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.TranslatedProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TranslatedProperties[i] = new Commerce.Proxy.Entities[className](odataObject.TranslatedProperties[i])
                          }
                      } else {
                          this.TranslatedProperties[i] = new ProductPropertyClass(odataObject.TranslatedProperties[i]);
                      }
                  } else {
                      this.TranslatedProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * NumberSequenceSeedData entity class.
     */
    export class NumberSequenceSeedDataClass implements NumberSequenceSeedData {
        public DataTypeValue: number;
        public DataValue: number;
        public LastTransactionDataValue: number;
        public LastTransactionCreatedDateTime: Date;
        public LastTransactionId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DataTypeValue = odataObject.DataTypeValue;
          this.DataValue = (odataObject.DataValue != null) ? parseInt(odataObject.DataValue, 10) : undefined;
          this.LastTransactionDataValue = (odataObject.LastTransactionDataValue != null) ? parseInt(odataObject.LastTransactionDataValue, 10) : undefined;
          this.LastTransactionCreatedDateTime = (odataObject.LastTransactionCreatedDateTime instanceof Date) ? odataObject.LastTransactionCreatedDateTime
            : (odataObject.LastTransactionCreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastTransactionCreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.LastTransactionId = odataObject.LastTransactionId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReceiptNumberResetInfo entity class.
     */
    export class ReceiptNumberResetInfoClass implements ReceiptNumberResetInfo {
        public ValidFrom: Date;
        public ValidTo: Date;
        public ResetDate: Date;
        public TypeValue: number;
        public Enabled: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.ResetDate = (odataObject.ResetDate instanceof Date) ? odataObject.ResetDate
            : (odataObject.ResetDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ResetDate, "Edm.DateTimeOffset", false) : undefined;
          this.TypeValue = odataObject.TypeValue;
          this.Enabled = odataObject.Enabled;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DeviceActivationResult entity class.
     */
    export class DeviceActivationResultClass implements DeviceActivationResult {
        public Device: Entities.Device;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.Device == null) {
              this.Device = undefined;
          } else if (odataObject.Device['@odata.type'] == null) {
              this.Device = new DeviceClass(odataObject.Device);
          } else {
              var className: string = odataObject.Device['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Device = new Commerce.Proxy.Entities[className](odataObject.Device)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PurchaseHistory entity class.
     */
    export class PurchaseHistoryClass implements PurchaseHistory {
        public DatePurchased: Date;
        public ImageUrl: string;
        public ItemId: string;
        public ProductId: number;
        public ProductName: string;
        public ReceiptId: string;
        public SalesId: string;
        public ChannelId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DatePurchased = (odataObject.DatePurchased instanceof Date) ? odataObject.DatePurchased
            : (odataObject.DatePurchased != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DatePurchased, "Edm.DateTimeOffset", false) : undefined;
          this.ImageUrl = odataObject.ImageUrl;
          this.ItemId = odataObject.ItemId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ProductName = odataObject.ProductName;
          this.ReceiptId = odataObject.ReceiptId;
          this.SalesId = odataObject.SalesId;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Node entity class.
     */
    export class NodeClass implements Node {
        public ParentScopeId: string;
        public ParentSequence: number;
        public Id: string;
        public Sequence: number;
        public Description: string;
        public ScreenshotUri: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ParentScopeId = odataObject.ParentScopeId;
          this.ParentSequence = odataObject.ParentSequence;
          this.Id = odataObject.Id;
          this.Sequence = odataObject.Sequence;
          this.Description = odataObject.Description;
          this.ScreenshotUri = odataObject.ScreenshotUri;
        }
    }
    
    /**
     * Line entity class.
     */
    export class LineClass implements Line {
        public ChildrenIds: number[];
        public Id: number;
        public Name: string;
        public Description: string;
        public IsLinked: boolean;
        public LineMetadataId: number;
        public Artifacts: Entities.ArtifactSummary[];
        public MetadataPropertyValues: Entities.MetadataPropertyValue[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChildrenIds = undefined;
          if (odataObject.ChildrenIds) {
              this.ChildrenIds = [];
              for (var i = 0; i < odataObject.ChildrenIds.length; i++) {
                  if (odataObject.ChildrenIds[i] != null) {
                      this.ChildrenIds[i] = parseInt(odataObject.ChildrenIds[i], 10);              } else {
                      this.ChildrenIds[i] = undefined;
                  }
              }
          }
          this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.IsLinked = odataObject.IsLinked;
          this.LineMetadataId = (odataObject.LineMetadataId != null) ? parseInt(odataObject.LineMetadataId, 10) : undefined;
          this.Artifacts = undefined;
          if (odataObject.Artifacts) {
              this.Artifacts = [];
              for (var i = 0; i < odataObject.Artifacts.length; i++) {
                  if (odataObject.Artifacts[i] != null) {
                      if (odataObject.Artifacts[i]['@odata.type'] != null) {
                          var className: string = odataObject.Artifacts[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Artifacts[i] = new Commerce.Proxy.Entities[className](odataObject.Artifacts[i])
                          }
                      } else {
                          this.Artifacts[i] = new ArtifactSummaryClass(odataObject.Artifacts[i]);
                      }
                  } else {
                      this.Artifacts[i] = undefined;
                  }
              }
          }
          this.MetadataPropertyValues = undefined;
          if (odataObject.MetadataPropertyValues) {
              this.MetadataPropertyValues = [];
              for (var i = 0; i < odataObject.MetadataPropertyValues.length; i++) {
                  if (odataObject.MetadataPropertyValues[i] != null) {
                      if (odataObject.MetadataPropertyValues[i]['@odata.type'] != null) {
                          var className: string = odataObject.MetadataPropertyValues[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.MetadataPropertyValues[i] = new Commerce.Proxy.Entities[className](odataObject.MetadataPropertyValues[i])
                          }
                      } else {
                          this.MetadataPropertyValues[i] = new MetadataPropertyValueClass(odataObject.MetadataPropertyValues[i]);
                      }
                  } else {
                      this.MetadataPropertyValues[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Scope entity class.
     */
    export class ScopeClass extends NodeClass implements Scope {
        public Name: string;
        public ScopeTypeValue: number;
        public Children: Entities.Node[];
        public ActiveCount: number;
        public IsForm: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.ScopeTypeValue = odataObject.ScopeTypeValue;
          this.Children = undefined;
          if (odataObject.Children) {
              this.Children = [];
              for (var i = 0; i < odataObject.Children.length; i++) {
                  if (odataObject.Children[i] != null) {
                      if (odataObject.Children[i]['@odata.type'] != null) {
                          var className: string = odataObject.Children[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Children[i] = new Commerce.Proxy.Entities[className](odataObject.Children[i])
                          }
                      } else {
                          this.Children[i] = new NodeClass(odataObject.Children[i]);
                      }
                  } else {
                      this.Children[i] = undefined;
                  }
              }
          }
          this.ActiveCount = odataObject.ActiveCount;
          this.IsForm = odataObject.IsForm; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.Scope";
            
        }
    }
    
    /**
     * Framework entity class.
     */
    export class FrameworkClass implements Framework {
        public Lines: Entities.Line[];
        public Id: number;
        public Name: string;
        public Access: string;
        public Hierarchy: Entities.Line[];
        public Publisher: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Lines = undefined;
          if (odataObject.Lines) {
              this.Lines = [];
              for (var i = 0; i < odataObject.Lines.length; i++) {
                  if (odataObject.Lines[i] != null) {
                      if (odataObject.Lines[i]['@odata.type'] != null) {
                          var className: string = odataObject.Lines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Lines[i] = new Commerce.Proxy.Entities[className](odataObject.Lines[i])
                          }
                      } else {
                          this.Lines[i] = new LineClass(odataObject.Lines[i]);
                      }
                  } else {
                      this.Lines[i] = undefined;
                  }
              }
          }
          this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
          this.Name = odataObject.Name;
          this.Access = odataObject.Access;
          this.Hierarchy = undefined;
          if (odataObject.Hierarchy) {
              this.Hierarchy = [];
              for (var i = 0; i < odataObject.Hierarchy.length; i++) {
                  if (odataObject.Hierarchy[i] != null) {
                      if (odataObject.Hierarchy[i]['@odata.type'] != null) {
                          var className: string = odataObject.Hierarchy[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Hierarchy[i] = new Commerce.Proxy.Entities[className](odataObject.Hierarchy[i])
                          }
                      } else {
                          this.Hierarchy[i] = new LineClass(odataObject.Hierarchy[i]);
                      }
                  } else {
                      this.Hierarchy[i] = undefined;
                  }
              }
          }
          this.Publisher = odataObject.Publisher;
        }
    }
    
    /**
     * UserAction entity class.
     */
    export class UserActionClass extends NodeClass implements UserAction {
        public SystemGenerated: boolean;
        public GlobalId: string;
        public Annotations: Entities.Annotation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.SystemGenerated = odataObject.SystemGenerated;
          this.GlobalId = odataObject.GlobalId;
          this.Annotations = undefined;
          if (odataObject.Annotations) {
              this.Annotations = [];
              for (var i = 0; i < odataObject.Annotations.length; i++) {
                  if (odataObject.Annotations[i] != null) {
                      if (odataObject.Annotations[i]['@odata.type'] != null) {
                          var className: string = odataObject.Annotations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Annotations[i] = new Commerce.Proxy.Entities[className](odataObject.Annotations[i])
                          }
                      } else {
                          this.Annotations[i] = new AnnotationClass(odataObject.Annotations[i]);
                      }
                  } else {
                      this.Annotations[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.UserAction";
            
        }
    }
    
    /**
     * TaskUserAction entity class.
     */
    export class TaskUserActionClass extends UserActionClass implements TaskUserAction {
        public UserActionTypeValue: number;
        public Name: string;
        public Comment: string;
        public TaskId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.UserActionTypeValue = odataObject.UserActionTypeValue;
          this.Name = odataObject.Name;
          this.Comment = odataObject.Comment;
          this.TaskId = odataObject.TaskId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaskUserAction";
            
        }
    }
    
    /**
     * FormUserAction entity class.
     */
    export class FormUserActionClass extends UserActionClass implements FormUserAction {
        public FormId: string;
        public ControlLabel: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.FormId = odataObject.FormId;
          this.ControlLabel = odataObject.ControlLabel; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FormUserAction";
            
        }
    }
    
    /**
     * CommandUserAction entity class.
     */
    export class CommandUserActionClass extends FormUserActionClass implements CommandUserAction {
        public ReturnTypeValue: number;
        public CommandName: string;
        public ControlName: string;
        public ControlType: string;
        public Arguments: Entities.CommandArgument[];
        public LabelId: string;
        public ReturnValue: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ReturnTypeValue = odataObject.ReturnTypeValue;
          this.CommandName = odataObject.CommandName;
          this.ControlName = odataObject.ControlName;
          this.ControlType = odataObject.ControlType;
          this.Arguments = undefined;
          if (odataObject.Arguments) {
              this.Arguments = [];
              for (var i = 0; i < odataObject.Arguments.length; i++) {
                  if (odataObject.Arguments[i] != null) {
                      if (odataObject.Arguments[i]['@odata.type'] != null) {
                          var className: string = odataObject.Arguments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Arguments[i] = new Commerce.Proxy.Entities[className](odataObject.Arguments[i])
                          }
                      } else {
                          this.Arguments[i] = new CommandArgumentClass(odataObject.Arguments[i]);
                      }
                  } else {
                      this.Arguments[i] = undefined;
                  }
              }
          }
          this.LabelId = odataObject.LabelId;
          this.ReturnValue = odataObject.ReturnValue; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.CommandUserAction";
            
        }
    }
    
    /**
     * Annotation entity class.
     */
    export class AnnotationClass implements Annotation {
        public Description: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Description = odataObject.Description;
        }
    }
    
    /**
     * Recording entity class.
     */
    export class RecordingClass implements Recording {
        public Scopes: Entities.Scope[];
        public FormContextEntries: Entities.FormContextDictionaryEntry[];
        public RootScope: Entities.Scope;
        public Name: string;
        public Description: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Scopes = undefined;
          if (odataObject.Scopes) {
              this.Scopes = [];
              for (var i = 0; i < odataObject.Scopes.length; i++) {
                  if (odataObject.Scopes[i] != null) {
                      if (odataObject.Scopes[i]['@odata.type'] != null) {
                          var className: string = odataObject.Scopes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Scopes[i] = new Commerce.Proxy.Entities[className](odataObject.Scopes[i])
                          }
                      } else {
                          this.Scopes[i] = new ScopeClass(odataObject.Scopes[i]);
                      }
                  } else {
                      this.Scopes[i] = undefined;
                  }
              }
          }
          this.FormContextEntries = undefined;
          if (odataObject.FormContextEntries) {
              this.FormContextEntries = [];
              for (var i = 0; i < odataObject.FormContextEntries.length; i++) {
                  if (odataObject.FormContextEntries[i] != null) {
                      if (odataObject.FormContextEntries[i]['@odata.type'] != null) {
                          var className: string = odataObject.FormContextEntries[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FormContextEntries[i] = new Commerce.Proxy.Entities[className](odataObject.FormContextEntries[i])
                          }
                      } else {
                          this.FormContextEntries[i] = new FormContextDictionaryEntryClass(odataObject.FormContextEntries[i]);
                      }
                  } else {
                      this.FormContextEntries[i] = undefined;
                  }
              }
          }
          if (odataObject.RootScope == null) {
              this.RootScope = undefined;
          } else if (odataObject.RootScope['@odata.type'] == null) {
              this.RootScope = new ScopeClass(odataObject.RootScope);
          } else {
              var className: string = odataObject.RootScope['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.RootScope = new Commerce.Proxy.Entities[className](odataObject.RootScope)
              }
          }

    
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
        }
    }
    
    /**
     * FormContextDictionaryEntry entity class.
     */
    export class FormContextDictionaryEntryClass implements FormContextDictionaryEntry {
        public FormId: string;
        public FormContext: Entities.FormContext;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FormId = odataObject.FormId;
          if (odataObject.FormContext == null) {
              this.FormContext = undefined;
          } else if (odataObject.FormContext['@odata.type'] == null) {
              this.FormContext = new FormContextClass(odataObject.FormContext);
          } else {
              var className: string = odataObject.FormContext['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FormContext = new Commerce.Proxy.Entities[className](odataObject.FormContext)
              }
          }

    
        }
    }
    
    /**
     * ProductVariantResolutionContext entity class.
     */
    export class ProductVariantResolutionContextClass implements ProductVariantResolutionContext {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
        }
    }
    
    /**
     * ProductVariantResolutionOnKitSelectionContext entity class.
     */
    export class ProductVariantResolutionOnKitSelectionContextClass extends ProductVariantResolutionContextClass implements ProductVariantResolutionOnKitSelectionContext {
        public SelectedComponents: Entities.ComponentInSlotRelation[];
        public SlotId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.SelectedComponents = undefined;
          if (odataObject.SelectedComponents) {
              this.SelectedComponents = [];
              for (var i = 0; i < odataObject.SelectedComponents.length; i++) {
                  if (odataObject.SelectedComponents[i] != null) {
                      if (odataObject.SelectedComponents[i]['@odata.type'] != null) {
                          var className: string = odataObject.SelectedComponents[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SelectedComponents[i] = new Commerce.Proxy.Entities[className](odataObject.SelectedComponents[i])
                          }
                      } else {
                          this.SelectedComponents[i] = new ComponentInSlotRelationClass(odataObject.SelectedComponents[i]);
                      }
                  } else {
                      this.SelectedComponents[i] = undefined;
                  }
              }
          }
          this.SlotId = (odataObject.SlotId != null) ? parseInt(odataObject.SlotId, 10) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ProductVariantResolutionOnKitSelectionContext";
            
        }
    }
    
    /**
     * WarehouseLocation entity class.
     */
    export class WarehouseLocationClass implements WarehouseLocation {
        public LocationId: string;
        public IsLicensePlateControlled: boolean;
        public ProfileId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LocationId = odataObject.LocationId;
          this.IsLicensePlateControlled = odataObject.IsLicensePlateControlled;
          this.ProfileId = odataObject.ProfileId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalTransaction entity class.
     */
    export class FiscalTransactionClass implements FiscalTransaction {
        public CreatedDateTime: Date;
        public StoreId: string;
        public TerminalId: string;
        public TransactionId: string;
        public TransDateTime: Date;
        public LineNumber: number;
        public RegisterResponse: string;
        public ReceiptCopy: boolean;
        public RecordGUID: string;
        public RegisterStoreId: string;
        public RegisterTerminalId: string;
        public StaffId: string;
        public RegistrationStatusValue: number;
        public RegistrationProcessId: string;
        public ConnectorGroup: string;
        public ConnectorName: string;
        public ConnectorFunctionalityProfileId: string;
        public RegisterInfo: string;
        public DocumentNumber: string;
        public RegistrationTypeValue: number;
        public ServiceName: string;
        public CountryRegionIsoCode: string;
        public TenderLineAdjustments: Entities.FiscalTransactionTenderLineAdjustment[];
        public SalesLineAdjustments: Entities.FiscalTransactionSalesLineAdjustment[];
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.TransactionId = odataObject.TransactionId;
          this.TransDateTime = (odataObject.TransDateTime instanceof Date) ? odataObject.TransDateTime
            : (odataObject.TransDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TransDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.RegisterResponse = odataObject.RegisterResponse;
          this.ReceiptCopy = odataObject.ReceiptCopy;
          this.RecordGUID = odataObject.RecordGUID;
          this.RegisterStoreId = odataObject.RegisterStoreId;
          this.RegisterTerminalId = odataObject.RegisterTerminalId;
          this.StaffId = odataObject.StaffId;
          this.RegistrationStatusValue = odataObject.RegistrationStatusValue;
          this.RegistrationProcessId = odataObject.RegistrationProcessId;
          this.ConnectorGroup = odataObject.ConnectorGroup;
          this.ConnectorName = odataObject.ConnectorName;
          this.ConnectorFunctionalityProfileId = odataObject.ConnectorFunctionalityProfileId;
          this.RegisterInfo = odataObject.RegisterInfo;
          this.DocumentNumber = odataObject.DocumentNumber;
          this.RegistrationTypeValue = odataObject.RegistrationTypeValue;
          this.ServiceName = odataObject.ServiceName;
          this.CountryRegionIsoCode = odataObject.CountryRegionIsoCode;
          this.TenderLineAdjustments = undefined;
          if (odataObject.TenderLineAdjustments) {
              this.TenderLineAdjustments = [];
              for (var i = 0; i < odataObject.TenderLineAdjustments.length; i++) {
                  if (odataObject.TenderLineAdjustments[i] != null) {
                      if (odataObject.TenderLineAdjustments[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderLineAdjustments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLineAdjustments[i])
                          }
                      } else {
                          this.TenderLineAdjustments[i] = new FiscalTransactionTenderLineAdjustmentClass(odataObject.TenderLineAdjustments[i]);
                      }
                  } else {
                      this.TenderLineAdjustments[i] = undefined;
                  }
              }
          }
          this.SalesLineAdjustments = undefined;
          if (odataObject.SalesLineAdjustments) {
              this.SalesLineAdjustments = [];
              for (var i = 0; i < odataObject.SalesLineAdjustments.length; i++) {
                  if (odataObject.SalesLineAdjustments[i] != null) {
                      if (odataObject.SalesLineAdjustments[i]['@odata.type'] != null) {
                          var className: string = odataObject.SalesLineAdjustments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SalesLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLineAdjustments[i])
                          }
                      } else {
                          this.SalesLineAdjustments[i] = new FiscalTransactionSalesLineAdjustmentClass(odataObject.SalesLineAdjustments[i]);
                      }
                  } else {
                      this.SalesLineAdjustments[i] = undefined;
                  }
              }
          }
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FulfillmentLine entity class.
     */
    export class FulfillmentLineClass implements FulfillmentLine {
        public SalesId: string;
        public SalesPersonStoreId: string;
        public SalesPersonId: string;
        public SalesPersonFirstName: string;
        public SalesPersonLastName: string;
        public SalesLineNumber: number;
        public ReceiptId: string;
        public ChannelReferenceId: string;
        public CustomerId: string;
        public CustomerName: string;
        public EmailAddress: string;
        public DeliveryModeCode: string;
        public DocumentStatusValue: number;
        public FulfillmentDeliveryType: Entities.FulfillmentLineDeliveryType;
        public DeliveryTypeValue: number;
        public QuantityOrdered: number;
        public QuantityPicked: number;
        public QuantityPacked: number;
        public QuantityInvoiced: number;
        public StoreInventoryTotalQuantity: number;
        public StoreInventoryReservedQuantity: number;
        public StoreInventoryOrderedQuantity: number;
        public ItemId: string;
        public ProductId: number;
        public ProductVariant: string;
        public ItemName: string;
        public FulfillmentStatus: Entities.FulfillmentLineStatus;
        public FulfillmentStatusValue: number;
        public UnitOfMeasureSymbol: string;
        public RequestedShipDate: Date;
        public RequestedDeliveryDate: Date;
        public RequestedReceiptDate: Date;
        public CreatedDate: Date;
        public TotalAmount: number;
        public Balance: number;
        public ShippingAddress: Entities.Address;
        public DetailedOrderStatusValue: number;
        public DetailedLineStatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesId = odataObject.SalesId;
          this.SalesPersonStoreId = odataObject.SalesPersonStoreId;
          this.SalesPersonId = odataObject.SalesPersonId;
          this.SalesPersonFirstName = odataObject.SalesPersonFirstName;
          this.SalesPersonLastName = odataObject.SalesPersonLastName;
          this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
          this.ReceiptId = odataObject.ReceiptId;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.CustomerId = odataObject.CustomerId;
          this.CustomerName = odataObject.CustomerName;
          this.EmailAddress = odataObject.EmailAddress;
          this.DeliveryModeCode = odataObject.DeliveryModeCode;
          this.DocumentStatusValue = odataObject.DocumentStatusValue;
          if (odataObject.FulfillmentDeliveryType == null) {
              this.FulfillmentDeliveryType = undefined;
          } else if (odataObject.FulfillmentDeliveryType['@odata.type'] == null) {
              this.FulfillmentDeliveryType = new FulfillmentLineDeliveryTypeClass(odataObject.FulfillmentDeliveryType);
          } else {
              var className: string = odataObject.FulfillmentDeliveryType['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FulfillmentDeliveryType = new Commerce.Proxy.Entities[className](odataObject.FulfillmentDeliveryType)
              }
          }

    
          this.DeliveryTypeValue = odataObject.DeliveryTypeValue;
          this.QuantityOrdered = (odataObject.QuantityOrdered != null) ? parseFloat(odataObject.QuantityOrdered) : undefined;
          this.QuantityPicked = (odataObject.QuantityPicked != null) ? parseFloat(odataObject.QuantityPicked) : undefined;
          this.QuantityPacked = (odataObject.QuantityPacked != null) ? parseFloat(odataObject.QuantityPacked) : undefined;
          this.QuantityInvoiced = (odataObject.QuantityInvoiced != null) ? parseFloat(odataObject.QuantityInvoiced) : undefined;
          this.StoreInventoryTotalQuantity = (odataObject.StoreInventoryTotalQuantity != null) ? parseFloat(odataObject.StoreInventoryTotalQuantity) : undefined;
          this.StoreInventoryReservedQuantity = (odataObject.StoreInventoryReservedQuantity != null) ? parseFloat(odataObject.StoreInventoryReservedQuantity) : undefined;
          this.StoreInventoryOrderedQuantity = (odataObject.StoreInventoryOrderedQuantity != null) ? parseFloat(odataObject.StoreInventoryOrderedQuantity) : undefined;
          this.ItemId = odataObject.ItemId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ProductVariant = odataObject.ProductVariant;
          this.ItemName = odataObject.ItemName;
          if (odataObject.FulfillmentStatus == null) {
              this.FulfillmentStatus = undefined;
          } else if (odataObject.FulfillmentStatus['@odata.type'] == null) {
              this.FulfillmentStatus = new FulfillmentLineStatusClass(odataObject.FulfillmentStatus);
          } else {
              var className: string = odataObject.FulfillmentStatus['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FulfillmentStatus = new Commerce.Proxy.Entities[className](odataObject.FulfillmentStatus)
              }
          }

    
          this.FulfillmentStatusValue = odataObject.FulfillmentStatusValue;
          this.UnitOfMeasureSymbol = odataObject.UnitOfMeasureSymbol;
          this.RequestedShipDate = (odataObject.RequestedShipDate instanceof Date) ? odataObject.RequestedShipDate
            : (odataObject.RequestedShipDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedShipDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequestedDeliveryDate = (odataObject.RequestedDeliveryDate instanceof Date) ? odataObject.RequestedDeliveryDate
            : (odataObject.RequestedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequestedReceiptDate = (odataObject.RequestedReceiptDate instanceof Date) ? odataObject.RequestedReceiptDate
            : (odataObject.RequestedReceiptDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptDate, "Edm.DateTimeOffset", false) : undefined;
          this.CreatedDate = (odataObject.CreatedDate instanceof Date) ? odataObject.CreatedDate
            : (odataObject.CreatedDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDate, "Edm.DateTimeOffset", false) : undefined;
          this.TotalAmount = (odataObject.TotalAmount != null) ? parseFloat(odataObject.TotalAmount) : undefined;
          this.Balance = (odataObject.Balance != null) ? parseFloat(odataObject.Balance) : undefined;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
          this.DetailedOrderStatusValue = odataObject.DetailedOrderStatusValue;
          this.DetailedLineStatusValue = odataObject.DetailedLineStatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FulfillmentLineSearchCriteria entity class.
     */
    export class FulfillmentLineSearchCriteriaClass implements FulfillmentLineSearchCriteria {
        public CustomerId: string;
        public CustomerName: string;
        public EmailAddress: string;
        public SalesId: string;
        public OrderCreatedStartDate: Date;
        public OrderCreatedEndDate: Date;
        public ReceiptId: string;
        public StoreId: string;
        public ChannelReferenceId: string;
        public RequestedReceiptStartDate: Date;
        public RequestedReceiptEndDate: Date;
        public RequestedDeliveryStartDate: Date;
        public RequestedDeliveryEndDate: Date;
        public FulfillmentStatusValues: number[];
        public DeliveryModeCode: string;
        public WarehouseId: string;
        public LoyaltyCardNumber: string;
        public CustomerPhoneNumber: string;
        public DeliveryTypeValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerId = odataObject.CustomerId;
          this.CustomerName = odataObject.CustomerName;
          this.EmailAddress = odataObject.EmailAddress;
          this.SalesId = odataObject.SalesId;
          this.OrderCreatedStartDate = (odataObject.OrderCreatedStartDate instanceof Date) ? odataObject.OrderCreatedStartDate
            : (odataObject.OrderCreatedStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OrderCreatedStartDate, "Edm.DateTimeOffset", false) : undefined;
          this.OrderCreatedEndDate = (odataObject.OrderCreatedEndDate instanceof Date) ? odataObject.OrderCreatedEndDate
            : (odataObject.OrderCreatedEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OrderCreatedEndDate, "Edm.DateTimeOffset", false) : undefined;
          this.ReceiptId = odataObject.ReceiptId;
          this.StoreId = odataObject.StoreId;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.RequestedReceiptStartDate = (odataObject.RequestedReceiptStartDate instanceof Date) ? odataObject.RequestedReceiptStartDate
            : (odataObject.RequestedReceiptStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptStartDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequestedReceiptEndDate = (odataObject.RequestedReceiptEndDate instanceof Date) ? odataObject.RequestedReceiptEndDate
            : (odataObject.RequestedReceiptEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedReceiptEndDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequestedDeliveryStartDate = (odataObject.RequestedDeliveryStartDate instanceof Date) ? odataObject.RequestedDeliveryStartDate
            : (odataObject.RequestedDeliveryStartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryStartDate, "Edm.DateTimeOffset", false) : undefined;
          this.RequestedDeliveryEndDate = (odataObject.RequestedDeliveryEndDate instanceof Date) ? odataObject.RequestedDeliveryEndDate
            : (odataObject.RequestedDeliveryEndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.RequestedDeliveryEndDate, "Edm.DateTimeOffset", false) : undefined;
          this.FulfillmentStatusValues = undefined;
          if (odataObject.FulfillmentStatusValues) {
              this.FulfillmentStatusValues = [];
              for (var i = 0; i < odataObject.FulfillmentStatusValues.length; i++) {
                  if (odataObject.FulfillmentStatusValues[i] != null) {
                      this.FulfillmentStatusValues[i] = odataObject.FulfillmentStatusValues[i];              } else {
                      this.FulfillmentStatusValues[i] = undefined;
                  }
              }
          }
          this.DeliveryModeCode = odataObject.DeliveryModeCode;
          this.WarehouseId = odataObject.WarehouseId;
          this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
          this.CustomerPhoneNumber = odataObject.CustomerPhoneNumber;
          this.DeliveryTypeValue = odataObject.DeliveryTypeValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Comment entity class.
     */
    export class CommentClass implements Comment {
        public RecordId: number;
        public AuthorStaffId: string;
        public AuthorName: string;
        public Text: string;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.AuthorStaffId = odataObject.AuthorStaffId;
          this.AuthorName = odataObject.AuthorName;
          this.Text = odataObject.Text;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AddressPurpose entity class.
     */
    export class AddressPurposeClass implements AddressPurpose {
        public RecordId: number;
        public AddressType: number;
        public Name: string;
        public Description: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.AddressType = odataObject.AddressType;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DeliveryChargeLine entity class.
     */
    export class DeliveryChargeLineClass implements DeliveryChargeLine {
        public ChargeCode: string;
        public CurrencyCode: string;
        public CalculatedAmount: number;
        public Description: string;
        public IsRefundable: boolean;
        public IsShipping: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChargeCode = odataObject.ChargeCode;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.CalculatedAmount = (odataObject.CalculatedAmount != null) ? parseFloat(odataObject.CalculatedAmount) : undefined;
          this.Description = odataObject.Description;
          this.IsRefundable = odataObject.IsRefundable;
          this.IsShipping = odataObject.IsShipping;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ExtensionPackageDefinition entity class.
     */
    export class ExtensionPackageDefinitionClass implements ExtensionPackageDefinition {
        public Name: string;
        public Publisher: string;
        public IsEnabled: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Publisher = odataObject.Publisher;
          this.IsEnabled = odataObject.IsEnabled;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReturnPolicy entity class.
     */
    export class ReturnPolicyClass implements ReturnPolicy {
        public RecordId: number;
        public TenderTypePolicies: Entities.TenderTypePolicy[];
        public IsManagerOverrideEnabled: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.TenderTypePolicies = undefined;
          if (odataObject.TenderTypePolicies) {
              this.TenderTypePolicies = [];
              for (var i = 0; i < odataObject.TenderTypePolicies.length; i++) {
                  if (odataObject.TenderTypePolicies[i] != null) {
                      if (odataObject.TenderTypePolicies[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderTypePolicies[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderTypePolicies[i] = new Commerce.Proxy.Entities[className](odataObject.TenderTypePolicies[i])
                          }
                      } else {
                          this.TenderTypePolicies[i] = new TenderTypePolicyClass(odataObject.TenderTypePolicies[i]);
                      }
                  } else {
                      this.TenderTypePolicies[i] = undefined;
                  }
              }
          }
          this.IsManagerOverrideEnabled = odataObject.IsManagerOverrideEnabled;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TenderTypeAmount entity class.
     */
    export class TenderTypeAmountClass implements TenderTypeAmount {
        public TenderTypeId: string;
        public Amount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TenderTypeId = odataObject.TenderTypeId;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FeatureState entity class.
     */
    export class FeatureStateClass implements FeatureState {
        public Name: string;
        public IsEnabled: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.IsEnabled = odataObject.IsEnabled;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Warranty entity class.
     */
    export class WarrantyClass extends SimpleProductClass implements Warranty {
        public DurationUnitValue: number;
        public Duration: number;
        public ApplicablePriceRangeBaseTypeValue: number;
        public ApplicablePriceRangeMin: number;
        public ApplicablePriceRangeMax: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.DurationUnitValue = odataObject.DurationUnitValue;
          this.Duration = odataObject.Duration;
          this.ApplicablePriceRangeBaseTypeValue = odataObject.ApplicablePriceRangeBaseTypeValue;
          this.ApplicablePriceRangeMin = (odataObject.ApplicablePriceRangeMin != null) ? parseFloat(odataObject.ApplicablePriceRangeMin) : undefined;
          this.ApplicablePriceRangeMax = (odataObject.ApplicablePriceRangeMax != null) ? parseFloat(odataObject.ApplicablePriceRangeMax) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.Warranty";
            
        }
    }
    
    /**
     * WarrantyGroup entity class.
     */
    export class WarrantyGroupClass implements WarrantyGroup {
        public Warranties: Entities.Warranty[];
        public RecordId: number;
        public GroupName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Warranties = undefined;
          if (odataObject.Warranties) {
              this.Warranties = [];
              for (var i = 0; i < odataObject.Warranties.length; i++) {
                  if (odataObject.Warranties[i] != null) {
                      if (odataObject.Warranties[i]['@odata.type'] != null) {
                          var className: string = odataObject.Warranties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Warranties[i] = new Commerce.Proxy.Entities[className](odataObject.Warranties[i])
                          }
                      } else {
                          this.Warranties[i] = new WarrantyClass(odataObject.Warranties[i]);
                      }
                  } else {
                      this.Warranties[i] = undefined;
                  }
              }
          }
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.GroupName = odataObject.GroupName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductWarrantiesMapping entity class.
     */
    export class ProductWarrantiesMappingClass implements ProductWarrantiesMapping {
        public WarrantyGroups: Entities.WarrantyGroup[];
        public WarrantableProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.WarrantyGroups = undefined;
          if (odataObject.WarrantyGroups) {
              this.WarrantyGroups = [];
              for (var i = 0; i < odataObject.WarrantyGroups.length; i++) {
                  if (odataObject.WarrantyGroups[i] != null) {
                      if (odataObject.WarrantyGroups[i]['@odata.type'] != null) {
                          var className: string = odataObject.WarrantyGroups[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.WarrantyGroups[i] = new Commerce.Proxy.Entities[className](odataObject.WarrantyGroups[i])
                          }
                      } else {
                          this.WarrantyGroups[i] = new WarrantyGroupClass(odataObject.WarrantyGroups[i]);
                      }
                  } else {
                      this.WarrantyGroups[i] = undefined;
                  }
              }
          }
          this.WarrantableProductId = (odataObject.WarrantableProductId != null) ? parseInt(odataObject.WarrantableProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FulfillmentLineContextualOperationsMap entity class.
     */
    export class FulfillmentLineContextualOperationsMapClass implements FulfillmentLineContextualOperationsMap {
        public FulfillmentLine: Entities.FulfillmentLine;
        public ApplicableOperationsValues: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.FulfillmentLine == null) {
              this.FulfillmentLine = undefined;
          } else if (odataObject.FulfillmentLine['@odata.type'] == null) {
              this.FulfillmentLine = new FulfillmentLineClass(odataObject.FulfillmentLine);
          } else {
              var className: string = odataObject.FulfillmentLine['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FulfillmentLine = new Commerce.Proxy.Entities[className](odataObject.FulfillmentLine)
              }
          }

    
          this.ApplicableOperationsValues = undefined;
          if (odataObject.ApplicableOperationsValues) {
              this.ApplicableOperationsValues = [];
              for (var i = 0; i < odataObject.ApplicableOperationsValues.length; i++) {
                  if (odataObject.ApplicableOperationsValues[i] != null) {
                      this.ApplicableOperationsValues[i] = odataObject.ApplicableOperationsValues[i];              } else {
                      this.ApplicableOperationsValues[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * BusinessPartnerProspect entity class.
     */
    export class BusinessPartnerProspectClass implements BusinessPartnerProspect {
        public FirstName: string;
        public LastName: string;
        public CompanyName: string;
        public Address: Entities.Address;
        public JobTitle: string;
        public Department: string;
        public CompanySize: number;
        public Comments: string;
        public LastOperationId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FirstName = odataObject.FirstName;
          this.LastName = odataObject.LastName;
          this.CompanyName = odataObject.CompanyName;
          if (odataObject.Address == null) {
              this.Address = undefined;
          } else if (odataObject.Address['@odata.type'] == null) {
              this.Address = new AddressClass(odataObject.Address);
          } else {
              var className: string = odataObject.Address['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Address = new Commerce.Proxy.Entities[className](odataObject.Address)
              }
          }

    
          this.JobTitle = odataObject.JobTitle;
          this.Department = odataObject.Department;
          this.CompanySize = odataObject.CompanySize;
          this.Comments = odataObject.Comments;
          this.LastOperationId = odataObject.LastOperationId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChecklistTask entity class.
     */
    export class ChecklistTaskClass implements ChecklistTask {
        public Version: string;
        public AssignedToPersonnelNumbers: string[];
        public Id: string;
        public Name: string;
        public Description: string;
        public DueDateTime: Date;
        public DeepLinkTypeValue: number;
        public DeepLink: string;
        public DeepLinkPosOperationName: string;
        public ContactPersonPersonnelNumber: string;
        public Instructions: string;
        public StatusValue: number;
        public CompletionDateTime: Date;
        public ResolvedByPersonnelNumber: string;
        public ChecklistId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Version = odataObject.Version;
          this.AssignedToPersonnelNumbers = undefined;
          if (odataObject.AssignedToPersonnelNumbers) {
              this.AssignedToPersonnelNumbers = [];
              for (var i = 0; i < odataObject.AssignedToPersonnelNumbers.length; i++) {
                  if (odataObject.AssignedToPersonnelNumbers[i] != null) {
                      this.AssignedToPersonnelNumbers[i] = odataObject.AssignedToPersonnelNumbers[i];              } else {
                      this.AssignedToPersonnelNumbers[i] = undefined;
                  }
              }
          }
          this.Id = odataObject.Id;
          this.Name = odataObject.Name;
          this.Description = odataObject.Description;
          this.DueDateTime = (odataObject.DueDateTime instanceof Date) ? odataObject.DueDateTime
            : (odataObject.DueDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DueDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.DeepLinkTypeValue = odataObject.DeepLinkTypeValue;
          this.DeepLink = odataObject.DeepLink;
          this.DeepLinkPosOperationName = odataObject.DeepLinkPosOperationName;
          this.ContactPersonPersonnelNumber = odataObject.ContactPersonPersonnelNumber;
          this.Instructions = odataObject.Instructions;
          this.StatusValue = odataObject.StatusValue;
          this.CompletionDateTime = (odataObject.CompletionDateTime instanceof Date) ? odataObject.CompletionDateTime
            : (odataObject.CompletionDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CompletionDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ResolvedByPersonnelNumber = odataObject.ResolvedByPersonnelNumber;
          this.ChecklistId = odataObject.ChecklistId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * MediaLocation entity class.
     */
    export class MediaLocationClass implements MediaLocation {
        public Uri: string;
        public AltText: string;
        public IsDefault: boolean;
        public IsSelfHosted: boolean;
        public Priority: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Uri = odataObject.Uri;
          this.AltText = odataObject.AltText;
          this.IsDefault = odataObject.IsDefault;
          this.IsSelfHosted = odataObject.IsSelfHosted;
          this.Priority = odataObject.Priority;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * EmployeeActivity entity class.
     */
    export class EmployeeActivityClass implements EmployeeActivity {
        public StaffId: string;
        public StaffName: string;
        public Activity: string;
        public ActivityDateTimeOffset: Date;
        public StoreNumber: string;
        public EmployeeActivityTypeValue: number;
        public BreakCategory: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.StaffId = odataObject.StaffId;
          this.StaffName = odataObject.StaffName;
          this.Activity = odataObject.Activity;
          this.ActivityDateTimeOffset = (odataObject.ActivityDateTimeOffset instanceof Date) ? odataObject.ActivityDateTimeOffset
            : (odataObject.ActivityDateTimeOffset != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ActivityDateTimeOffset, "Edm.DateTimeOffset", false) : undefined;
          this.StoreNumber = odataObject.StoreNumber;
          this.EmployeeActivityTypeValue = odataObject.EmployeeActivityTypeValue;
          this.BreakCategory = odataObject.BreakCategory;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TokenizedPaymentCard entity class.
     */
    export class TokenizedPaymentCardClass implements TokenizedPaymentCard {
        public IsSwipe: boolean;
        public TenderType: string;
        public CardTokenInfo: Entities.CardTokenInfo;
        public Phone: string;
        public Country: string;
        public House: string;
        public Address1: string;
        public Address2: string;
        public City: string;
        public State: string;
        public Zip: string;
        public NameOnCard: string;
        public CardTypeId: string;
        public ExpirationMonth: number;
        public ExpirationYear: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsSwipe = odataObject.IsSwipe;
          this.TenderType = odataObject.TenderType;
          if (odataObject.CardTokenInfo == null) {
              this.CardTokenInfo = undefined;
          } else if (odataObject.CardTokenInfo['@odata.type'] == null) {
              this.CardTokenInfo = new CardTokenInfoClass(odataObject.CardTokenInfo);
          } else {
              var className: string = odataObject.CardTokenInfo['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.CardTokenInfo = new Commerce.Proxy.Entities[className](odataObject.CardTokenInfo)
              }
          }

    
          this.Phone = odataObject.Phone;
          this.Country = odataObject.Country;
          this.House = odataObject.House;
          this.Address1 = odataObject.Address1;
          this.Address2 = odataObject.Address2;
          this.City = odataObject.City;
          this.State = odataObject.State;
          this.Zip = odataObject.Zip;
          this.NameOnCard = odataObject.NameOnCard;
          this.CardTypeId = odataObject.CardTypeId;
          this.ExpirationMonth = odataObject.ExpirationMonth;
          this.ExpirationYear = odataObject.ExpirationYear;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LineShippingAddress entity class.
     */
    export class LineShippingAddressClass implements LineShippingAddress {
        public LineId: string;
        public ShippingAddress: Entities.Address;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          if (odataObject.ShippingAddress == null) {
              this.ShippingAddress = undefined;
          } else if (odataObject.ShippingAddress['@odata.type'] == null) {
              this.ShippingAddress = new AddressClass(odataObject.ShippingAddress);
          } else {
              var className: string = odataObject.ShippingAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ShippingAddress = new Commerce.Proxy.Entities[className](odataObject.ShippingAddress)
              }
          }

    
        }
    }
    
    /**
     * CartDeliveryPreferences entity class.
     */
    export class CartDeliveryPreferencesClass implements CartDeliveryPreferences {
        public HeaderDeliveryPreferenceTypeValues: number[];
        public CartLineDeliveryPreferences: Entities.CartLineDeliveryPreference[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HeaderDeliveryPreferenceTypeValues = undefined;
          if (odataObject.HeaderDeliveryPreferenceTypeValues) {
              this.HeaderDeliveryPreferenceTypeValues = [];
              for (var i = 0; i < odataObject.HeaderDeliveryPreferenceTypeValues.length; i++) {
                  if (odataObject.HeaderDeliveryPreferenceTypeValues[i] != null) {
                      this.HeaderDeliveryPreferenceTypeValues[i] = odataObject.HeaderDeliveryPreferenceTypeValues[i];              } else {
                      this.HeaderDeliveryPreferenceTypeValues[i] = undefined;
                  }
              }
          }
          this.CartLineDeliveryPreferences = undefined;
          if (odataObject.CartLineDeliveryPreferences) {
              this.CartLineDeliveryPreferences = [];
              for (var i = 0; i < odataObject.CartLineDeliveryPreferences.length; i++) {
                  if (odataObject.CartLineDeliveryPreferences[i] != null) {
                      if (odataObject.CartLineDeliveryPreferences[i]['@odata.type'] != null) {
                          var className: string = odataObject.CartLineDeliveryPreferences[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CartLineDeliveryPreferences[i] = new Commerce.Proxy.Entities[className](odataObject.CartLineDeliveryPreferences[i])
                          }
                      } else {
                          this.CartLineDeliveryPreferences[i] = new CartLineDeliveryPreferenceClass(odataObject.CartLineDeliveryPreferences[i]);
                      }
                  } else {
                      this.CartLineDeliveryPreferences[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LineDeliverySpecification entity class.
     */
    export class LineDeliverySpecificationClass implements LineDeliverySpecification {
        public LineId: string;
        public DeliverySpecification: Entities.DeliverySpecification;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          if (odataObject.DeliverySpecification == null) {
              this.DeliverySpecification = undefined;
          } else if (odataObject.DeliverySpecification['@odata.type'] == null) {
              this.DeliverySpecification = new DeliverySpecificationClass(odataObject.DeliverySpecification);
          } else {
              var className: string = odataObject.DeliverySpecification['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DeliverySpecification = new Commerce.Proxy.Entities[className](odataObject.DeliverySpecification)
              }
          }

    
        }
    }
    
    /**
     * DeliverySpecification entity class.
     */
    export class DeliverySpecificationClass implements DeliverySpecification {
        public DeliveryModeId: string;
        public DeliveryPreferenceTypeValue: number;
        public DeliveryAddress: Entities.Address;
        public PickUpStoreId: string;
        public ElectronicDeliveryEmailAddress: string;
        public ElectronicDeliveryEmailContent: string;
        public ShipFromStoreId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DeliveryModeId = odataObject.DeliveryModeId;
          this.DeliveryPreferenceTypeValue = odataObject.DeliveryPreferenceTypeValue;
          if (odataObject.DeliveryAddress == null) {
              this.DeliveryAddress = undefined;
          } else if (odataObject.DeliveryAddress['@odata.type'] == null) {
              this.DeliveryAddress = new AddressClass(odataObject.DeliveryAddress);
          } else {
              var className: string = odataObject.DeliveryAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DeliveryAddress = new Commerce.Proxy.Entities[className](odataObject.DeliveryAddress)
              }
          }

    
          this.PickUpStoreId = odataObject.PickUpStoreId;
          this.ElectronicDeliveryEmailAddress = odataObject.ElectronicDeliveryEmailAddress;
          this.ElectronicDeliveryEmailContent = odataObject.ElectronicDeliveryEmailContent;
          this.ShipFromStoreId = odataObject.ShipFromStoreId;
        }
    }
    
    /**
     * OrderSearchCriteria entity class.
     */
    export class OrderSearchCriteriaClass implements OrderSearchCriteria {
        public CustomerAccountNumber: string;
        public CustomerName: string;
        public EmailAddress: string;
        public LoyaltyCardNumber: string;
        public CustomerPhoneNumber: string;
        public SalesId: string;
        public ReceiptId: string;
        public OrderStatusValues: number[];
        public StartDateTime: Date;
        public EndDateTime: Date;
        public ChannelReferenceId: string;
        public StoreId: string;
        public OrderType: number;
        public CustomFilters: Entities.SearchFilter[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.CustomerName = odataObject.CustomerName;
          this.EmailAddress = odataObject.EmailAddress;
          this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
          this.CustomerPhoneNumber = odataObject.CustomerPhoneNumber;
          this.SalesId = odataObject.SalesId;
          this.ReceiptId = odataObject.ReceiptId;
          this.OrderStatusValues = undefined;
          if (odataObject.OrderStatusValues) {
              this.OrderStatusValues = [];
              for (var i = 0; i < odataObject.OrderStatusValues.length; i++) {
                  if (odataObject.OrderStatusValues[i] != null) {
                      this.OrderStatusValues[i] = odataObject.OrderStatusValues[i];              } else {
                      this.OrderStatusValues[i] = undefined;
                  }
              }
          }
          this.StartDateTime = (odataObject.StartDateTime instanceof Date) ? odataObject.StartDateTime
            : (odataObject.StartDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.EndDateTime = (odataObject.EndDateTime instanceof Date) ? odataObject.EndDateTime
            : (odataObject.EndDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ChannelReferenceId = odataObject.ChannelReferenceId;
          this.StoreId = odataObject.StoreId;
          this.OrderType = odataObject.OrderType;
          this.CustomFilters = undefined;
          if (odataObject.CustomFilters) {
              this.CustomFilters = [];
              for (var i = 0; i < odataObject.CustomFilters.length; i++) {
                  if (odataObject.CustomFilters[i] != null) {
                      if (odataObject.CustomFilters[i]['@odata.type'] != null) {
                          var className: string = odataObject.CustomFilters[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CustomFilters[i] = new Commerce.Proxy.Entities[className](odataObject.CustomFilters[i])
                          }
                      } else {
                          this.CustomFilters[i] = new SearchFilterClass(odataObject.CustomFilters[i]);
                      }
                  } else {
                      this.CustomFilters[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChecklistSearchCriteria entity class.
     */
    export class ChecklistSearchCriteriaClass implements ChecklistSearchCriteria {
        public ChannelId: number;
        public PersonnelNumber: string;
        public ChecklistIds: string[];
        public StatusValues: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.PersonnelNumber = odataObject.PersonnelNumber;
          this.ChecklistIds = undefined;
          if (odataObject.ChecklistIds) {
              this.ChecklistIds = [];
              for (var i = 0; i < odataObject.ChecklistIds.length; i++) {
                  if (odataObject.ChecklistIds[i] != null) {
                      this.ChecklistIds[i] = odataObject.ChecklistIds[i];              } else {
                      this.ChecklistIds[i] = undefined;
                  }
              }
          }
          this.StatusValues = undefined;
          if (odataObject.StatusValues) {
              this.StatusValues = [];
              for (var i = 0; i < odataObject.StatusValues.length; i++) {
                  if (odataObject.StatusValues[i] != null) {
                      this.StatusValues[i] = odataObject.StatusValues[i];              } else {
                      this.StatusValues[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TaskSearchCriteria entity class.
     */
    export class TaskSearchCriteriaClass implements TaskSearchCriteria {
        public ChannelId: number;
        public PersonnelNumber: string;
        public TaskIds: string[];
        public StatusValues: number[];
        public FilterMyTasks: boolean;
        public FilterOverdueTasks: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.PersonnelNumber = odataObject.PersonnelNumber;
          this.TaskIds = undefined;
          if (odataObject.TaskIds) {
              this.TaskIds = [];
              for (var i = 0; i < odataObject.TaskIds.length; i++) {
                  if (odataObject.TaskIds[i] != null) {
                      this.TaskIds[i] = odataObject.TaskIds[i];              } else {
                      this.TaskIds[i] = undefined;
                  }
              }
          }
          this.StatusValues = undefined;
          if (odataObject.StatusValues) {
              this.StatusValues = [];
              for (var i = 0; i < odataObject.StatusValues.length; i++) {
                  if (odataObject.StatusValues[i] != null) {
                      this.StatusValues[i] = odataObject.StatusValues[i];              } else {
                      this.StatusValues[i] = undefined;
                  }
              }
          }
          this.FilterMyTasks = odataObject.FilterMyTasks;
          this.FilterOverdueTasks = odataObject.FilterOverdueTasks;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TenderDiscountLine entity class.
     */
    export class TenderDiscountLineClass implements TenderDiscountLine {
        public DiscountAmount: number;
        public PaymentAmount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.PaymentAmount = (odataObject.PaymentAmount != null) ? parseFloat(odataObject.PaymentAmount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReceiptRetrievalCriteria entity class.
     */
    export class ReceiptRetrievalCriteriaClass implements ReceiptRetrievalCriteria {
        public IsCopy: boolean;
        public IsRemoteTransaction: boolean;
        public IsPreview: boolean;
        public QueryBySalesId: boolean;
        public ReceiptTypeValue: number;
        public ShiftId: number;
        public ShiftTerminalId: string;
        public HardwareProfileId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsCopy = odataObject.IsCopy;
          this.IsRemoteTransaction = odataObject.IsRemoteTransaction;
          this.IsPreview = odataObject.IsPreview;
          this.QueryBySalesId = odataObject.QueryBySalesId;
          this.ReceiptTypeValue = odataObject.ReceiptTypeValue;
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          this.HardwareProfileId = odataObject.HardwareProfileId;
        }
    }
    
    /**
     * CartSearchCriteria entity class.
     */
    export class CartSearchCriteriaClass implements CartSearchCriteria {
        public CartId: string;
        public ExpectedCartVersion: number;
        public CustomerAccountNumber: string;
        public IncludeAnonymous: boolean;
        public SuspendedOnly: boolean;
        public CartTypeValue: number;
        public LastModifiedDateTimeFrom: Date;
        public LastModifiedDateTimeTo: Date;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CartId = odataObject.CartId;
          this.ExpectedCartVersion = (odataObject.ExpectedCartVersion != null) ? parseInt(odataObject.ExpectedCartVersion, 10) : undefined;
          this.CustomerAccountNumber = odataObject.CustomerAccountNumber;
          this.IncludeAnonymous = odataObject.IncludeAnonymous;
          this.SuspendedOnly = odataObject.SuspendedOnly;
          this.CartTypeValue = odataObject.CartTypeValue;
          this.LastModifiedDateTimeFrom = (odataObject.LastModifiedDateTimeFrom instanceof Date) ? odataObject.LastModifiedDateTimeFrom
            : (odataObject.LastModifiedDateTimeFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastModifiedDateTimeFrom, "Edm.DateTimeOffset", false) : undefined;
          this.LastModifiedDateTimeTo = (odataObject.LastModifiedDateTimeTo instanceof Date) ? odataObject.LastModifiedDateTimeTo
            : (odataObject.LastModifiedDateTimeTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastModifiedDateTimeTo, "Edm.DateTimeOffset", false) : undefined;
        }
    }
    
    /**
     * RetrievePaymentResultSettings entity class.
     */
    export class RetrievePaymentResultSettingsClass implements RetrievePaymentResultSettings {
        public ReturnUrl: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ReturnUrl = odataObject.ReturnUrl;
        }
    }
    
    /**
     * SearchReceiptCriteria entity class.
     */
    export class SearchReceiptCriteriaClass implements SearchReceiptCriteria {
        public TransactionId: string;
        public ReceiptTypeValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionId = odataObject.TransactionId;
          this.ReceiptTypeValue = odataObject.ReceiptTypeValue;
        }
    }
    
    /**
     * ElectronicAddress entity class.
     */
    export class ElectronicAddressClass implements ElectronicAddress {
        public AddressTypeValue: number;
        public Address: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AddressTypeValue = odataObject.AddressTypeValue;
          this.Address = odataObject.Address;
        }
    }
    
    /**
     * FulfillmentLineParameter entity class.
     */
    export class FulfillmentLineParameterClass implements FulfillmentLineParameter {
        public SalesId: string;
        public SalesLineNumber: number;
        public Quantity: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesId = odataObject.SalesId;
          this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShipFulfillmentLine entity class.
     */
    export class ShipFulfillmentLineClass extends FulfillmentLineParameterClass implements ShipFulfillmentLine {
        public ProductId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ShipFulfillmentLine";
            
        }
    }
    
    /**
     * RejectFulfillmentLine entity class.
     */
    export class RejectFulfillmentLineClass extends FulfillmentLineParameterClass implements RejectFulfillmentLine {
        public RejectedQuantity: number;
        public InfoCodeId: string;
        public SubInfoCodeId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RejectedQuantity = (odataObject.RejectedQuantity != null) ? parseFloat(odataObject.RejectedQuantity) : undefined;
          this.InfoCodeId = odataObject.InfoCodeId;
          this.SubInfoCodeId = odataObject.SubInfoCodeId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.RejectFulfillmentLine";
            
        }
    }
    
    /**
     * ReadChangedProductsSession entity class.
     */
    export class ReadChangedProductsSessionClass implements ReadChangedProductsSession {
        public Id: string;
        public TotalNumberOfProducts: number;
        public NumberOfProductsRead: number;
        public NumberOfProductsReadInCurrentPage: number;
        public NextSynchronizationToken: string;
        public IsInitialSync: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.TotalNumberOfProducts = odataObject.TotalNumberOfProducts;
          this.NumberOfProductsRead = odataObject.NumberOfProductsRead;
          this.NumberOfProductsReadInCurrentPage = odataObject.NumberOfProductsReadInCurrentPage;
          this.NextSynchronizationToken = odataObject.NextSynchronizationToken;
          this.IsInitialSync = odataObject.IsInitialSync;
        }
    }
    
    /**
     * DeletedListingsResult entity class.
     */
    export class DeletedListingsResultClass implements DeletedListingsResult {
        public HasMorePublishedListings: boolean;
        public DeletedListings: Entities.ListingIdentity[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HasMorePublishedListings = odataObject.HasMorePublishedListings;
          this.DeletedListings = undefined;
          if (odataObject.DeletedListings) {
              this.DeletedListings = [];
              for (var i = 0; i < odataObject.DeletedListings.length; i++) {
                  if (odataObject.DeletedListings[i] != null) {
                      if (odataObject.DeletedListings[i]['@odata.type'] != null) {
                          var className: string = odataObject.DeletedListings[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DeletedListings[i] = new Commerce.Proxy.Entities[className](odataObject.DeletedListings[i])
                          }
                      } else {
                          this.DeletedListings[i] = new ListingIdentityClass(odataObject.DeletedListings[i]);
                      }
                  } else {
                      this.DeletedListings[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductRating entity class.
     */
    export class ProductRatingClass implements ProductRating {
        public ProductId: number;
        public AverageRating: number;
        public TotalRatings: number;
        public RatingDistribution: Entities.ProductRatingCount[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.AverageRating = (odataObject.AverageRating != null) ? parseFloat(odataObject.AverageRating) : undefined;
          this.TotalRatings = odataObject.TotalRatings;
          this.RatingDistribution = undefined;
          if (odataObject.RatingDistribution) {
              this.RatingDistribution = [];
              for (var i = 0; i < odataObject.RatingDistribution.length; i++) {
                  if (odataObject.RatingDistribution[i] != null) {
                      if (odataObject.RatingDistribution[i]['@odata.type'] != null) {
                          var className: string = odataObject.RatingDistribution[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RatingDistribution[i] = new Commerce.Proxy.Entities[className](odataObject.RatingDistribution[i])
                          }
                      } else {
                          this.RatingDistribution[i] = new ProductRatingCountClass(odataObject.RatingDistribution[i]);
                      }
                  } else {
                      this.RatingDistribution[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductDeliveryOptions entity class.
     */
    export class ProductDeliveryOptionsClass implements ProductDeliveryOptions {
        public ProductId: number;
        public DeliveryOptions: Entities.DeliveryOption[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.DeliveryOptions = undefined;
          if (odataObject.DeliveryOptions) {
              this.DeliveryOptions = [];
              for (var i = 0; i < odataObject.DeliveryOptions.length; i++) {
                  if (odataObject.DeliveryOptions[i] != null) {
                      if (odataObject.DeliveryOptions[i]['@odata.type'] != null) {
                          var className: string = odataObject.DeliveryOptions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DeliveryOptions[i] = new Commerce.Proxy.Entities[className](odataObject.DeliveryOptions[i])
                          }
                      } else {
                          this.DeliveryOptions[i] = new DeliveryOptionClass(odataObject.DeliveryOptions[i]);
                      }
                  } else {
                      this.DeliveryOptions[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ListingPublishStatus entity class.
     */
    export class ListingPublishStatusClass implements ListingPublishStatus {
        public PublishStatusValue: number;
        public ListingModifiedDateTime: Date;
        public ChannelListingId: string;
        public ChannelId: number;
        public CatalogId: number;
        public ProductId: number;
        public LanguageId: string;
        public AppliedActionValue: number;
        public StatusMessage: string;
        public Tag: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PublishStatusValue = odataObject.PublishStatusValue;
          this.ListingModifiedDateTime = (odataObject.ListingModifiedDateTime instanceof Date) ? odataObject.ListingModifiedDateTime
            : (odataObject.ListingModifiedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ListingModifiedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ChannelListingId = odataObject.ChannelListingId;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.LanguageId = odataObject.LanguageId;
          this.AppliedActionValue = odataObject.AppliedActionValue;
          this.StatusMessage = odataObject.StatusMessage;
          this.Tag = odataObject.Tag;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitLocationSearchCriteria entity class.
     */
    export class OrgUnitLocationSearchCriteriaClass implements OrgUnitLocationSearchCriteria {
        public OrgUnitNumber: string;
        public OrgUnitName: string;
        public InventoryLocationIds: string[];
        public DeliveryModeTypeFilterValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrgUnitNumber = odataObject.OrgUnitNumber;
          this.OrgUnitName = odataObject.OrgUnitName;
          this.InventoryLocationIds = undefined;
          if (odataObject.InventoryLocationIds) {
              this.InventoryLocationIds = [];
              for (var i = 0; i < odataObject.InventoryLocationIds.length; i++) {
                  if (odataObject.InventoryLocationIds[i] != null) {
                      this.InventoryLocationIds[i] = odataObject.InventoryLocationIds[i];              } else {
                      this.InventoryLocationIds[i] = undefined;
                  }
              }
          }
          this.DeliveryModeTypeFilterValue = odataObject.DeliveryModeTypeFilterValue;
        }
    }
    
    /**
     * StoreHours entity class.
     */
    export class StoreHoursClass implements StoreHours {
        public RegularStoreHours: Entities.RegularStoreHours;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.RegularStoreHours == null) {
              this.RegularStoreHours = undefined;
          } else if (odataObject.RegularStoreHours['@odata.type'] == null) {
              this.RegularStoreHours = new RegularStoreHoursClass(odataObject.RegularStoreHours);
          } else {
              var className: string = odataObject.RegularStoreHours['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.RegularStoreHours = new Commerce.Proxy.Entities[className](odataObject.RegularStoreHours)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CartPromotions entity class.
     */
    export class CartPromotionsClass implements CartPromotions {
        public HeaderPromotions: string[];
        public CartLinePromotions: Entities.CartLinePromotion[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HeaderPromotions = undefined;
          if (odataObject.HeaderPromotions) {
              this.HeaderPromotions = [];
              for (var i = 0; i < odataObject.HeaderPromotions.length; i++) {
                  if (odataObject.HeaderPromotions[i] != null) {
                      this.HeaderPromotions[i] = odataObject.HeaderPromotions[i];              } else {
                      this.HeaderPromotions[i] = undefined;
                  }
              }
          }
          this.CartLinePromotions = undefined;
          if (odataObject.CartLinePromotions) {
              this.CartLinePromotions = [];
              for (var i = 0; i < odataObject.CartLinePromotions.length; i++) {
                  if (odataObject.CartLinePromotions[i] != null) {
                      if (odataObject.CartLinePromotions[i]['@odata.type'] != null) {
                          var className: string = odataObject.CartLinePromotions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CartLinePromotions[i] = new Commerce.Proxy.Entities[className](odataObject.CartLinePromotions[i])
                          }
                      } else {
                          this.CartLinePromotions[i] = new CartLinePromotionClass(odataObject.CartLinePromotions[i]);
                      }
                  } else {
                      this.CartLinePromotions[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CartPromotionLine entity class.
     */
    export class CartPromotionLineClass implements CartPromotionLine {
        public LineId: string;
        public Promotion: Entities.Promotion;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineId = odataObject.LineId;
          if (odataObject.Promotion == null) {
              this.Promotion = undefined;
          } else if (odataObject.Promotion['@odata.type'] == null) {
              this.Promotion = new PromotionClass(odataObject.Promotion);
          } else {
              var className: string = odataObject.Promotion['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Promotion = new Commerce.Proxy.Entities[className](odataObject.Promotion)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ItemUnit entity class.
     */
    export class ItemUnitClass implements ItemUnit {
        public ItemId: string;
        public VariantInventoryDimensionId: string;
        public Product: number;
        public DistinctProductVariant: number;
        public UnitOfMeasure: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.VariantInventoryDimensionId = odataObject.VariantInventoryDimensionId;
          this.Product = (odataObject.Product != null) ? parseInt(odataObject.Product, 10) : undefined;
          this.DistinctProductVariant = (odataObject.DistinctProductVariant != null) ? parseInt(odataObject.DistinctProductVariant, 10) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductAvailableQuantity entity class.
     */
    export class ProductAvailableQuantityClass implements ProductAvailableQuantity {
        public ProductId: number;
        public AvailableQuantity: number;
        public UnitOfMeasure: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.AvailableQuantity = (odataObject.AvailableQuantity != null) ? parseFloat(odataObject.AvailableQuantity) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitAvailabilitySearchCriteria entity class.
     */
    export class OrgUnitAvailabilitySearchCriteriaClass implements OrgUnitAvailabilitySearchCriteria {
        public OrgUnitName: string;
        public OrgUnitNumber: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OrgUnitName = odataObject.OrgUnitName;
          this.OrgUnitNumber = odataObject.OrgUnitNumber;
        }
    }
    
    /**
     * InvoiceSearchCriteria entity class.
     */
    export class InvoiceSearchCriteriaClass implements InvoiceSearchCriteria {
        public CustomerId: string;
        public InvoiceIds: string[];
        public InvoiceTypeValues: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerId = odataObject.CustomerId;
          this.InvoiceIds = undefined;
          if (odataObject.InvoiceIds) {
              this.InvoiceIds = [];
              for (var i = 0; i < odataObject.InvoiceIds.length; i++) {
                  if (odataObject.InvoiceIds[i] != null) {
                      this.InvoiceIds[i] = odataObject.InvoiceIds[i];              } else {
                      this.InvoiceIds[i] = undefined;
                  }
              }
          }
          this.InvoiceTypeValues = undefined;
          if (odataObject.InvoiceTypeValues) {
              this.InvoiceTypeValues = [];
              for (var i = 0; i < odataObject.InvoiceTypeValues.length; i++) {
                  if (odataObject.InvoiceTypeValues[i] != null) {
                      this.InvoiceTypeValues[i] = odataObject.InvoiceTypeValues[i];              } else {
                      this.InvoiceTypeValues[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PickAndPackSalesLineParameter entity class.
     */
    export class PickAndPackSalesLineParameterClass implements PickAndPackSalesLineParameter {
        public SalesLineNumber: number;
        public Quantity: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
        }
    }
    
    /**
     * ProductListSearchCriteria entity class.
     */
    export class ProductListSearchCriteriaClass implements ProductListSearchCriteria {
        public CustomerId: string;
        public ProductListId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerId = odataObject.CustomerId;
          this.ProductListId = odataObject.ProductListId;
        }
    }
    
    /**
     * ProjectionDomain entity class.
     */
    export class ProjectionDomainClass implements ProjectionDomain {
        public ChannelId: number;
        public CatalogId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
        }
    }
    
    /**
     * AffiliationLoyaltyTier entity class.
     */
    export class AffiliationLoyaltyTierClass implements AffiliationLoyaltyTier {
        public AffiliationId: number;
        public LoyaltyTierId: number;
        public AffiliationTypeValue: number;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public CustomerId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AffiliationId = (odataObject.AffiliationId != null) ? parseInt(odataObject.AffiliationId, 10) : undefined;
          this.LoyaltyTierId = (odataObject.LoyaltyTierId != null) ? parseInt(odataObject.LoyaltyTierId, 10) : undefined;
          this.AffiliationTypeValue = odataObject.AffiliationTypeValue;
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          this.CustomerId = odataObject.CustomerId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ClientBookCustomerSearchCriteria entity class.
     */
    export class ClientBookCustomerSearchCriteriaClass implements ClientBookCustomerSearchCriteria {
        public FilterByCurrentEmployee: boolean;
        public Refinement: Entities.ClientBookRefinerValue[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FilterByCurrentEmployee = odataObject.FilterByCurrentEmployee;
          this.Refinement = undefined;
          if (odataObject.Refinement) {
              this.Refinement = [];
              for (var i = 0; i < odataObject.Refinement.length; i++) {
                  if (odataObject.Refinement[i] != null) {
                      if (odataObject.Refinement[i]['@odata.type'] != null) {
                          var className: string = odataObject.Refinement[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Refinement[i] = new Commerce.Proxy.Entities[className](odataObject.Refinement[i])
                          }
                      } else {
                          this.Refinement[i] = new ClientBookRefinerValueClass(odataObject.Refinement[i]);
                      }
                  } else {
                      this.Refinement[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ClientBookCustomer entity class.
     */
    export class ClientBookCustomerClass implements ClientBookCustomer {
        public CustomerId: string;
        public Name: string;
        public Phone: string;
        public Email: string;
        public StaffId: string;
        public ImageUris: Entities.MediaLocation[];
        public Attributes: Entities.CustomerAttribute[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CustomerId = odataObject.CustomerId;
          this.Name = odataObject.Name;
          this.Phone = odataObject.Phone;
          this.Email = odataObject.Email;
          this.StaffId = odataObject.StaffId;
          this.ImageUris = undefined;
          if (odataObject.ImageUris) {
              this.ImageUris = [];
              for (var i = 0; i < odataObject.ImageUris.length; i++) {
                  if (odataObject.ImageUris[i] != null) {
                      if (odataObject.ImageUris[i]['@odata.type'] != null) {
                          var className: string = odataObject.ImageUris[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ImageUris[i] = new Commerce.Proxy.Entities[className](odataObject.ImageUris[i])
                          }
                      } else {
                          this.ImageUris[i] = new MediaLocationClass(odataObject.ImageUris[i]);
                      }
                  } else {
                      this.ImageUris[i] = undefined;
                  }
              }
          }
          this.Attributes = undefined;
          if (odataObject.Attributes) {
              this.Attributes = [];
              for (var i = 0; i < odataObject.Attributes.length; i++) {
                  if (odataObject.Attributes[i] != null) {
                      if (odataObject.Attributes[i]['@odata.type'] != null) {
                          var className: string = odataObject.Attributes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Attributes[i] = new Commerce.Proxy.Entities[className](odataObject.Attributes[i])
                          }
                      } else {
                          this.Attributes[i] = new CustomerAttributeClass(odataObject.Attributes[i]);
                      }
                  } else {
                      this.Attributes[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ClientBookChanges entity class.
     */
    export class ClientBookChangesClass implements ClientBookChanges {
        public Changes: Entities.ClientBookChange[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Changes = undefined;
          if (odataObject.Changes) {
              this.Changes = [];
              for (var i = 0; i < odataObject.Changes.length; i++) {
                  if (odataObject.Changes[i] != null) {
                      if (odataObject.Changes[i]['@odata.type'] != null) {
                          var className: string = odataObject.Changes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Changes[i] = new Commerce.Proxy.Entities[className](odataObject.Changes[i])
                          }
                      } else {
                          this.Changes[i] = new ClientBookChangeClass(odataObject.Changes[i]);
                      }
                  } else {
                      this.Changes[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChargeCode entity class.
     */
    export class ChargeCodeClass implements ChargeCode {
        public Code: string;
        public ModuleTypeValue: number;
        public Description: string;
        public ItemTaxGroupId: string;
        public IsRefundable: boolean;
        public IsShipping: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Code = odataObject.Code;
          this.ModuleTypeValue = odataObject.ModuleTypeValue;
          this.Description = odataObject.Description;
          this.ItemTaxGroupId = odataObject.ItemTaxGroupId;
          this.IsRefundable = odataObject.IsRefundable;
          this.IsShipping = odataObject.IsShipping;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PaymentMerchantInformation entity class.
     */
    export class PaymentMerchantInformationClass implements PaymentMerchantInformation {
        public PaymentConnectorPropertiesXml: string;
        public MerchantPropertiesHashValue: string;
        public ServiceAccountId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PaymentConnectorPropertiesXml = odataObject.PaymentConnectorPropertiesXml;
          this.MerchantPropertiesHashValue = odataObject.MerchantPropertiesHashValue;
          this.ServiceAccountId = odataObject.ServiceAccountId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * StoreSafe entity class.
     */
    export class StoreSafeClass implements StoreSafe {
        public SafeNumber: string;
        public Name: string;
        public StoreNumber: string;
        public SafeBalance: number;
        public LastUpdatedTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SafeNumber = odataObject.SafeNumber;
          this.Name = odataObject.Name;
          this.StoreNumber = odataObject.StoreNumber;
          this.SafeBalance = (odataObject.SafeBalance != null) ? parseFloat(odataObject.SafeBalance) : undefined;
          this.LastUpdatedTime = (odataObject.LastUpdatedTime instanceof Date) ? odataObject.LastUpdatedTime
            : (odataObject.LastUpdatedTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastUpdatedTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CreateHardwareStationTokenResult entity class.
     */
    export class CreateHardwareStationTokenResultClass implements CreateHardwareStationTokenResult {
        public HardwareStationToken: string;
        public PairingKey: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.HardwareStationToken = odataObject.HardwareStationToken;
          this.PairingKey = odataObject.PairingKey;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ValidateHardwareStationTokenResult entity class.
     */
    export class ValidateHardwareStationTokenResultClass implements ValidateHardwareStationTokenResult {
        public PairingKey: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PairingKey = odataObject.PairingKey;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TerminalDataDownloadRequestInfo entity class.
     */
    export class TerminalDataDownloadRequestInfoClass implements TerminalDataDownloadRequestInfo {
        public TerminalId: string;
        public RequiresDataInitialization: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TerminalId = odataObject.TerminalId;
          this.RequiresDataInitialization = odataObject.RequiresDataInitialization;
        }
    }
    
    /**
     * DataDownloadParameters entity class.
     */
    export class DataDownloadParametersClass implements DataDownloadParameters {
        public DownloadInterval: number;
        public DownloadSessions: Entities.DownloadSession[];
        public FeatureControlList: Entities.RetailSharedConfigurationParameter[];
        public DataStore: Entities.CDXDataStore;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.DownloadInterval = odataObject.DownloadInterval;
          this.DownloadSessions = undefined;
          if (odataObject.DownloadSessions) {
              this.DownloadSessions = [];
              for (var i = 0; i < odataObject.DownloadSessions.length; i++) {
                  if (odataObject.DownloadSessions[i] != null) {
                      if (odataObject.DownloadSessions[i]['@odata.type'] != null) {
                          var className: string = odataObject.DownloadSessions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DownloadSessions[i] = new Commerce.Proxy.Entities[className](odataObject.DownloadSessions[i])
                          }
                      } else {
                          this.DownloadSessions[i] = new DownloadSessionClass(odataObject.DownloadSessions[i]);
                      }
                  } else {
                      this.DownloadSessions[i] = undefined;
                  }
              }
          }
          this.FeatureControlList = undefined;
          if (odataObject.FeatureControlList) {
              this.FeatureControlList = [];
              for (var i = 0; i < odataObject.FeatureControlList.length; i++) {
                  if (odataObject.FeatureControlList[i] != null) {
                      if (odataObject.FeatureControlList[i]['@odata.type'] != null) {
                          var className: string = odataObject.FeatureControlList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FeatureControlList[i] = new Commerce.Proxy.Entities[className](odataObject.FeatureControlList[i])
                          }
                      } else {
                          this.FeatureControlList[i] = new RetailSharedConfigurationParameterClass(odataObject.FeatureControlList[i]);
                      }
                  } else {
                      this.FeatureControlList[i] = undefined;
                  }
              }
          }
          if (odataObject.DataStore == null) {
              this.DataStore = undefined;
          } else if (odataObject.DataStore['@odata.type'] == null) {
              this.DataStore = new CDXDataStoreClass(odataObject.DataStore);
          } else {
              var className: string = odataObject.DataStore['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DataStore = new Commerce.Proxy.Entities[className](odataObject.DataStore)
              }
          }

    
        }
    }
    
    /**
     * TerminalDataUploadRequestInfo entity class.
     */
    export class TerminalDataUploadRequestInfoClass implements TerminalDataUploadRequestInfo {
        public TerminalId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TerminalId = odataObject.TerminalId;
        }
    }
    
    /**
     * DataUploadParameters entity class.
     */
    export class DataUploadParametersClass implements DataUploadParameters {
        public UploadInterval: number;
        public UploadJobPackageRequests: Entities.UploadJobPackageRequest[];
        public FeatureControlList: Entities.RetailSharedConfigurationParameter[];
        public DataStore: Entities.CDXDataStore;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.UploadInterval = odataObject.UploadInterval;
          this.UploadJobPackageRequests = undefined;
          if (odataObject.UploadJobPackageRequests) {
              this.UploadJobPackageRequests = [];
              for (var i = 0; i < odataObject.UploadJobPackageRequests.length; i++) {
                  if (odataObject.UploadJobPackageRequests[i] != null) {
                      if (odataObject.UploadJobPackageRequests[i]['@odata.type'] != null) {
                          var className: string = odataObject.UploadJobPackageRequests[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.UploadJobPackageRequests[i] = new Commerce.Proxy.Entities[className](odataObject.UploadJobPackageRequests[i])
                          }
                      } else {
                          this.UploadJobPackageRequests[i] = new UploadJobPackageRequestClass(odataObject.UploadJobPackageRequests[i]);
                      }
                  } else {
                      this.UploadJobPackageRequests[i] = undefined;
                  }
              }
          }
          this.FeatureControlList = undefined;
          if (odataObject.FeatureControlList) {
              this.FeatureControlList = [];
              for (var i = 0; i < odataObject.FeatureControlList.length; i++) {
                  if (odataObject.FeatureControlList[i] != null) {
                      if (odataObject.FeatureControlList[i]['@odata.type'] != null) {
                          var className: string = odataObject.FeatureControlList[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FeatureControlList[i] = new Commerce.Proxy.Entities[className](odataObject.FeatureControlList[i])
                          }
                      } else {
                          this.FeatureControlList[i] = new RetailSharedConfigurationParameterClass(odataObject.FeatureControlList[i]);
                      }
                  } else {
                      this.FeatureControlList[i] = undefined;
                  }
              }
          }
          if (odataObject.DataStore == null) {
              this.DataStore = undefined;
          } else if (odataObject.DataStore['@odata.type'] == null) {
              this.DataStore = new CDXDataStoreClass(odataObject.DataStore);
          } else {
              var className: string = odataObject.DataStore['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DataStore = new Commerce.Proxy.Entities[className](odataObject.DataStore)
              }
          }

    
        }
    }
    
    /**
     * DownloadSession entity class.
     */
    export class DownloadSessionClass implements DownloadSession {
        public Id: number;
        public JobId: string;
        public JobDescription: string;
        public FileSize: number;
        public RowsAffected: number;
        public Checksum: string;
        public DateDownloaded: string;
        public DateRequested: string;
        public DataStoreName: string;
        public StatusValue: number;
        public Message: string;
        public DownloadLink: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = (odataObject.Id != null) ? parseInt(odataObject.Id, 10) : undefined;
          this.JobId = odataObject.JobId;
          this.JobDescription = odataObject.JobDescription;
          this.FileSize = (odataObject.FileSize != null) ? parseInt(odataObject.FileSize, 10) : undefined;
          this.RowsAffected = odataObject.RowsAffected;
          this.Checksum = odataObject.Checksum;
          this.DateDownloaded = odataObject.DateDownloaded;
          this.DateRequested = odataObject.DateRequested;
          this.DataStoreName = odataObject.DataStoreName;
          this.StatusValue = odataObject.StatusValue;
          this.Message = odataObject.Message;
          this.DownloadLink = odataObject.DownloadLink;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyRewardPointActivity entity class.
     */
    export class LoyaltyRewardPointActivityClass implements LoyaltyRewardPointActivity {
        public ActivityDate: Date;
        public LoyaltyRewardPointTimelineEntryType: string;
        public ExtensibleLoyaltyRewardPointActivityEntryTypeValue: number;
        public LoyaltyPoints: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ActivityDate = (odataObject.ActivityDate instanceof Date) ? odataObject.ActivityDate
            : (odataObject.ActivityDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ActivityDate, "Edm.DateTimeOffset", false) : undefined;
          this.LoyaltyRewardPointTimelineEntryType = odataObject.LoyaltyRewardPointTimelineEntryType;
          this.ExtensibleLoyaltyRewardPointActivityEntryTypeValue = odataObject.ExtensibleLoyaltyRewardPointActivityEntryTypeValue;
          this.LoyaltyPoints = (odataObject.LoyaltyPoints != null) ? parseFloat(odataObject.LoyaltyPoints) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CurrencyRequest entity class.
     */
    export class CurrencyRequestClass implements CurrencyRequest {
        public AmountToConvert: number;
        public CurrencyCode: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AmountToConvert = (odataObject.AmountToConvert != null) ? parseFloat(odataObject.AmountToConvert) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareStationProfile entity class.
     */
    export class HardwareStationProfileClass implements HardwareStationProfile {
        public RecordId: number;
        public HardwareStationId: string;
        public HardwareStationTypeValue: number;
        public HardwareProfileId: string;
        public HardwareStationName: string;
        public HardwareStationDescription: string;
        public HardwareStationUrl: string;
        public HardwareStationHostName: string;
        public HardwareStationEftTerminalId: string;
        public HardwareConfigurations: Entities.HardwareConfigurations;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.HardwareStationId = odataObject.HardwareStationId;
          this.HardwareStationTypeValue = odataObject.HardwareStationTypeValue;
          this.HardwareProfileId = odataObject.HardwareProfileId;
          this.HardwareStationName = odataObject.HardwareStationName;
          this.HardwareStationDescription = odataObject.HardwareStationDescription;
          this.HardwareStationUrl = odataObject.HardwareStationUrl;
          this.HardwareStationHostName = odataObject.HardwareStationHostName;
          this.HardwareStationEftTerminalId = odataObject.HardwareStationEftTerminalId;
          if (odataObject.HardwareConfigurations == null) {
              this.HardwareConfigurations = undefined;
          } else if (odataObject.HardwareConfigurations['@odata.type'] == null) {
              this.HardwareConfigurations = new HardwareConfigurationsClass(odataObject.HardwareConfigurations);
          } else {
              var className: string = odataObject.HardwareConfigurations['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.HardwareConfigurations = new Commerce.Proxy.Entities[className](odataObject.HardwareConfigurations)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * NameValuePair entity class.
     */
    export class NameValuePairClass implements NameValuePair {
        public Name: string;
        public Value: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Value = odataObject.Value;
        }
    }
    
    /**
     * LinkToExistingCustomerResult entity class.
     */
    export class LinkToExistingCustomerResultClass implements LinkToExistingCustomerResult {
        public EmailAddress: string;
        public ExternalIdentityProvider: string;
        public ExternalIdentityLinkRecordId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EmailAddress = odataObject.EmailAddress;
          this.ExternalIdentityProvider = odataObject.ExternalIdentityProvider;
          this.ExternalIdentityLinkRecordId = (odataObject.ExternalIdentityLinkRecordId != null) ? parseInt(odataObject.ExternalIdentityLinkRecordId, 10) : undefined;
        }
    }
    
    /**
     * OfflineSyncStatsLine entity class.
     */
    export class OfflineSyncStatsLineClass implements OfflineSyncStatsLine {
        public IsUploadJob: boolean;
        public JobDescription: string;
        public LastSyncDateTime: Date;
        public Status: string;
        public FileSize: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsUploadJob = odataObject.IsUploadJob;
          this.JobDescription = odataObject.JobDescription;
          this.LastSyncDateTime = (odataObject.LastSyncDateTime instanceof Date) ? odataObject.LastSyncDateTime
            : (odataObject.LastSyncDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.LastSyncDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Status = odataObject.Status;
          this.FileSize = odataObject.FileSize;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * StorageAccessToken entity class.
     */
    export class StorageAccessTokenClass implements StorageAccessToken {
        public Url: string;
        public SasKey: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Url = odataObject.Url;
          this.SasKey = odataObject.SasKey;
        }
    }
    
    /**
     * TaskGuidesSearchResult entity class.
     */
    export class TaskGuidesSearchResultClass implements TaskGuidesSearchResult {
        public Lines: Entities.Line[];
        public FrameworkPublisherName: string;
        public FrameworkName: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Lines = undefined;
          if (odataObject.Lines) {
              this.Lines = [];
              for (var i = 0; i < odataObject.Lines.length; i++) {
                  if (odataObject.Lines[i] != null) {
                      if (odataObject.Lines[i]['@odata.type'] != null) {
                          var className: string = odataObject.Lines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Lines[i] = new Commerce.Proxy.Entities[className](odataObject.Lines[i])
                          }
                      } else {
                          this.Lines[i] = new LineClass(odataObject.Lines[i]);
                      }
                  } else {
                      this.Lines[i] = undefined;
                  }
              }
          }
          this.FrameworkPublisherName = odataObject.FrameworkPublisherName;
          this.FrameworkName = odataObject.FrameworkName;
        }
    }
    
    /**
     * AuditEvent entity class.
     */
    export class AuditEventClass implements AuditEvent {
        public EventId: number;
        public EventIdString: string;
        public Channel: number;
        public Store: string;
        public Terminal: string;
        public UploadType: string;
        public EventType: string;
        public DurationInMilliseconds: number;
        public Source: string;
        public EventMessage: string;
        public LogLevel: string;
        public Staff: string;
        public ShiftId: number;
        public ReferenceId: number;
        public RefChannel: number;
        public RefStore: string;
        public RefTerminal: string;
        public RefTransactionId: string;
        public AuditEventTypeValue: number;
        public FiscalTransactions: Entities.AuditEventFiscalTransaction[];
        public FiscalRegistrationLines: Entities.AuditEventFiscalRegistrationLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EventId = (odataObject.EventId != null) ? parseInt(odataObject.EventId, 10) : undefined;
          this.EventIdString = odataObject.EventIdString;
          this.Channel = (odataObject.Channel != null) ? parseInt(odataObject.Channel, 10) : undefined;
          this.Store = odataObject.Store;
          this.Terminal = odataObject.Terminal;
          this.UploadType = odataObject.UploadType;
          this.EventType = odataObject.EventType;
          this.DurationInMilliseconds = odataObject.DurationInMilliseconds;
          this.Source = odataObject.Source;
          this.EventMessage = odataObject.EventMessage;
          this.LogLevel = odataObject.LogLevel;
          this.Staff = odataObject.Staff;
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.ReferenceId = (odataObject.ReferenceId != null) ? parseInt(odataObject.ReferenceId, 10) : undefined;
          this.RefChannel = (odataObject.RefChannel != null) ? parseInt(odataObject.RefChannel, 10) : undefined;
          this.RefStore = odataObject.RefStore;
          this.RefTerminal = odataObject.RefTerminal;
          this.RefTransactionId = odataObject.RefTransactionId;
          this.AuditEventTypeValue = odataObject.AuditEventTypeValue;
          this.FiscalTransactions = undefined;
          if (odataObject.FiscalTransactions) {
              this.FiscalTransactions = [];
              for (var i = 0; i < odataObject.FiscalTransactions.length; i++) {
                  if (odataObject.FiscalTransactions[i] != null) {
                      if (odataObject.FiscalTransactions[i]['@odata.type'] != null) {
                          var className: string = odataObject.FiscalTransactions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FiscalTransactions[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalTransactions[i])
                          }
                      } else {
                          this.FiscalTransactions[i] = new AuditEventFiscalTransactionClass(odataObject.FiscalTransactions[i]);
                      }
                  } else {
                      this.FiscalTransactions[i] = undefined;
                  }
              }
          }
          this.FiscalRegistrationLines = undefined;
          if (odataObject.FiscalRegistrationLines) {
              this.FiscalRegistrationLines = [];
              for (var i = 0; i < odataObject.FiscalRegistrationLines.length; i++) {
                  if (odataObject.FiscalRegistrationLines[i] != null) {
                      if (odataObject.FiscalRegistrationLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.FiscalRegistrationLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.FiscalRegistrationLines[i] = new Commerce.Proxy.Entities[className](odataObject.FiscalRegistrationLines[i])
                          }
                      } else {
                          this.FiscalRegistrationLines[i] = new AuditEventFiscalRegistrationLineClass(odataObject.FiscalRegistrationLines[i]);
                      }
                  } else {
                      this.FiscalRegistrationLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ItemAvailability entity class.
     */
    export class ItemAvailabilityClass implements ItemAvailability {
        public ItemId: string;
        public VariantInventoryDimensionId: string;
        public InventoryLocationId: string;
        public ProductId: number;
        public AvailableQuantity: number;
        public OrderedSum: number;
        public PhysicalReserved: number;
        public UnitOfMeasure: string;
        public InventoryUnitOfMeasure: string;
        public InventoryUnitOfMeasureDescription: string;
        public ProductDimensions: Entities.ProductDimension[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.VariantInventoryDimensionId = odataObject.VariantInventoryDimensionId;
          this.InventoryLocationId = odataObject.InventoryLocationId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.AvailableQuantity = (odataObject.AvailableQuantity != null) ? parseFloat(odataObject.AvailableQuantity) : undefined;
          this.OrderedSum = (odataObject.OrderedSum != null) ? parseFloat(odataObject.OrderedSum) : undefined;
          this.PhysicalReserved = (odataObject.PhysicalReserved != null) ? parseFloat(odataObject.PhysicalReserved) : undefined;
          this.UnitOfMeasure = odataObject.UnitOfMeasure;
          this.InventoryUnitOfMeasure = odataObject.InventoryUnitOfMeasure;
          this.InventoryUnitOfMeasureDescription = odataObject.InventoryUnitOfMeasureDescription;
          this.ProductDimensions = undefined;
          if (odataObject.ProductDimensions) {
              this.ProductDimensions = [];
              for (var i = 0; i < odataObject.ProductDimensions.length; i++) {
                  if (odataObject.ProductDimensions[i] != null) {
                      if (odataObject.ProductDimensions[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductDimensions[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductDimensions[i] = new Commerce.Proxy.Entities[className](odataObject.ProductDimensions[i])
                          }
                      } else {
                          this.ProductDimensions[i] = new ProductDimensionClass(odataObject.ProductDimensions[i]);
                      }
                  } else {
                      this.ProductDimensions[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryAvailableToPromise entity class.
     */
    export class InventoryAvailableToPromiseClass extends ItemAvailabilityClass implements InventoryAvailableToPromise {
        public Date: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Date = odataObject.Date; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.InventoryAvailableToPromise";
            
        }
    }
    
    /**
     * NotificationItem entity class.
     */
    export class NotificationItemClass implements NotificationItem {
        public Action: number;
        public ActionName: string;
        public NotificationDetails: Entities.NotificationDetail[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Action = odataObject.Action;
          this.ActionName = odataObject.ActionName;
          this.NotificationDetails = undefined;
          if (odataObject.NotificationDetails) {
              this.NotificationDetails = [];
              for (var i = 0; i < odataObject.NotificationDetails.length; i++) {
                  if (odataObject.NotificationDetails[i] != null) {
                      if (odataObject.NotificationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.NotificationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.NotificationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.NotificationDetails[i])
                          }
                      } else {
                          this.NotificationDetails[i] = new NotificationDetailClass(odataObject.NotificationDetails[i]);
                      }
                  } else {
                      this.NotificationDetails[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationDocumentRetrievalCriteria entity class.
     */
    export class FiscalIntegrationDocumentRetrievalCriteriaClass implements FiscalIntegrationDocumentRetrievalCriteria {
        public TransactionId: string;
        public IsRemoteTransaction: boolean;
        public QueryBySalesId: boolean;
        public FiscalRegistrationEventTypeValue: number;
        public ShiftId: number;
        public ShiftTerminalId: string;
        public DocumentContext: Entities.FiscalIntegrationDocumentContext;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionId = odataObject.TransactionId;
          this.IsRemoteTransaction = odataObject.IsRemoteTransaction;
          this.QueryBySalesId = odataObject.QueryBySalesId;
          this.FiscalRegistrationEventTypeValue = odataObject.FiscalRegistrationEventTypeValue;
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          if (odataObject.DocumentContext == null) {
              this.DocumentContext = undefined;
          } else if (odataObject.DocumentContext['@odata.type'] == null) {
              this.DocumentContext = new FiscalIntegrationDocumentContextClass(odataObject.DocumentContext);
          } else {
              var className: string = odataObject.DocumentContext['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DocumentContext = new Commerce.Proxy.Entities[className](odataObject.DocumentContext)
              }
          }

    
        }
    }
    
    /**
     * FiscalIntegrationDocument entity class.
     */
    export class FiscalIntegrationDocumentClass implements FiscalIntegrationDocument {
        public Document: string;
        public DocumentGenerationResultTypeValue: number;
        public FiscalConnectorTechnicalProfile: Entities.FiscalIntegrationTechnicalProfile;
        public DocumentAdjustment: Entities.FiscalIntegrationDocumentAdjustment;
        public SequentialSignatureDataContext: Entities.FiscalIntegrationSignatureDataContext;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Document = odataObject.Document;
          this.DocumentGenerationResultTypeValue = odataObject.DocumentGenerationResultTypeValue;
          if (odataObject.FiscalConnectorTechnicalProfile == null) {
              this.FiscalConnectorTechnicalProfile = undefined;
          } else if (odataObject.FiscalConnectorTechnicalProfile['@odata.type'] == null) {
              this.FiscalConnectorTechnicalProfile = new FiscalIntegrationTechnicalProfileClass(odataObject.FiscalConnectorTechnicalProfile);
          } else {
              var className: string = odataObject.FiscalConnectorTechnicalProfile['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FiscalConnectorTechnicalProfile = new Commerce.Proxy.Entities[className](odataObject.FiscalConnectorTechnicalProfile)
              }
          }

    
          if (odataObject.DocumentAdjustment == null) {
              this.DocumentAdjustment = undefined;
          } else if (odataObject.DocumentAdjustment['@odata.type'] == null) {
              this.DocumentAdjustment = new FiscalIntegrationDocumentAdjustmentClass(odataObject.DocumentAdjustment);
          } else {
              var className: string = odataObject.DocumentAdjustment['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DocumentAdjustment = new Commerce.Proxy.Entities[className](odataObject.DocumentAdjustment)
              }
          }

    
          if (odataObject.SequentialSignatureDataContext == null) {
              this.SequentialSignatureDataContext = undefined;
          } else if (odataObject.SequentialSignatureDataContext['@odata.type'] == null) {
              this.SequentialSignatureDataContext = new FiscalIntegrationSignatureDataContextClass(odataObject.SequentialSignatureDataContext);
          } else {
              var className: string = odataObject.SequentialSignatureDataContext['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SequentialSignatureDataContext = new Commerce.Proxy.Entities[className](odataObject.SequentialSignatureDataContext)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationRegistrationResult entity class.
     */
    export class FiscalIntegrationRegistrationResultClass implements FiscalIntegrationRegistrationResult {
        public TransactionID: string;
        public AuditEventId: string;
        public Response: string;
        public SubmittedDocument: string;
        public RegisterInfo: string;
        public RegistrationStatusValue: number;
        public FiscalRegistrationEventTypeValue: number;
        public DocumentAdjustment: Entities.FiscalIntegrationDocumentAdjustment;
        public ReasonCodeLines: Entities.ReasonCodeLine[];
        public SequentialSignatureData: Entities.FiscalIntegrationSequentialSignatureData;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionID = odataObject.TransactionID;
          this.AuditEventId = odataObject.AuditEventId;
          this.Response = odataObject.Response;
          this.SubmittedDocument = odataObject.SubmittedDocument;
          this.RegisterInfo = odataObject.RegisterInfo;
          this.RegistrationStatusValue = odataObject.RegistrationStatusValue;
          this.FiscalRegistrationEventTypeValue = odataObject.FiscalRegistrationEventTypeValue;
          if (odataObject.DocumentAdjustment == null) {
              this.DocumentAdjustment = undefined;
          } else if (odataObject.DocumentAdjustment['@odata.type'] == null) {
              this.DocumentAdjustment = new FiscalIntegrationDocumentAdjustmentClass(odataObject.DocumentAdjustment);
          } else {
              var className: string = odataObject.DocumentAdjustment['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DocumentAdjustment = new Commerce.Proxy.Entities[className](odataObject.DocumentAdjustment)
              }
          }

    
          this.ReasonCodeLines = undefined;
          if (odataObject.ReasonCodeLines) {
              this.ReasonCodeLines = [];
              for (var i = 0; i < odataObject.ReasonCodeLines.length; i++) {
                  if (odataObject.ReasonCodeLines[i] != null) {
                      if (odataObject.ReasonCodeLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeLines[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeLines[i])
                          }
                      } else {
                          this.ReasonCodeLines[i] = new ReasonCodeLineClass(odataObject.ReasonCodeLines[i]);
                      }
                  } else {
                      this.ReasonCodeLines[i] = undefined;
                  }
              }
          }
          if (odataObject.SequentialSignatureData == null) {
              this.SequentialSignatureData = undefined;
          } else if (odataObject.SequentialSignatureData['@odata.type'] == null) {
              this.SequentialSignatureData = new FiscalIntegrationSequentialSignatureDataClass(odataObject.SequentialSignatureData);
          } else {
              var className: string = odataObject.SequentialSignatureData['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SequentialSignatureData = new Commerce.Proxy.Entities[className](odataObject.SequentialSignatureData)
              }
          }

    
        }
    }
    
    /**
     * FiscalIntegrationRegistrationProcess entity class.
     */
    export class FiscalIntegrationRegistrationProcessClass implements FiscalIntegrationRegistrationProcess {
        public RecordId: number;
        public RegistrationProcessId: string;
        public Description: string;
        public RegistrationProcessLines: Entities.FiscalIntegrationRegistrationProcessLine[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.RegistrationProcessId = odataObject.RegistrationProcessId;
          this.Description = odataObject.Description;
          this.RegistrationProcessLines = undefined;
          if (odataObject.RegistrationProcessLines) {
              this.RegistrationProcessLines = [];
              for (var i = 0; i < odataObject.RegistrationProcessLines.length; i++) {
                  if (odataObject.RegistrationProcessLines[i] != null) {
                      if (odataObject.RegistrationProcessLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.RegistrationProcessLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RegistrationProcessLines[i] = new Commerce.Proxy.Entities[className](odataObject.RegistrationProcessLines[i])
                          }
                      } else {
                          this.RegistrationProcessLines[i] = new FiscalIntegrationRegistrationProcessLineClass(odataObject.RegistrationProcessLines[i]);
                      }
                  } else {
                      this.RegistrationProcessLines[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationSupportedEvents entity class.
     */
    export class FiscalIntegrationSupportedEventsClass implements FiscalIntegrationSupportedEvents {
        public FunctionalityProfileGroupId: string;
        public SupportedFiscalEventTypes: number[];
        public SupportedNonFiscalEventTypes: number[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FunctionalityProfileGroupId = odataObject.FunctionalityProfileGroupId;
          this.SupportedFiscalEventTypes = undefined;
          if (odataObject.SupportedFiscalEventTypes) {
              this.SupportedFiscalEventTypes = [];
              for (var i = 0; i < odataObject.SupportedFiscalEventTypes.length; i++) {
                  if (odataObject.SupportedFiscalEventTypes[i] != null) {
                      this.SupportedFiscalEventTypes[i] = odataObject.SupportedFiscalEventTypes[i];              } else {
                      this.SupportedFiscalEventTypes[i] = undefined;
                  }
              }
          }
          this.SupportedNonFiscalEventTypes = undefined;
          if (odataObject.SupportedNonFiscalEventTypes) {
              this.SupportedNonFiscalEventTypes = [];
              for (var i = 0; i < odataObject.SupportedNonFiscalEventTypes.length; i++) {
                  if (odataObject.SupportedNonFiscalEventTypes[i] != null) {
                      this.SupportedNonFiscalEventTypes[i] = odataObject.SupportedNonFiscalEventTypes[i];              } else {
                      this.SupportedNonFiscalEventTypes[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationTechnicalProfile entity class.
     */
    export class FiscalIntegrationTechnicalProfileClass implements FiscalIntegrationTechnicalProfile {
        public ProfileId: string;
        public Description: string;
        public ConnectorName: string;
        public ConnectorTypeValue: number;
        public TechnicalProfile: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProfileId = odataObject.ProfileId;
          this.Description = odataObject.Description;
          this.ConnectorName = odataObject.ConnectorName;
          this.ConnectorTypeValue = odataObject.ConnectorTypeValue;
          this.TechnicalProfile = odataObject.TechnicalProfile;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationTechnicalProfileSearchCriteria entity class.
     */
    export class FiscalIntegrationTechnicalProfileSearchCriteriaClass implements FiscalIntegrationTechnicalProfileSearchCriteria {
        public ExcludeOptionalProcessLines: boolean;
        public FunctionalityProfileGroupIds: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ExcludeOptionalProcessLines = odataObject.ExcludeOptionalProcessLines;
          this.FunctionalityProfileGroupIds = undefined;
          if (odataObject.FunctionalityProfileGroupIds) {
              this.FunctionalityProfileGroupIds = [];
              for (var i = 0; i < odataObject.FunctionalityProfileGroupIds.length; i++) {
                  if (odataObject.FunctionalityProfileGroupIds[i] != null) {
                      this.FunctionalityProfileGroupIds[i] = odataObject.FunctionalityProfileGroupIds[i];              } else {
                      this.FunctionalityProfileGroupIds[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationServiceInfo entity class.
     */
    export class FiscalIntegrationServiceInfoClass implements FiscalIntegrationServiceInfo {
        public ServiceName: string;
        public ServiceProperties: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ServiceName = odataObject.ServiceName;
          this.ServiceProperties = odataObject.ServiceProperties;
        }
    }
    
    /**
     * FiscalIntegrationServiceStatus entity class.
     */
    export class FiscalIntegrationServiceStatusClass implements FiscalIntegrationServiceStatus {
        public IsReady: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsReady = odataObject.IsReady;
        }
    }
    
    /**
     * FiscalIntegrationServiceCommunicationResult entity class.
     */
    export class FiscalIntegrationServiceCommunicationResultClass implements FiscalIntegrationServiceCommunicationResult {
        public Response: string;
        public CommunicationResultTypeValue: number;
        public FailureDetails: Entities.FiscalIntegrationServiceFailureDetails;
        public FiscalIntegrationServiceInfo: string;
        public UserNotificationMessage: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Response = odataObject.Response;
          this.CommunicationResultTypeValue = odataObject.CommunicationResultTypeValue;
          if (odataObject.FailureDetails == null) {
              this.FailureDetails = undefined;
          } else if (odataObject.FailureDetails['@odata.type'] == null) {
              this.FailureDetails = new FiscalIntegrationServiceFailureDetailsClass(odataObject.FailureDetails);
          } else {
              var className: string = odataObject.FailureDetails['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FailureDetails = new Commerce.Proxy.Entities[className](odataObject.FailureDetails)
              }
          }

    
          this.FiscalIntegrationServiceInfo = odataObject.FiscalIntegrationServiceInfo;
          this.UserNotificationMessage = odataObject.UserNotificationMessage;
        }
    }
    
    /**
     * FiscalIntegrationSequentialSignatureData entity class.
     */
    export class FiscalIntegrationSequentialSignatureDataClass implements FiscalIntegrationSequentialSignatureData {
        public LastRegisterResponse: string;
        public SequenceKey: string;
        public IsOffline: boolean;
        public SequentialNumber: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LastRegisterResponse = odataObject.LastRegisterResponse;
          this.SequenceKey = odataObject.SequenceKey;
          this.IsOffline = odataObject.IsOffline;
          this.SequentialNumber = (odataObject.SequentialNumber != null) ? parseInt(odataObject.SequentialNumber, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DiscountsSearchCriteria entity class.
     */
    export class DiscountsSearchCriteriaClass implements DiscountsSearchCriteria {
        public ChannelId: number;
        public Keyword: string;
        public IsDiscountCodeRequired: boolean;
        public StartDate: Date;
        public EndDate: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.Keyword = odataObject.Keyword;
          this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
          this.StartDate = (odataObject.StartDate instanceof Date) ? odataObject.StartDate
            : (odataObject.StartDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.StartDate, "Edm.DateTimeOffset", false) : undefined;
          this.EndDate = (odataObject.EndDate instanceof Date) ? odataObject.EndDate
            : (odataObject.EndDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EndDate, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * Promotion entity class.
     */
    export class PromotionClass implements Promotion {
        public OfferId: string;
        public OfferName: string;
        public PeriodicDiscountTypeValue: number;
        public IsDiscountCodeRequired: boolean;
        public ValidationPeriodId: string;
        public AdditionalRestrictions: string;
        public Description: string;
        public ValidFromDate: Date;
        public ValidToDate: Date;
        public ValidationPeriod: Entities.ValidationPeriod;
        public CouponCodes: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OfferId = odataObject.OfferId;
          this.OfferName = odataObject.OfferName;
          this.PeriodicDiscountTypeValue = odataObject.PeriodicDiscountTypeValue;
          this.IsDiscountCodeRequired = odataObject.IsDiscountCodeRequired;
          this.ValidationPeriodId = odataObject.ValidationPeriodId;
          this.AdditionalRestrictions = odataObject.AdditionalRestrictions;
          this.Description = odataObject.Description;
          this.ValidFromDate = (odataObject.ValidFromDate instanceof Date) ? odataObject.ValidFromDate
            : (odataObject.ValidFromDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFromDate, "Edm.DateTimeOffset", false) : undefined;
          this.ValidToDate = (odataObject.ValidToDate instanceof Date) ? odataObject.ValidToDate
            : (odataObject.ValidToDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidToDate, "Edm.DateTimeOffset", false) : undefined;
          if (odataObject.ValidationPeriod == null) {
              this.ValidationPeriod = undefined;
          } else if (odataObject.ValidationPeriod['@odata.type'] == null) {
              this.ValidationPeriod = new ValidationPeriodClass(odataObject.ValidationPeriod);
          } else {
              var className: string = odataObject.ValidationPeriod['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.ValidationPeriod = new Commerce.Proxy.Entities[className](odataObject.ValidationPeriod)
              }
          }

    
          this.CouponCodes = undefined;
          if (odataObject.CouponCodes) {
              this.CouponCodes = [];
              for (var i = 0; i < odataObject.CouponCodes.length; i++) {
                  if (odataObject.CouponCodes[i] != null) {
                      this.CouponCodes[i] = odataObject.CouponCodes[i];              } else {
                      this.CouponCodes[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CategoryPathLookup entity class.
     */
    export class CategoryPathLookupClass implements CategoryPathLookup {
        public ProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CategoryPathResult entity class.
     */
    export class CategoryPathResultClass implements CategoryPathResult {
        public ProductId: number;
        public CategoryPath: Entities.CategoryPath[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.CategoryPath = undefined;
          if (odataObject.CategoryPath) {
              this.CategoryPath = [];
              for (var i = 0; i < odataObject.CategoryPath.length; i++) {
                  if (odataObject.CategoryPath[i] != null) {
                      if (odataObject.CategoryPath[i]['@odata.type'] != null) {
                          var className: string = odataObject.CategoryPath[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CategoryPath[i] = new Commerce.Proxy.Entities[className](odataObject.CategoryPath[i])
                          }
                      } else {
                          this.CategoryPath[i] = new CategoryPathClass(odataObject.CategoryPath[i]);
                      }
                  } else {
                      this.CategoryPath[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ExtensionProfile entity class.
     */
    export class ExtensionProfileClass implements ExtensionProfile {
        public ExtensionServiceUrl: string;
        public AttachedServices: Entities.AttachedService[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ExtensionServiceUrl = odataObject.ExtensionServiceUrl;
          this.AttachedServices = undefined;
          if (odataObject.AttachedServices) {
              this.AttachedServices = [];
              for (var i = 0; i < odataObject.AttachedServices.length; i++) {
                  if (odataObject.AttachedServices[i] != null) {
                      if (odataObject.AttachedServices[i]['@odata.type'] != null) {
                          var className: string = odataObject.AttachedServices[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.AttachedServices[i] = new Commerce.Proxy.Entities[className](odataObject.AttachedServices[i])
                          }
                      } else {
                          this.AttachedServices[i] = new AttachedServiceClass(odataObject.AttachedServices[i]);
                      }
                  } else {
                      this.AttachedServices[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelInventoryConfiguration entity class.
     */
    export class ChannelInventoryConfigurationClass implements ChannelInventoryConfiguration {
        public RecordId: number;
        public ChannelId: string;
        public AllowTransferOrderOverDelivery: boolean;
        public AllowTransferOrderUnderDelivery: boolean;
        public UserLocationProfileId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ChannelId = odataObject.ChannelId;
          this.AllowTransferOrderOverDelivery = odataObject.AllowTransferOrderOverDelivery;
          this.AllowTransferOrderUnderDelivery = odataObject.AllowTransferOrderUnderDelivery;
          this.UserLocationProfileId = odataObject.UserLocationProfileId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShiftRetrievalCriteria entity class.
     */
    export class ShiftRetrievalCriteriaClass implements ShiftRetrievalCriteria {
        public ShiftStatusValue: number;
        public FilterByUserRole: boolean;
        public IncludeAllShiftsForStore: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ShiftStatusValue = odataObject.ShiftStatusValue;
          this.FilterByUserRole = odataObject.FilterByUserRole;
          this.IncludeAllShiftsForStore = odataObject.IncludeAllShiftsForStore;
        }
    }
    
    /**
     * MediaBlob entity class.
     */
    export class MediaBlobClass implements MediaBlob {
        public MediaType: string;
        public Content: string;
        public IsDefault: boolean;
        public AltText: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.MediaType = odataObject.MediaType;
          this.Content = odataObject.Content;
          this.IsDefault = odataObject.IsDefault;
          this.AltText = odataObject.AltText;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TerminalInfo entity class.
     */
    export class TerminalInfoClass implements TerminalInfo {
        public TerminalId: string;
        public DeviceNumber: string;
        public Name: string;
        public DeviceType: number;
        public ActivationStatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TerminalId = odataObject.TerminalId;
          this.DeviceNumber = odataObject.DeviceNumber;
          this.Name = odataObject.Name;
          this.DeviceType = odataObject.DeviceType;
          this.ActivationStatusValue = odataObject.ActivationStatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerTimelineItemTypeMap entity class.
     */
    export class CustomerTimelineItemTypeMapClass implements CustomerTimelineItemTypeMap {
        public EntityType: string;
        public Types: Entities.CustomerTimelineItemType[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EntityType = odataObject.EntityType;
          this.Types = undefined;
          if (odataObject.Types) {
              this.Types = [];
              for (var i = 0; i < odataObject.Types.length; i++) {
                  if (odataObject.Types[i] != null) {
                      if (odataObject.Types[i]['@odata.type'] != null) {
                          var className: string = odataObject.Types[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Types[i] = new Commerce.Proxy.Entities[className](odataObject.Types[i])
                          }
                      } else {
                          this.Types[i] = new CustomerTimelineItemTypeClass(odataObject.Types[i]);
                      }
                  } else {
                      this.Types[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerTimelineRefiner entity class.
     */
    export class CustomerTimelineRefinerClass implements CustomerTimelineRefiner {
        public RefinedResultsCount: number;
        public EntityType: string;
        public TypeId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RefinedResultsCount = odataObject.RefinedResultsCount;
          this.EntityType = odataObject.EntityType;
          this.TypeId = odataObject.TypeId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerTitle entity class.
     */
    export class CustomerTitleClass implements CustomerTitle {
        public Text: string;
        public RecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Text = odataObject.Text;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductWarehouse entity class.
     */
    export class ProductWarehouseClass implements ProductWarehouse {
        public ProductId: number;
        public InventLocationId: string;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.InventLocationId = odataObject.InventLocationId;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductWarehouseInventoryInformation entity class.
     */
    export class ProductWarehouseInventoryInformationClass implements ProductWarehouseInventoryInformation {
        public ProductWarehouseInventoryAvailabilities: Entities.ProductWarehouseInventoryAvailability[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductWarehouseInventoryAvailabilities = undefined;
          if (odataObject.ProductWarehouseInventoryAvailabilities) {
              this.ProductWarehouseInventoryAvailabilities = [];
              for (var i = 0; i < odataObject.ProductWarehouseInventoryAvailabilities.length; i++) {
                  if (odataObject.ProductWarehouseInventoryAvailabilities[i] != null) {
                      if (odataObject.ProductWarehouseInventoryAvailabilities[i]['@odata.type'] != null) {
                          var className: string = odataObject.ProductWarehouseInventoryAvailabilities[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ProductWarehouseInventoryAvailabilities[i] = new Commerce.Proxy.Entities[className](odataObject.ProductWarehouseInventoryAvailabilities[i])
                          }
                      } else {
                          this.ProductWarehouseInventoryAvailabilities[i] = new ProductWarehouseInventoryAvailabilityClass(odataObject.ProductWarehouseInventoryAvailabilities[i]);
                      }
                  } else {
                      this.ProductWarehouseInventoryAvailabilities[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryAvailabilitySearchCriteria entity class.
     */
    export class InventoryAvailabilitySearchCriteriaClass implements InventoryAvailabilitySearchCriteria {
        public ProductIds: number[];
        public DefaultWarehouseOnly: boolean;
        public SearchArea: Entities.SearchArea;
        public FilterByChannelFulfillmentGroup: boolean;
        public DataLevelValue: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductIds = undefined;
          if (odataObject.ProductIds) {
              this.ProductIds = [];
              for (var i = 0; i < odataObject.ProductIds.length; i++) {
                  if (odataObject.ProductIds[i] != null) {
                      this.ProductIds[i] = parseInt(odataObject.ProductIds[i], 10);              } else {
                      this.ProductIds[i] = undefined;
                  }
              }
          }
          this.DefaultWarehouseOnly = odataObject.DefaultWarehouseOnly;
          if (odataObject.SearchArea == null) {
              this.SearchArea = undefined;
          } else if (odataObject.SearchArea['@odata.type'] == null) {
              this.SearchArea = new SearchAreaClass(odataObject.SearchArea);
          } else {
              var className: string = odataObject.SearchArea['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.SearchArea = new Commerce.Proxy.Entities[className](odataObject.SearchArea)
              }
          }

    
          this.FilterByChannelFulfillmentGroup = odataObject.FilterByChannelFulfillmentGroup;
          this.DataLevelValue = odataObject.DataLevelValue;
        }
    }
    
    /**
     * ExtensibleEnumerationContainer entity class.
     */
    export class ExtensibleEnumerationContainerClass implements ExtensibleEnumerationContainer {
        public TypeName: string;
        public ExtensibleEnumerations: Entities.ExtensibleEnumeration[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TypeName = odataObject.TypeName;
          this.ExtensibleEnumerations = undefined;
          if (odataObject.ExtensibleEnumerations) {
              this.ExtensibleEnumerations = [];
              for (var i = 0; i < odataObject.ExtensibleEnumerations.length; i++) {
                  if (odataObject.ExtensibleEnumerations[i] != null) {
                      if (odataObject.ExtensibleEnumerations[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensibleEnumerations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensibleEnumerations[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensibleEnumerations[i])
                          }
                      } else {
                          this.ExtensibleEnumerations[i] = new ExtensibleEnumerationClass(odataObject.ExtensibleEnumerations[i]);
                      }
                  } else {
                      this.ExtensibleEnumerations[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PackingSlipData entity class.
     */
    export class PackingSlipDataClass implements PackingSlipData {
        public PackingSlipId: string;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PackingSlipId = odataObject.PackingSlipId;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * OrgUnitAddress entity class.
     */
    export class OrgUnitAddressClass extends AddressClass implements OrgUnitAddress {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.OrgUnitAddress";
            
        }
    }
    
    /**
     * WarehouseDetails entity class.
     */
    export class WarehouseDetailsClass extends AddressClass implements WarehouseDetails {
        public InventoryLocationId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.InventoryLocationId = odataObject.InventoryLocationId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.WarehouseDetails";
            
        }
    }
    
    /**
     * AttributeBooleanValue entity class.
     */
    export class AttributeBooleanValueClass extends AttributeValueBaseClass implements AttributeBooleanValue {
        public Value: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = odataObject.Value; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeBooleanValue";
            
        }
    }
    
    /**
     * AttributeCurrencyValue entity class.
     */
    export class AttributeCurrencyValueClass extends AttributeValueBaseClass implements AttributeCurrencyValue {
        public CurrencyValue: number;
        public CurrencyCode: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.CurrencyValue = (odataObject.CurrencyValue != null) ? parseFloat(odataObject.CurrencyValue) : undefined;
          this.CurrencyCode = odataObject.CurrencyCode; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeCurrencyValue";
            
        }
    }
    
    /**
     * AttributeDateTimeOffsetValue entity class.
     */
    export class AttributeDateTimeOffsetValueClass extends AttributeValueBaseClass implements AttributeDateTimeOffsetValue {
        public Value: Date;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = (odataObject.Value instanceof Date) ? odataObject.Value
            : (odataObject.Value != null) ? OData.jsonLightReadStringPropertyValue(odataObject.Value, "Edm.DateTimeOffset", false) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeDateTimeOffsetValue";
            
        }
    }
    
    /**
     * AttributeFloatValue entity class.
     */
    export class AttributeFloatValueClass extends AttributeValueBaseClass implements AttributeFloatValue {
        public Value: number;
        public UnitSymbol: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
          this.UnitSymbol = odataObject.UnitSymbol; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeFloatValue";
            
        }
    }
    
    /**
     * AttributeIntValue entity class.
     */
    export class AttributeIntValueClass extends AttributeValueBaseClass implements AttributeIntValue {
        public Value: number;
        public UnitSymbol: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = odataObject.Value;
          this.UnitSymbol = odataObject.UnitSymbol; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeIntValue";
            
        }
    }
    
    /**
     * AttributeMediaLocationValue entity class.
     */
    export class AttributeMediaLocationValueClass extends AttributeValueBaseClass implements AttributeMediaLocationValue {
        public Value: Entities.MediaLocation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = undefined;
          if (odataObject.Value) {
              this.Value = [];
              for (var i = 0; i < odataObject.Value.length; i++) {
                  if (odataObject.Value[i] != null) {
                      if (odataObject.Value[i]['@odata.type'] != null) {
                          var className: string = odataObject.Value[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Value[i] = new Commerce.Proxy.Entities[className](odataObject.Value[i])
                          }
                      } else {
                          this.Value[i] = new MediaLocationClass(odataObject.Value[i]);
                      }
                  } else {
                      this.Value[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeMediaLocationValue";
            
        }
    }
    
    /**
     * AttributeTextValue entity class.
     */
    export class AttributeTextValueClass extends AttributeValueBaseClass implements AttributeTextValue {
        public TextValue: string;
        public TextValueTranslations: Entities.TextValueTranslation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.TextValue = odataObject.TextValue;
          this.TextValueTranslations = undefined;
          if (odataObject.TextValueTranslations) {
              this.TextValueTranslations = [];
              for (var i = 0; i < odataObject.TextValueTranslations.length; i++) {
                  if (odataObject.TextValueTranslations[i] != null) {
                      if (odataObject.TextValueTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.TextValueTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TextValueTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.TextValueTranslations[i])
                          }
                      } else {
                          this.TextValueTranslations[i] = new TextValueTranslationClass(odataObject.TextValueTranslations[i]);
                      }
                  } else {
                      this.TextValueTranslations[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.AttributeTextValue";
            
        }
    }
    
    /**
     * ButtonGridButton entity class.
     */
    export class ButtonGridButtonClass implements ButtonGridButton {
        public Action: number;
        public ActionProperty: string;
        public BackColorAsARGB: Entities.ARGBColor;
        public BorderColorAsARGB: Entities.ARGBColor;
        public Column: number;
        public ColumnSpan: number;
        public DisplayText: string;
        public FontColorAsARGB: Entities.ARGBColor;
        public ButtonId: number;
        public Row: number;
        public RowSpan: number;
        public UseCustomLookAndFeel: boolean;
        public PictureAsBase64: string;
        public FontStyle: number;
        public FontSize: number;
        public EnableCustomFontForPOS: boolean;
        public HideButtonText: boolean;
        public Tooltip: string;
        public EnableLiveContent: boolean;
        public NotificationContentAlignment: number;
        public ImageAlignment: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Action = odataObject.Action;
          this.ActionProperty = odataObject.ActionProperty;
          if (odataObject.BackColorAsARGB == null) {
              this.BackColorAsARGB = undefined;
          } else if (odataObject.BackColorAsARGB['@odata.type'] == null) {
              this.BackColorAsARGB = new ARGBColorClass(odataObject.BackColorAsARGB);
          } else {
              var className: string = odataObject.BackColorAsARGB['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.BackColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.BackColorAsARGB)
              }
          }

    
          if (odataObject.BorderColorAsARGB == null) {
              this.BorderColorAsARGB = undefined;
          } else if (odataObject.BorderColorAsARGB['@odata.type'] == null) {
              this.BorderColorAsARGB = new ARGBColorClass(odataObject.BorderColorAsARGB);
          } else {
              var className: string = odataObject.BorderColorAsARGB['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.BorderColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.BorderColorAsARGB)
              }
          }

    
          this.Column = odataObject.Column;
          this.ColumnSpan = odataObject.ColumnSpan;
          this.DisplayText = odataObject.DisplayText;
          if (odataObject.FontColorAsARGB == null) {
              this.FontColorAsARGB = undefined;
          } else if (odataObject.FontColorAsARGB['@odata.type'] == null) {
              this.FontColorAsARGB = new ARGBColorClass(odataObject.FontColorAsARGB);
          } else {
              var className: string = odataObject.FontColorAsARGB['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.FontColorAsARGB = new Commerce.Proxy.Entities[className](odataObject.FontColorAsARGB)
              }
          }

    
          this.ButtonId = odataObject.ButtonId;
          this.Row = odataObject.Row;
          this.RowSpan = odataObject.RowSpan;
          this.UseCustomLookAndFeel = odataObject.UseCustomLookAndFeel;
          this.PictureAsBase64 = odataObject.PictureAsBase64;
          this.FontStyle = odataObject.FontStyle;
          this.FontSize = odataObject.FontSize;
          this.EnableCustomFontForPOS = odataObject.EnableCustomFontForPOS;
          this.HideButtonText = odataObject.HideButtonText;
          this.Tooltip = odataObject.Tooltip;
          this.EnableLiveContent = odataObject.EnableLiveContent;
          this.NotificationContentAlignment = odataObject.NotificationContentAlignment;
          this.ImageAlignment = odataObject.ImageAlignment;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ARGBColor entity class.
     */
    export class ARGBColorClass implements ARGBColor {
        public A: number;
        public R: number;
        public G: number;
        public B: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.A = (odataObject.A != null) ? parseInt(odataObject.A, 10) : undefined;
          this.R = (odataObject.R != null) ? parseInt(odataObject.R, 10) : undefined;
          this.G = (odataObject.G != null) ? parseInt(odataObject.G, 10) : undefined;
          this.B = (odataObject.B != null) ? parseInt(odataObject.B, 10) : undefined;
        }
    }
    
    /**
     * ExtensiblePeriodicDiscountOfferType entity class.
     */
    export class ExtensiblePeriodicDiscountOfferTypeClass extends ExtensibleEnumerationClass implements ExtensiblePeriodicDiscountOfferType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensiblePeriodicDiscountOfferType";
            
        }
    }
    
    /**
     * ChargeLineOverride entity class.
     */
    export class ChargeLineOverrideClass implements ChargeLineOverride {
        public OriginalAmount: number;
        public OverrideAmount: number;
        public OverrideReasonDescription: string;
        public OverrideDateTime: Date;
        public UserId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OriginalAmount = (odataObject.OriginalAmount != null) ? parseFloat(odataObject.OriginalAmount) : undefined;
          this.OverrideAmount = (odataObject.OverrideAmount != null) ? parseFloat(odataObject.OverrideAmount) : undefined;
          this.OverrideReasonDescription = odataObject.OverrideReasonDescription;
          this.OverrideDateTime = (odataObject.OverrideDateTime instanceof Date) ? odataObject.OverrideDateTime
            : (odataObject.OverrideDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.OverrideDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.UserId = odataObject.UserId;
        }
    }
    
    /**
     * TaxLineGTE entity class.
     */
    export class TaxLineGTEClass extends TaxLineClass implements TaxLineGTE {
        public TaxComponent: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.TaxComponent = odataObject.TaxComponent; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaxLineGTE";
            
        }
    }
    
    /**
     * TaxMeasure entity class.
     */
    export class TaxMeasureClass implements TaxMeasure {
        public Path: string;
        public Value: number;
        public DataAreaId: string;
        public SaleLineNumber: number;
        public StoreId: string;
        public TerminalId: string;
        public TransactionId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Path = odataObject.Path;
          this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
          this.DataAreaId = odataObject.DataAreaId;
          this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
          this.StoreId = odataObject.StoreId;
          this.TerminalId = odataObject.TerminalId;
          this.TransactionId = odataObject.TransactionId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CardTokenInfo entity class.
     */
    export class CardTokenInfoClass implements CardTokenInfo {
        public CardToken: string;
        public UniqueCardId: string;
        public ServiceAccountId: string;
        public MaskedCardNumber: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CardToken = odataObject.CardToken;
          this.UniqueCardId = odataObject.UniqueCardId;
          this.ServiceAccountId = odataObject.ServiceAccountId;
          this.MaskedCardNumber = odataObject.MaskedCardNumber;
        }
    }
    
    /**
     * ProductAttributeMetadataFlags entity class.
     */
    export class ProductAttributeMetadataFlagsClass implements ProductAttributeMetadataFlags {
        public IsSearchable: boolean;
        public IsRetrievable: boolean;
        public IsQueryable: boolean;
        public IsRefinable: boolean;
        public IsSortable: boolean;
        public IsMultiValue: boolean;
        public IsTokenNormalization: boolean;
        public IsCompleteMatch: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.IsSearchable = odataObject.IsSearchable;
          this.IsRetrievable = odataObject.IsRetrievable;
          this.IsQueryable = odataObject.IsQueryable;
          this.IsRefinable = odataObject.IsRefinable;
          this.IsSortable = odataObject.IsSortable;
          this.IsMultiValue = odataObject.IsMultiValue;
          this.IsTokenNormalization = odataObject.IsTokenNormalization;
          this.IsCompleteMatch = odataObject.IsCompleteMatch;
        }
    }
    
    /**
     * UnitOfMeasureConversion entity class.
     */
    export class UnitOfMeasureConversionClass implements UnitOfMeasureConversion {
        public ItemId: string;
        public FromUnitOfMeasureId: string;
        public ToUnitOfMeasureId: string;
        public FromUnitOfMeasureSymbol: string;
        public ToUnitOfMeasureSymbol: string;
        public IsBackward: boolean;
        public RecordId: number;
        public ProductRecordId: number;
        public Factor: number;
        public Numerator: number;
        public Denominator: number;
        public InnerOffset: number;
        public OuterOffset: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.FromUnitOfMeasureId = odataObject.FromUnitOfMeasureId;
          this.ToUnitOfMeasureId = odataObject.ToUnitOfMeasureId;
          this.FromUnitOfMeasureSymbol = odataObject.FromUnitOfMeasureSymbol;
          this.ToUnitOfMeasureSymbol = odataObject.ToUnitOfMeasureSymbol;
          this.IsBackward = odataObject.IsBackward;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.Factor = (odataObject.Factor != null) ? parseFloat(odataObject.Factor) : undefined;
          this.Numerator = odataObject.Numerator;
          this.Denominator = odataObject.Denominator;
          this.InnerOffset = (odataObject.InnerOffset != null) ? parseFloat(odataObject.InnerOffset) : undefined;
          this.OuterOffset = (odataObject.OuterOffset != null) ? parseFloat(odataObject.OuterOffset) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PriceLine entity class.
     */
    export class PriceLineClass implements PriceLine {
        public RecordId: number;
        public Value: number;
        public PriceMethod: string;
        public OriginId: string;
        public PriceChangedByExtensions: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
          this.PriceMethod = odataObject.PriceMethod;
          this.OriginId = odataObject.OriginId;
          this.PriceChangedByExtensions = odataObject.PriceChangedByExtensions;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * BasePriceLine entity class.
     */
    export class BasePriceLineClass extends PriceLineClass implements BasePriceLine {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.BasePriceLine";
            
        }
    }
    
    /**
     * PriceAdjustmentPriceLine entity class.
     */
    export class PriceAdjustmentPriceLineClass extends PriceLineClass implements PriceAdjustmentPriceLine {
        public IsCompoundable: boolean;
        public Concurrency: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.IsCompoundable = odataObject.IsCompoundable;
          this.Concurrency = odataObject.Concurrency; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.PriceAdjustmentPriceLine";
            
        }
    }
    
    /**
     * TradeAgreementPriceLine entity class.
     */
    export class TradeAgreementPriceLineClass extends PriceLineClass implements TradeAgreementPriceLine {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TradeAgreementPriceLine";
            
        }
    }
    
    /**
     * ReturnLabelContent entity class.
     */
    export class ReturnLabelContentClass implements ReturnLabelContent {
        public ReturnLocationText: string;
        public ReturnWarehouseText: string;
        public ReturnReasonText: string;
        public ReturnPalleteText: string;
        public ItemId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ReturnLocationText = odataObject.ReturnLocationText;
          this.ReturnWarehouseText = odataObject.ReturnWarehouseText;
          this.ReturnReasonText = odataObject.ReturnReasonText;
          this.ReturnPalleteText = odataObject.ReturnPalleteText;
          this.ItemId = odataObject.ItemId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LoyaltyRewardPointLine entity class.
     */
    export class LoyaltyRewardPointLineClass implements LoyaltyRewardPointLine {
        public TransactionId: string;
        public SaleLineNumber: number;
        public LoyaltyGroupRecordId: number;
        public LoyaltyCardNumber: string;
        public CustomerAccount: string;
        public EntryDate: Date;
        public EntryTime: number;
        public EntryTypeValue: number;
        public ExpirationDate: Date;
        public LineNumber: number;
        public LoyaltyTierRecordId: number;
        public RewardPointRecordId: number;
        public RewardPointAmountQuantity: number;
        public RewardPointId: string;
        public RewardPointIsRedeemable: boolean;
        public RewardPointType: string;
        public RewardPointCurrency: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TransactionId = odataObject.TransactionId;
          this.SaleLineNumber = (odataObject.SaleLineNumber != null) ? parseFloat(odataObject.SaleLineNumber) : undefined;
          this.LoyaltyGroupRecordId = (odataObject.LoyaltyGroupRecordId != null) ? parseInt(odataObject.LoyaltyGroupRecordId, 10) : undefined;
          this.LoyaltyCardNumber = odataObject.LoyaltyCardNumber;
          this.CustomerAccount = odataObject.CustomerAccount;
          this.EntryDate = (odataObject.EntryDate instanceof Date) ? odataObject.EntryDate
            : (odataObject.EntryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EntryDate, "Edm.DateTimeOffset", false) : undefined;
          this.EntryTime = odataObject.EntryTime;
          this.EntryTypeValue = odataObject.EntryTypeValue;
          this.ExpirationDate = (odataObject.ExpirationDate instanceof Date) ? odataObject.ExpirationDate
            : (odataObject.ExpirationDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ExpirationDate, "Edm.DateTimeOffset", false) : undefined;
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.LoyaltyTierRecordId = (odataObject.LoyaltyTierRecordId != null) ? parseInt(odataObject.LoyaltyTierRecordId, 10) : undefined;
          this.RewardPointRecordId = (odataObject.RewardPointRecordId != null) ? parseInt(odataObject.RewardPointRecordId, 10) : undefined;
          this.RewardPointAmountQuantity = (odataObject.RewardPointAmountQuantity != null) ? parseFloat(odataObject.RewardPointAmountQuantity) : undefined;
          this.RewardPointId = odataObject.RewardPointId;
          this.RewardPointIsRedeemable = odataObject.RewardPointIsRedeemable;
          this.RewardPointType = odataObject.RewardPointType;
          this.RewardPointCurrency = odataObject.RewardPointCurrency;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TrackingInfo entity class.
     */
    export class TrackingInfoClass implements TrackingInfo {
        public TrackingNumber: string;
        public ServiceType: string;
        public PackageWeight: Entities.Weight;
        public ShippedOnDate: Date;
        public Status: string;
        public DeliveredOnDate: Date;
        public EstimatedDeliveryDate: Date;
        public TrackingUrl: string;
        public PackagingType: string;
        public DestinationAddress: Entities.Address;
        public OriginAddress: Entities.Address;
        public ShipmentProgress: Entities.ShipmentProgress[];
        public ShippingCharge: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TrackingNumber = odataObject.TrackingNumber;
          this.ServiceType = odataObject.ServiceType;
          if (odataObject.PackageWeight == null) {
              this.PackageWeight = undefined;
          } else if (odataObject.PackageWeight['@odata.type'] == null) {
              this.PackageWeight = new WeightClass(odataObject.PackageWeight);
          } else {
              var className: string = odataObject.PackageWeight['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.PackageWeight = new Commerce.Proxy.Entities[className](odataObject.PackageWeight)
              }
          }

    
          this.ShippedOnDate = (odataObject.ShippedOnDate instanceof Date) ? odataObject.ShippedOnDate
            : (odataObject.ShippedOnDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ShippedOnDate, "Edm.DateTimeOffset", false) : undefined;
          this.Status = odataObject.Status;
          this.DeliveredOnDate = (odataObject.DeliveredOnDate instanceof Date) ? odataObject.DeliveredOnDate
            : (odataObject.DeliveredOnDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DeliveredOnDate, "Edm.DateTimeOffset", false) : undefined;
          this.EstimatedDeliveryDate = (odataObject.EstimatedDeliveryDate instanceof Date) ? odataObject.EstimatedDeliveryDate
            : (odataObject.EstimatedDeliveryDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.EstimatedDeliveryDate, "Edm.DateTimeOffset", false) : undefined;
          this.TrackingUrl = odataObject.TrackingUrl;
          this.PackagingType = odataObject.PackagingType;
          if (odataObject.DestinationAddress == null) {
              this.DestinationAddress = undefined;
          } else if (odataObject.DestinationAddress['@odata.type'] == null) {
              this.DestinationAddress = new AddressClass(odataObject.DestinationAddress);
          } else {
              var className: string = odataObject.DestinationAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DestinationAddress = new Commerce.Proxy.Entities[className](odataObject.DestinationAddress)
              }
          }

    
          if (odataObject.OriginAddress == null) {
              this.OriginAddress = undefined;
          } else if (odataObject.OriginAddress['@odata.type'] == null) {
              this.OriginAddress = new AddressClass(odataObject.OriginAddress);
          } else {
              var className: string = odataObject.OriginAddress['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.OriginAddress = new Commerce.Proxy.Entities[className](odataObject.OriginAddress)
              }
          }

    
          this.ShipmentProgress = undefined;
          if (odataObject.ShipmentProgress) {
              this.ShipmentProgress = [];
              for (var i = 0; i < odataObject.ShipmentProgress.length; i++) {
                  if (odataObject.ShipmentProgress[i] != null) {
                      if (odataObject.ShipmentProgress[i]['@odata.type'] != null) {
                          var className: string = odataObject.ShipmentProgress[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ShipmentProgress[i] = new Commerce.Proxy.Entities[className](odataObject.ShipmentProgress[i])
                          }
                      } else {
                          this.ShipmentProgress[i] = new ShipmentProgressClass(odataObject.ShipmentProgress[i]);
                      }
                  } else {
                      this.ShipmentProgress[i] = undefined;
                  }
              }
          }
          this.ShippingCharge = (odataObject.ShippingCharge != null) ? parseFloat(odataObject.ShippingCharge) : undefined;
        }
    }
    
    /**
     * Weight entity class.
     */
    export class WeightClass implements Weight {
        public Value: number;
        public Unit: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Value = (odataObject.Value != null) ? parseFloat(odataObject.Value) : undefined;
          this.Unit = odataObject.Unit;
        }
    }
    
    /**
     * ShipmentProgress entity class.
     */
    export class ShipmentProgressClass implements ShipmentProgress {
        public Location: Entities.Address;
        public DateTime: Date;
        public Activity: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.Location == null) {
              this.Location = undefined;
          } else if (odataObject.Location['@odata.type'] == null) {
              this.Location = new AddressClass(odataObject.Location);
          } else {
              var className: string = odataObject.Location['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.Location = new Commerce.Proxy.Entities[className](odataObject.Location)
              }
          }

    
          this.DateTime = (odataObject.DateTime instanceof Date) ? odataObject.DateTime
            : (odataObject.DateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.DateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Activity = odataObject.Activity;
        }
    }
    
    /**
     * ShiftKey entity class.
     */
    export class ShiftKeyClass implements ShiftKey {
        public ShiftTerminalId: string;
        public ShiftId: number;
        public Store: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ShiftTerminalId = odataObject.ShiftTerminalId;
          this.ShiftId = (odataObject.ShiftId != null) ? parseInt(odataObject.ShiftId, 10) : undefined;
          this.Store = odataObject.Store;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AddressFormattingInfo entity class.
     */
    export class AddressFormattingInfoClass implements AddressFormattingInfo {
        public AddressComponentNameValue: number;
        public LineNumber: number;
        public IsDataEntryOnly: boolean;
        public NewLine: boolean;
        public Expand: boolean;
        public Inactive: boolean;
        public Special: boolean;
        public NumberOfSpaces: number;
        public Separator: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AddressComponentNameValue = odataObject.AddressComponentNameValue;
          this.LineNumber = odataObject.LineNumber;
          this.IsDataEntryOnly = odataObject.IsDataEntryOnly;
          this.NewLine = odataObject.NewLine;
          this.Expand = odataObject.Expand;
          this.Inactive = odataObject.Inactive;
          this.Special = odataObject.Special;
          this.NumberOfSpaces = odataObject.NumberOfSpaces;
          this.Separator = odataObject.Separator;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ScaleUnitConfiguration entity class.
     */
    export class ScaleUnitConfigurationClass implements ScaleUnitConfiguration {
        public Id: string;
        public Name: string;
        public Region: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Name = odataObject.Name;
          this.Region = odataObject.Region;
        }
    }
    
    /**
     * HardwareConfigurations entity class.
     */
    export class HardwareConfigurationsClass implements HardwareConfigurations {
        public CashDrawerConfigurations: Entities.HardwareConfiguration[];
        public PrinterConfigurations: Entities.HardwareConfiguration[];
        public PinPadConfiguration: Entities.HardwareConfiguration;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CashDrawerConfigurations = undefined;
          if (odataObject.CashDrawerConfigurations) {
              this.CashDrawerConfigurations = [];
              for (var i = 0; i < odataObject.CashDrawerConfigurations.length; i++) {
                  if (odataObject.CashDrawerConfigurations[i] != null) {
                      if (odataObject.CashDrawerConfigurations[i]['@odata.type'] != null) {
                          var className: string = odataObject.CashDrawerConfigurations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.CashDrawerConfigurations[i] = new Commerce.Proxy.Entities[className](odataObject.CashDrawerConfigurations[i])
                          }
                      } else {
                          this.CashDrawerConfigurations[i] = new HardwareConfigurationClass(odataObject.CashDrawerConfigurations[i]);
                      }
                  } else {
                      this.CashDrawerConfigurations[i] = undefined;
                  }
              }
          }
          this.PrinterConfigurations = undefined;
          if (odataObject.PrinterConfigurations) {
              this.PrinterConfigurations = [];
              for (var i = 0; i < odataObject.PrinterConfigurations.length; i++) {
                  if (odataObject.PrinterConfigurations[i] != null) {
                      if (odataObject.PrinterConfigurations[i]['@odata.type'] != null) {
                          var className: string = odataObject.PrinterConfigurations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PrinterConfigurations[i] = new Commerce.Proxy.Entities[className](odataObject.PrinterConfigurations[i])
                          }
                      } else {
                          this.PrinterConfigurations[i] = new HardwareConfigurationClass(odataObject.PrinterConfigurations[i]);
                      }
                  } else {
                      this.PrinterConfigurations[i] = undefined;
                  }
              }
          }
          if (odataObject.PinPadConfiguration == null) {
              this.PinPadConfiguration = undefined;
          } else if (odataObject.PinPadConfiguration['@odata.type'] == null) {
              this.PinPadConfiguration = new HardwareConfigurationClass(odataObject.PinPadConfiguration);
          } else {
              var className: string = odataObject.PinPadConfiguration['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.PinPadConfiguration = new Commerce.Proxy.Entities[className](odataObject.PinPadConfiguration)
              }
          }

    
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * HardwareConfiguration entity class.
     */
    export class HardwareConfigurationClass implements HardwareConfiguration {
        public RecordId: number;
        public HardwareStationRecordId: number;
        public TerminalId: string;
        public DeviceName: string;
        public IPAddress: string;
        public Port: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.HardwareStationRecordId = (odataObject.HardwareStationRecordId != null) ? parseInt(odataObject.HardwareStationRecordId, 10) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.DeviceName = odataObject.DeviceName;
          this.IPAddress = odataObject.IPAddress;
          this.Port = odataObject.Port;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * PaymentError entity class.
     */
    export class PaymentErrorClass implements PaymentError {
        public Code: string;
        public Message: string;
        public IsLocalized: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Code = odataObject.Code;
          this.Message = odataObject.Message;
          this.IsLocalized = odataObject.IsLocalized;
        }
    }
    
    /**
     * Printer entity class.
     */
    export class PrinterClass implements Printer {
        public Name: string;
        public PrinterType: number;
        public Terminal: number;
        public PrintBehaviorValue: number;
        public ReceiptLayoutId: string;
        public HardwareProfileId: string;
        public ReceiptType: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.PrinterType = odataObject.PrinterType;
          this.Terminal = (odataObject.Terminal != null) ? parseInt(odataObject.Terminal, 10) : undefined;
          this.PrintBehaviorValue = odataObject.PrintBehaviorValue;
          this.ReceiptLayoutId = odataObject.ReceiptLayoutId;
          this.HardwareProfileId = odataObject.HardwareProfileId;
          this.ReceiptType = odataObject.ReceiptType;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TransferOrderJournalLine entity class.
     */
    export class TransferOrderJournalLineClass implements TransferOrderJournalLine {
        public ItemId: string;
        public ItemName: string;
        public InventDimId: string;
        public TotalQuantityShipped: number;
        public QuantityShipped: number;
        public TransferQuantity: number;
        public UnitId: string;
        public ConfigId: string;
        public InventSizeId: string;
        public InventColorId: string;
        public InventStyleId: string;
        public DeliveryMethod: string;
        public Barcode: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.ItemName = odataObject.ItemName;
          this.InventDimId = odataObject.InventDimId;
          this.TotalQuantityShipped = (odataObject.TotalQuantityShipped != null) ? parseFloat(odataObject.TotalQuantityShipped) : undefined;
          this.QuantityShipped = (odataObject.QuantityShipped != null) ? parseFloat(odataObject.QuantityShipped) : undefined;
          this.TransferQuantity = (odataObject.TransferQuantity != null) ? parseFloat(odataObject.TransferQuantity) : undefined;
          this.UnitId = odataObject.UnitId;
          this.ConfigId = odataObject.ConfigId;
          this.InventSizeId = odataObject.InventSizeId;
          this.InventColorId = odataObject.InventColorId;
          this.InventStyleId = odataObject.InventStyleId;
          this.DeliveryMethod = odataObject.DeliveryMethod;
          this.Barcode = odataObject.Barcode;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * InventoryDocumentSourceSerialNumberLine entity class.
     */
    export class InventoryDocumentSourceSerialNumberLineClass implements InventoryDocumentSourceSerialNumberLine {
        public SourceDocumentTypeValue: number;
        public SourceDocumentId: string;
        public DocumentLineRecordId: number;
        public InventTransRecordId: number;
        public LineId: string;
        public Quantity: number;
        public SerialNumber: string;
        public StatusValue: number;
        public ProductId: number;
        public DataAreaId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SourceDocumentTypeValue = odataObject.SourceDocumentTypeValue;
          this.SourceDocumentId = odataObject.SourceDocumentId;
          this.DocumentLineRecordId = (odataObject.DocumentLineRecordId != null) ? parseInt(odataObject.DocumentLineRecordId, 10) : undefined;
          this.InventTransRecordId = (odataObject.InventTransRecordId != null) ? parseInt(odataObject.InventTransRecordId, 10) : undefined;
          this.LineId = odataObject.LineId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.SerialNumber = odataObject.SerialNumber;
          this.StatusValue = odataObject.StatusValue;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.DataAreaId = odataObject.DataAreaId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * KitTransactionLine entity class.
     */
    export class KitTransactionLineClass implements KitTransactionLine {
        public ItemId: string;
        public Quantity: number;
        public InventoryDimensionId: string;
        public ProductId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ItemId = odataObject.ItemId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.InventoryDimensionId = odataObject.InventoryDimensionId;
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ExtensibleRetailChannelType entity class.
     */
    export class ExtensibleRetailChannelTypeClass extends ExtensibleEnumerationClass implements ExtensibleRetailChannelType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleRetailChannelType";
            
        }
    }
    
    /**
     * TenderDetail entity class.
     */
    export class TenderDetailClass implements TenderDetail {
        public LineNumber: number;
        public Amount: number;
        public AmountInForeignCurrency: number;
        public ForeignCurrencyExchangeRate: number;
        public ForeignCurrency: string;
        public BankBagNumber: string;
        public TenderTypeId: string;
        public TenderRecount: number;
        public DenominationDetails: Entities.DenominationDetail[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.AmountInForeignCurrency = (odataObject.AmountInForeignCurrency != null) ? parseFloat(odataObject.AmountInForeignCurrency) : undefined;
          this.ForeignCurrencyExchangeRate = (odataObject.ForeignCurrencyExchangeRate != null) ? parseFloat(odataObject.ForeignCurrencyExchangeRate) : undefined;
          this.ForeignCurrency = odataObject.ForeignCurrency;
          this.BankBagNumber = odataObject.BankBagNumber;
          this.TenderTypeId = odataObject.TenderTypeId;
          this.TenderRecount = odataObject.TenderRecount;
          this.DenominationDetails = undefined;
          if (odataObject.DenominationDetails) {
              this.DenominationDetails = [];
              for (var i = 0; i < odataObject.DenominationDetails.length; i++) {
                  if (odataObject.DenominationDetails[i] != null) {
                      if (odataObject.DenominationDetails[i]['@odata.type'] != null) {
                          var className: string = odataObject.DenominationDetails[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.DenominationDetails[i] = new Commerce.Proxy.Entities[className](odataObject.DenominationDetails[i])
                          }
                      } else {
                          this.DenominationDetails[i] = new DenominationDetailClass(odataObject.DenominationDetails[i]);
                      }
                  } else {
                      this.DenominationDetails[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DenominationDetail entity class.
     */
    export class DenominationDetailClass implements DenominationDetail {
        public Type: number;
        public Currency: string;
        public DenominationAmount: number;
        public QuantityDeclared: number;
        public AmountDeclared: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Type = odataObject.Type;
          this.Currency = odataObject.Currency;
          this.DenominationAmount = (odataObject.DenominationAmount != null) ? parseFloat(odataObject.DenominationAmount) : undefined;
          this.QuantityDeclared = odataObject.QuantityDeclared;
          this.AmountDeclared = (odataObject.AmountDeclared != null) ? parseFloat(odataObject.AmountDeclared) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ButtonGridZone entity class.
     */
    export class ButtonGridZoneClass implements ButtonGridZone {
        public ButtonGridId: string;
        public ZoneId: string;
        public ZoneName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ButtonGridId = odataObject.ButtonGridId;
          this.ZoneId = odataObject.ZoneId;
          this.ZoneName = odataObject.ZoneName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ImageZone entity class.
     */
    export class ImageZoneClass implements ImageZone {
        public PictureId: number;
        public PictureAsBase64: string;
        public ZoneId: string;
        public ZoneName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PictureId = odataObject.PictureId;
          this.PictureAsBase64 = odataObject.PictureAsBase64;
          this.ZoneId = odataObject.ZoneId;
          this.ZoneName = odataObject.ZoneName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReportZone entity class.
     */
    export class ReportZoneClass implements ReportZone {
        public ReportRecordId: number;
        public ZoneId: string;
        public ZoneName: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ReportRecordId = (odataObject.ReportRecordId != null) ? parseInt(odataObject.ReportRecordId, 10) : undefined;
          this.ZoneId = odataObject.ZoneId;
          this.ZoneName = odataObject.ZoneName;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * SalesInvoiceLine entity class.
     */
    export class SalesInvoiceLineClass implements SalesInvoiceLine {
        public RecordId: number;
        public ItemId: string;
        public ProductName: string;
        public InventDimensionId: string;
        public InventTransactionId: string;
        public Quantity: number;
        public Price: number;
        public DiscountPercent: number;
        public DiscountAmount: number;
        public BatchId: string;
        public NetAmount: number;
        public Site: string;
        public Warehouse: string;
        public SerialId: string;
        public ColorId: string;
        public SizeId: string;
        public StyleId: string;
        public ConfigId: string;
        public ColorName: string;
        public SizeName: string;
        public StyleName: string;
        public ConfigName: string;
        public SalesTaxGroup: string;
        public ItemTaxGroup: string;
        public SalesMarkup: number;
        public TotalDiscount: number;
        public TotalPercentageDiscount: number;
        public LineDiscount: number;
        public PeriodicDiscount: number;
        public PeriodicPercentageDiscount: number;
        public LineManualDiscountPercentage: number;
        public LineManualDiscountAmount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.ItemId = odataObject.ItemId;
          this.ProductName = odataObject.ProductName;
          this.InventDimensionId = odataObject.InventDimensionId;
          this.InventTransactionId = odataObject.InventTransactionId;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.Price = (odataObject.Price != null) ? parseFloat(odataObject.Price) : undefined;
          this.DiscountPercent = (odataObject.DiscountPercent != null) ? parseFloat(odataObject.DiscountPercent) : undefined;
          this.DiscountAmount = (odataObject.DiscountAmount != null) ? parseFloat(odataObject.DiscountAmount) : undefined;
          this.BatchId = odataObject.BatchId;
          this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
          this.Site = odataObject.Site;
          this.Warehouse = odataObject.Warehouse;
          this.SerialId = odataObject.SerialId;
          this.ColorId = odataObject.ColorId;
          this.SizeId = odataObject.SizeId;
          this.StyleId = odataObject.StyleId;
          this.ConfigId = odataObject.ConfigId;
          this.ColorName = odataObject.ColorName;
          this.SizeName = odataObject.SizeName;
          this.StyleName = odataObject.StyleName;
          this.ConfigName = odataObject.ConfigName;
          this.SalesTaxGroup = odataObject.SalesTaxGroup;
          this.ItemTaxGroup = odataObject.ItemTaxGroup;
          this.SalesMarkup = (odataObject.SalesMarkup != null) ? parseFloat(odataObject.SalesMarkup) : undefined;
          this.TotalDiscount = (odataObject.TotalDiscount != null) ? parseFloat(odataObject.TotalDiscount) : undefined;
          this.TotalPercentageDiscount = (odataObject.TotalPercentageDiscount != null) ? parseFloat(odataObject.TotalPercentageDiscount) : undefined;
          this.LineDiscount = (odataObject.LineDiscount != null) ? parseFloat(odataObject.LineDiscount) : undefined;
          this.PeriodicDiscount = (odataObject.PeriodicDiscount != null) ? parseFloat(odataObject.PeriodicDiscount) : undefined;
          this.PeriodicPercentageDiscount = (odataObject.PeriodicPercentageDiscount != null) ? parseFloat(odataObject.PeriodicPercentageDiscount) : undefined;
          this.LineManualDiscountPercentage = (odataObject.LineManualDiscountPercentage != null) ? parseFloat(odataObject.LineManualDiscountPercentage) : undefined;
          this.LineManualDiscountAmount = (odataObject.LineManualDiscountAmount != null) ? parseFloat(odataObject.LineManualDiscountAmount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ReportRow entity class.
     */
    export class ReportRowClass implements ReportRow {
        public RowData: Entities.CommerceProperty[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RowData = undefined;
          if (odataObject.RowData) {
              this.RowData = [];
              for (var i = 0; i < odataObject.RowData.length; i++) {
                  if (odataObject.RowData[i] != null) {
                      if (odataObject.RowData[i]['@odata.type'] != null) {
                          var className: string = odataObject.RowData[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RowData[i] = new Commerce.Proxy.Entities[className](odataObject.RowData[i])
                          }
                      } else {
                          this.RowData[i] = new CommercePropertyClass(odataObject.RowData[i]);
                      }
                  } else {
                      this.RowData[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FormAnnotation entity class.
     */
    export class FormAnnotationClass extends AnnotationClass implements FormAnnotation {
        public MenuItemLabel: string;
        public MenuItemName: string;
        public MenuItemType: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.MenuItemLabel = odataObject.MenuItemLabel;
          this.MenuItemName = odataObject.MenuItemName;
          this.MenuItemType = odataObject.MenuItemType; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.FormAnnotation";
            
        }
    }
    
    /**
     * TaskGuideAnnotation entity class.
     */
    export class TaskGuideAnnotationClass extends AnnotationClass implements TaskGuideAnnotation {
        public RecordingValueType: string;
        public Title: string;
        public ExampleText: string;
        public Hidden: boolean;
        public GlobalId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RecordingValueType = odataObject.RecordingValueType;
          this.Title = odataObject.Title;
          this.ExampleText = odataObject.ExampleText;
          this.Hidden = odataObject.Hidden;
          this.GlobalId = odataObject.GlobalId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.TaskGuideAnnotation";
            
        }
    }
    
    /**
     * CommandArgument entity class.
     */
    export class CommandArgumentClass implements CommandArgument {
        public Value: string;
        public IsReference: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Value = odataObject.Value;
          this.IsReference = odataObject.IsReference;
        }
    }
    
    /**
     * PropertyUserAction entity class.
     */
    export class PropertyUserActionClass extends FormUserActionClass implements PropertyUserAction {
        public Value: string;
        public ValueLabel: string;
        public PropertyName: string;
        public ControlName: string;
        public ControlType: string;
        public UserActionType: string;
        public IsReference: boolean;
        public LabelId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Value = odataObject.Value;
          this.ValueLabel = odataObject.ValueLabel;
          this.PropertyName = odataObject.PropertyName;
          this.ControlName = odataObject.ControlName;
          this.ControlType = odataObject.ControlType;
          this.UserActionType = odataObject.UserActionType;
          this.IsReference = odataObject.IsReference;
          this.LabelId = odataObject.LabelId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.PropertyUserAction";
            
        }
    }
    
    /**
     * InfoUserAction entity class.
     */
    export class InfoUserActionClass extends UserActionClass implements InfoUserAction {
        public FormId: string;
        public ControlLabel: string;
        public ControlLabelId: string;
        public ControlName: string;
        public Text: string;
        public Notes: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.FormId = odataObject.FormId;
          this.ControlLabel = odataObject.ControlLabel;
          this.ControlLabelId = odataObject.ControlLabelId;
          this.ControlName = odataObject.ControlName;
          this.Text = odataObject.Text;
          this.Notes = odataObject.Notes; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.InfoUserAction";
            
        }
    }
    
    /**
     * MenuItemUserAction entity class.
     */
    export class MenuItemUserActionClass extends UserActionClass implements MenuItemUserAction {
        public MenuItemName: string;
        public MenuItemType: string;
        public NavigationPath: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.MenuItemName = odataObject.MenuItemName;
          this.MenuItemType = odataObject.MenuItemType;
          this.NavigationPath = undefined;
          if (odataObject.NavigationPath) {
              this.NavigationPath = [];
              for (var i = 0; i < odataObject.NavigationPath.length; i++) {
                  if (odataObject.NavigationPath[i] != null) {
                      this.NavigationPath[i] = odataObject.NavigationPath[i];              } else {
                      this.NavigationPath[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.MenuItemUserAction";
            
        }
    }
    
    /**
     * ValidationUserAction entity class.
     */
    export class ValidationUserActionClass extends UserActionClass implements ValidationUserAction {
        public Name: string;
        public Comment: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.Comment = odataObject.Comment; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ValidationUserAction";
            
        }
    }
    
    /**
     * ArtifactSummary entity class.
     */
    export class ArtifactSummaryClass implements ArtifactSummary {
        public ArtifactType: string;
        public LanguageTags: string[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ArtifactType = odataObject.ArtifactType;
          this.LanguageTags = undefined;
          if (odataObject.LanguageTags) {
              this.LanguageTags = [];
              for (var i = 0; i < odataObject.LanguageTags.length; i++) {
                  if (odataObject.LanguageTags[i] != null) {
                      this.LanguageTags[i] = odataObject.LanguageTags[i];              } else {
                      this.LanguageTags[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * MetadataPropertyValue entity class.
     */
    export class MetadataPropertyValueClass implements MetadataPropertyValue {
        public PropertyId: string;
        public SingleValue: string;
        public MultiValue: Entities.MetadataText[];
        public Tags: string[];
        public ComboBox: string;
        public MultiSelect: string[];
        public Links: Entities.MetadataHypertextLink[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.PropertyId = odataObject.PropertyId;
          this.SingleValue = odataObject.SingleValue;
          this.MultiValue = undefined;
          if (odataObject.MultiValue) {
              this.MultiValue = [];
              for (var i = 0; i < odataObject.MultiValue.length; i++) {
                  if (odataObject.MultiValue[i] != null) {
                      if (odataObject.MultiValue[i]['@odata.type'] != null) {
                          var className: string = odataObject.MultiValue[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.MultiValue[i] = new Commerce.Proxy.Entities[className](odataObject.MultiValue[i])
                          }
                      } else {
                          this.MultiValue[i] = new MetadataTextClass(odataObject.MultiValue[i]);
                      }
                  } else {
                      this.MultiValue[i] = undefined;
                  }
              }
          }
          this.Tags = undefined;
          if (odataObject.Tags) {
              this.Tags = [];
              for (var i = 0; i < odataObject.Tags.length; i++) {
                  if (odataObject.Tags[i] != null) {
                      this.Tags[i] = odataObject.Tags[i];              } else {
                      this.Tags[i] = undefined;
                  }
              }
          }
          this.ComboBox = odataObject.ComboBox;
          this.MultiSelect = undefined;
          if (odataObject.MultiSelect) {
              this.MultiSelect = [];
              for (var i = 0; i < odataObject.MultiSelect.length; i++) {
                  if (odataObject.MultiSelect[i] != null) {
                      this.MultiSelect[i] = odataObject.MultiSelect[i];              } else {
                      this.MultiSelect[i] = undefined;
                  }
              }
          }
          this.Links = undefined;
          if (odataObject.Links) {
              this.Links = [];
              for (var i = 0; i < odataObject.Links.length; i++) {
                  if (odataObject.Links[i] != null) {
                      if (odataObject.Links[i]['@odata.type'] != null) {
                          var className: string = odataObject.Links[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Links[i] = new Commerce.Proxy.Entities[className](odataObject.Links[i])
                          }
                      } else {
                          this.Links[i] = new MetadataHypertextLinkClass(odataObject.Links[i]);
                      }
                  } else {
                      this.Links[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * MetadataText entity class.
     */
    export class MetadataTextClass implements MetadataText {
        public Id: string;
        public Text: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.Text = odataObject.Text;
        }
    }
    
    /**
     * MetadataHypertextLink entity class.
     */
    export class MetadataHypertextLinkClass implements MetadataHypertextLink {
        public Id: string;
        public DisplayName: string;
        public Url: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Id = odataObject.Id;
          this.DisplayName = odataObject.DisplayName;
          this.Url = odataObject.Url;
        }
    }
    
    /**
     * FormContext entity class.
     */
    export class FormContextClass implements FormContext {
        public FormID: string;
        public FormName: string;
        public RecordingName: string;
        public HasMetadata: boolean;
        public Sequence: number;
        public Annotations: Entities.Annotation[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FormID = odataObject.FormID;
          this.FormName = odataObject.FormName;
          this.RecordingName = odataObject.RecordingName;
          this.HasMetadata = odataObject.HasMetadata;
          this.Sequence = odataObject.Sequence;
          this.Annotations = undefined;
          if (odataObject.Annotations) {
              this.Annotations = [];
              for (var i = 0; i < odataObject.Annotations.length; i++) {
                  if (odataObject.Annotations[i] != null) {
                      if (odataObject.Annotations[i]['@odata.type'] != null) {
                          var className: string = odataObject.Annotations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Annotations[i] = new Commerce.Proxy.Entities[className](odataObject.Annotations[i])
                          }
                      } else {
                          this.Annotations[i] = new AnnotationClass(odataObject.Annotations[i]);
                      }
                  } else {
                      this.Annotations[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ExtensibleFiscalRegistrationType entity class.
     */
    export class ExtensibleFiscalRegistrationTypeClass extends ExtensibleEnumerationClass implements ExtensibleFiscalRegistrationType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleFiscalRegistrationType";
            
        }
    }
    
    /**
     * FiscalTransactionTenderLineAdjustment entity class.
     */
    export class FiscalTransactionTenderLineAdjustmentClass implements FiscalTransactionTenderLineAdjustment {
        public TenderLineNumber: number;
        public AdjustmentAmount: number;
        public RecordGuid: string;
        public TransactionId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TenderLineNumber = (odataObject.TenderLineNumber != null) ? parseFloat(odataObject.TenderLineNumber) : undefined;
          this.AdjustmentAmount = (odataObject.AdjustmentAmount != null) ? parseFloat(odataObject.AdjustmentAmount) : undefined;
          this.RecordGuid = odataObject.RecordGuid;
          this.TransactionId = odataObject.TransactionId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalTransactionSalesLineAdjustment entity class.
     */
    export class FiscalTransactionSalesLineAdjustmentClass implements FiscalTransactionSalesLineAdjustment {
        public SalesLineNumber: number;
        public Exclude: boolean;
        public RecordGuid: string;
        public TransactionId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SalesLineNumber = (odataObject.SalesLineNumber != null) ? parseFloat(odataObject.SalesLineNumber) : undefined;
          this.Exclude = odataObject.Exclude;
          this.RecordGuid = odataObject.RecordGuid;
          this.TransactionId = odataObject.TransactionId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DetailedOrderStatus entity class.
     */
    export class DetailedOrderStatusClass extends ExtensibleEnumerationClass implements DetailedOrderStatus {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.DetailedOrderStatus";
            
        }
    }
    
    /**
     * DetailedLineStatus entity class.
     */
    export class DetailedLineStatusClass extends ExtensibleEnumerationClass implements DetailedLineStatus {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.DetailedLineStatus";
            
        }
    }
    
    /**
     * SalesAffiliationLoyaltyTier entity class.
     */
    export class SalesAffiliationLoyaltyTierClass extends AffiliationLoyaltyTierClass implements SalesAffiliationLoyaltyTier {
        public TransactionId: string;
        public ChannelId: number;
        public TerminalId: string;
        public ReceiptId: string;
        public StaffId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.TransactionId = odataObject.TransactionId;
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.ReceiptId = odataObject.ReceiptId;
          this.StaffId = odataObject.StaffId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesAffiliationLoyaltyTier";
            
        }
    }
    
    /**
     * TaxViewLine entity class.
     */
    export class TaxViewLineClass implements TaxViewLine {
        public TaxId: string;
        public TaxAmount: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TaxId = odataObject.TaxId;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
        }
    }
    
    /**
     * Coupon entity class.
     */
    export class CouponClass implements Coupon {
        public CodeId: string;
        public Code: string;
        public DiscountOfferId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CodeId = odataObject.CodeId;
          this.Code = odataObject.Code;
          this.DiscountOfferId = odataObject.DiscountOfferId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerAccountDepositLine entity class.
     */
    export class CustomerAccountDepositLineClass implements CustomerAccountDepositLine {
        public Amount: number;
        public CustomerAccount: string;
        public Comment: string;
        public StoreNumber: string;
        public Terminal: string;
        public Shift: string;
        public TransactionStatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Amount = (odataObject.Amount != null) ? parseFloat(odataObject.Amount) : undefined;
          this.CustomerAccount = odataObject.CustomerAccount;
          this.Comment = odataObject.Comment;
          this.StoreNumber = odataObject.StoreNumber;
          this.Terminal = odataObject.Terminal;
          this.Shift = odataObject.Shift;
          this.TransactionStatusValue = odataObject.TransactionStatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerAttribute entity class.
     */
    export class CustomerAttributeClass implements CustomerAttribute {
        public AttributeValue: Entities.CommercePropertyValue;
        public Units: string;
        public RecordId: number;
        public Name: string;
        public KeyName: string;
        public DataTypeValue: number;
        public Attribute: number;
        public NameTranslations: Entities.TextValueTranslation[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.AttributeValue == null) {
              this.AttributeValue = undefined;
          } else if (odataObject.AttributeValue['@odata.type'] == null) {
              this.AttributeValue = new CommercePropertyValueClass(odataObject.AttributeValue);
          } else {
              var className: string = odataObject.AttributeValue['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.AttributeValue = new Commerce.Proxy.Entities[className](odataObject.AttributeValue)
              }
          }

    
          this.Units = odataObject.Units;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.KeyName = odataObject.KeyName;
          this.DataTypeValue = odataObject.DataTypeValue;
          this.Attribute = (odataObject.Attribute != null) ? parseInt(odataObject.Attribute, 10) : undefined;
          this.NameTranslations = undefined;
          if (odataObject.NameTranslations) {
              this.NameTranslations = [];
              for (var i = 0; i < odataObject.NameTranslations.length; i++) {
                  if (odataObject.NameTranslations[i] != null) {
                      if (odataObject.NameTranslations[i]['@odata.type'] != null) {
                          var className: string = odataObject.NameTranslations[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.NameTranslations[i] = new Commerce.Proxy.Entities[className](odataObject.NameTranslations[i])
                          }
                      } else {
                          this.NameTranslations[i] = new TextValueTranslationClass(odataObject.NameTranslations[i]);
                      }
                  } else {
                      this.NameTranslations[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ContactInfo entity class.
     */
    export class ContactInfoClass implements ContactInfo {
        public AddressTypeValue: number;
        public RecordId: number;
        public PartyLocationRecordId: number;
        public PartyRecordId: number;
        public PartyNumber: string;
        public Description: string;
        public Value: string;
        public ValueExtension: string;
        public LogisticsLocationId: string;
        public LogisticsLocationRecordId: number;
        public ParentLocation: number;
        public IsPrimary: boolean;
        public IsMobilePhone: boolean;
        public IsPrivate: boolean;
        public IsOptedInMarketing: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.AddressTypeValue = odataObject.AddressTypeValue;
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.PartyLocationRecordId = (odataObject.PartyLocationRecordId != null) ? parseInt(odataObject.PartyLocationRecordId, 10) : undefined;
          this.PartyRecordId = (odataObject.PartyRecordId != null) ? parseInt(odataObject.PartyRecordId, 10) : undefined;
          this.PartyNumber = odataObject.PartyNumber;
          this.Description = odataObject.Description;
          this.Value = odataObject.Value;
          this.ValueExtension = odataObject.ValueExtension;
          this.LogisticsLocationId = odataObject.LogisticsLocationId;
          this.LogisticsLocationRecordId = (odataObject.LogisticsLocationRecordId != null) ? parseInt(odataObject.LogisticsLocationRecordId, 10) : undefined;
          this.ParentLocation = (odataObject.ParentLocation != null) ? parseInt(odataObject.ParentLocation, 10) : undefined;
          this.IsPrimary = odataObject.IsPrimary;
          this.IsMobilePhone = odataObject.IsMobilePhone;
          this.IsPrivate = odataObject.IsPrivate;
          this.IsOptedInMarketing = odataObject.IsOptedInMarketing;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ShiftTaxLine entity class.
     */
    export class ShiftTaxLineClass implements ShiftTaxLine {
        public TaxCode: string;
        public TaxAmount: number;
        public TaxRate: number;
        public NetAmount: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TaxCode = odataObject.TaxCode;
          this.TaxAmount = (odataObject.TaxAmount != null) ? parseFloat(odataObject.TaxAmount) : undefined;
          this.TaxRate = (odataObject.TaxRate != null) ? parseFloat(odataObject.TaxRate) : undefined;
          this.NetAmount = (odataObject.NetAmount != null) ? parseFloat(odataObject.NetAmount) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * TaxRegistration entity class.
     */
    export class TaxRegistrationClass implements TaxRegistration {
        public RecordId: number;
        public Name: string;
        public CountryRegionId: string;
        public IsRegistrationNumberUnique: boolean;
        public IsPrimaryAddressRestricted: boolean;
        public TypeApplicabilityRuleRecordId: number;
        public TypeValue: number;
        public Description: string;
        public DirPartyLocationRecordId: number;
        public RegistrationNumber: string;
        public ValidFrom: Date;
        public ValidTo: Date;
        public Issuer: string;
        public IssueDate: Date;
        public Section: string;
        public DirectoryPartyRecordId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.CountryRegionId = odataObject.CountryRegionId;
          this.IsRegistrationNumberUnique = odataObject.IsRegistrationNumberUnique;
          this.IsPrimaryAddressRestricted = odataObject.IsPrimaryAddressRestricted;
          this.TypeApplicabilityRuleRecordId = (odataObject.TypeApplicabilityRuleRecordId != null) ? parseInt(odataObject.TypeApplicabilityRuleRecordId, 10) : undefined;
          this.TypeValue = odataObject.TypeValue;
          this.Description = odataObject.Description;
          this.DirPartyLocationRecordId = (odataObject.DirPartyLocationRecordId != null) ? parseInt(odataObject.DirPartyLocationRecordId, 10) : undefined;
          this.RegistrationNumber = odataObject.RegistrationNumber;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.Issuer = odataObject.Issuer;
          this.IssueDate = (odataObject.IssueDate instanceof Date) ? odataObject.IssueDate
            : (odataObject.IssueDate != null) ? OData.jsonLightReadStringPropertyValue(odataObject.IssueDate, "Edm.DateTimeOffset", false) : undefined;
          this.Section = odataObject.Section;
          this.DirectoryPartyRecordId = (odataObject.DirectoryPartyRecordId != null) ? parseInt(odataObject.DirectoryPartyRecordId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ChannelTaxRegistration entity class.
     */
    export class ChannelTaxRegistrationClass extends TaxRegistrationClass implements ChannelTaxRegistration {
        public ChannelId: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ChannelId = (odataObject.ChannelId != null) ? parseInt(odataObject.ChannelId, 10) : undefined; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ChannelTaxRegistration";
            
        }
    }
    
    /**
     * LinkedProduct entity class.
     */
    export class LinkedProductClass implements LinkedProduct {
        public ProductRecordId: number;
        public LinkedProductRecordId: number;
        public Quantity: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.LinkedProductRecordId = (odataObject.LinkedProductRecordId != null) ? parseInt(odataObject.LinkedProductRecordId, 10) : undefined;
          this.Quantity = (odataObject.Quantity != null) ? parseFloat(odataObject.Quantity) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * DisplayOrderInCategory entity class.
     */
    export class DisplayOrderInCategoryClass implements DisplayOrderInCategory {
        public CategoryRecordId: number;
        public DisplayOrder: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CategoryRecordId = (odataObject.CategoryRecordId != null) ? parseInt(odataObject.CategoryRecordId, 10) : undefined;
          this.DisplayOrder = (odataObject.DisplayOrder != null) ? parseFloat(odataObject.DisplayOrder) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RelatedProduct entity class.
     */
    export class RelatedProductClass implements RelatedProduct {
        public ProductRecordId: number;
        public RelatedProductRecordId: number;
        public CatalogId: number;
        public RelationName: string;
        public IsExcludedRelation: boolean;
        public IsDirectRelation: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductRecordId = (odataObject.ProductRecordId != null) ? parseInt(odataObject.ProductRecordId, 10) : undefined;
          this.RelatedProductRecordId = (odataObject.RelatedProductRecordId != null) ? parseInt(odataObject.RelatedProductRecordId, 10) : undefined;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.RelationName = odataObject.RelationName;
          this.IsExcludedRelation = odataObject.IsExcludedRelation;
          this.IsDirectRelation = odataObject.IsDirectRelation;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * KitComponent entity class.
     */
    export class KitComponentClass implements KitComponent {
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ListingIdentity entity class.
     */
    export class ListingIdentityClass implements ListingIdentity {
        public ProductId: number;
        public LanguageId: string;
        public CatalogId: number;
        public Tag: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.LanguageId = odataObject.LanguageId;
          this.CatalogId = (odataObject.CatalogId != null) ? parseInt(odataObject.CatalogId, 10) : undefined;
          this.Tag = odataObject.Tag;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductRatingCount entity class.
     */
    export class ProductRatingCountClass implements ProductRatingCount {
        public Rating: number;
        public Count: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Rating = (odataObject.Rating != null) ? parseFloat(odataObject.Rating) : undefined;
          this.Count = odataObject.Count;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * RegularStoreHours entity class.
     */
    export class RegularStoreHoursClass implements RegularStoreHours {
        public MondayOpenTime: number;
        public MondayCloseTime: number;
        public IsClosedOnMonday: boolean;
        public TuesdayOpenTime: number;
        public TuesdayCloseTime: number;
        public IsClosedOnTuesday: boolean;
        public WednesdayOpenTime: number;
        public WednesdayCloseTime: number;
        public IsClosedOnWednesday: boolean;
        public ThursdayOpenTime: number;
        public ThursdayCloseTime: number;
        public IsClosedOnThursday: boolean;
        public FridayOpenTime: number;
        public FridayCloseTime: number;
        public IsClosedOnFriday: boolean;
        public SaturdayOpenTime: number;
        public SaturdayCloseTime: number;
        public IsClosedOnSaturday: boolean;
        public SundayOpenTime: number;
        public SundayCloseTime: number;
        public IsClosedOnSunday: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.MondayOpenTime = odataObject.MondayOpenTime;
          this.MondayCloseTime = odataObject.MondayCloseTime;
          this.IsClosedOnMonday = odataObject.IsClosedOnMonday;
          this.TuesdayOpenTime = odataObject.TuesdayOpenTime;
          this.TuesdayCloseTime = odataObject.TuesdayCloseTime;
          this.IsClosedOnTuesday = odataObject.IsClosedOnTuesday;
          this.WednesdayOpenTime = odataObject.WednesdayOpenTime;
          this.WednesdayCloseTime = odataObject.WednesdayCloseTime;
          this.IsClosedOnWednesday = odataObject.IsClosedOnWednesday;
          this.ThursdayOpenTime = odataObject.ThursdayOpenTime;
          this.ThursdayCloseTime = odataObject.ThursdayCloseTime;
          this.IsClosedOnThursday = odataObject.IsClosedOnThursday;
          this.FridayOpenTime = odataObject.FridayOpenTime;
          this.FridayCloseTime = odataObject.FridayCloseTime;
          this.IsClosedOnFriday = odataObject.IsClosedOnFriday;
          this.SaturdayOpenTime = odataObject.SaturdayOpenTime;
          this.SaturdayCloseTime = odataObject.SaturdayCloseTime;
          this.IsClosedOnSaturday = odataObject.IsClosedOnSaturday;
          this.SundayOpenTime = odataObject.SundayOpenTime;
          this.SundayCloseTime = odataObject.SundayCloseTime;
          this.IsClosedOnSunday = odataObject.IsClosedOnSunday;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ValidationPeriod entity class.
     */
    export class ValidationPeriodClass implements ValidationPeriod {
        public RecordId: number;
        public PeriodId: string;
        public Description: string;
        public ValidFrom: Date;
        public ValidTo: Date;
        public StartingTime: number;
        public EndingTime: number;
        public IsTimeBounded: number;
        public MondayStartingTime: number;
        public MondayEndingTime: number;
        public IsMondayTimeBounded: number;
        public TuesdayStartingTime: number;
        public TuesdayEndingTime: number;
        public IsTuesdayTimeBounded: number;
        public WednesdayStartingTime: number;
        public WednesdayEndingTime: number;
        public IsWednesdayTimeBounded: number;
        public ThursdayStartingTime: number;
        public ThursdayEndingTime: number;
        public IsThursdayTimeBounded: number;
        public FridayStartingTime: number;
        public FridayEndingTime: number;
        public IsFridayTimeBounded: number;
        public SaturdayStartingTime: number;
        public SaturdayEndingTime: number;
        public IsSaturdayTimeBounded: number;
        public SundayStartingTime: number;
        public SundayEndingTime: number;
        public IsSundayTimeBounded: number;
        public IsEndTimeAfterMidnight: number;
        public IsMondayEndTimeAfterMidnight: number;
        public IsTuesdayEndTimeAfterMidnight: number;
        public IsWednesdayEndTimeAfterMidnight: number;
        public IsThursdayEndTimeAfterMidnight: number;
        public IsFridayEndTimeAfterMidnight: number;
        public IsSaturdayEndTimeAfterMidnight: number;
        public IsSundayEndTimeAfterMidnight: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.PeriodId = odataObject.PeriodId;
          this.Description = odataObject.Description;
          this.ValidFrom = (odataObject.ValidFrom instanceof Date) ? odataObject.ValidFrom
            : (odataObject.ValidFrom != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidFrom, "Edm.DateTimeOffset", false) : undefined;
          this.ValidTo = (odataObject.ValidTo instanceof Date) ? odataObject.ValidTo
            : (odataObject.ValidTo != null) ? OData.jsonLightReadStringPropertyValue(odataObject.ValidTo, "Edm.DateTimeOffset", false) : undefined;
          this.StartingTime = odataObject.StartingTime;
          this.EndingTime = odataObject.EndingTime;
          this.IsTimeBounded = odataObject.IsTimeBounded;
          this.MondayStartingTime = odataObject.MondayStartingTime;
          this.MondayEndingTime = odataObject.MondayEndingTime;
          this.IsMondayTimeBounded = odataObject.IsMondayTimeBounded;
          this.TuesdayStartingTime = odataObject.TuesdayStartingTime;
          this.TuesdayEndingTime = odataObject.TuesdayEndingTime;
          this.IsTuesdayTimeBounded = odataObject.IsTuesdayTimeBounded;
          this.WednesdayStartingTime = odataObject.WednesdayStartingTime;
          this.WednesdayEndingTime = odataObject.WednesdayEndingTime;
          this.IsWednesdayTimeBounded = odataObject.IsWednesdayTimeBounded;
          this.ThursdayStartingTime = odataObject.ThursdayStartingTime;
          this.ThursdayEndingTime = odataObject.ThursdayEndingTime;
          this.IsThursdayTimeBounded = odataObject.IsThursdayTimeBounded;
          this.FridayStartingTime = odataObject.FridayStartingTime;
          this.FridayEndingTime = odataObject.FridayEndingTime;
          this.IsFridayTimeBounded = odataObject.IsFridayTimeBounded;
          this.SaturdayStartingTime = odataObject.SaturdayStartingTime;
          this.SaturdayEndingTime = odataObject.SaturdayEndingTime;
          this.IsSaturdayTimeBounded = odataObject.IsSaturdayTimeBounded;
          this.SundayStartingTime = odataObject.SundayStartingTime;
          this.SundayEndingTime = odataObject.SundayEndingTime;
          this.IsSundayTimeBounded = odataObject.IsSundayTimeBounded;
          this.IsEndTimeAfterMidnight = odataObject.IsEndTimeAfterMidnight;
          this.IsMondayEndTimeAfterMidnight = odataObject.IsMondayEndTimeAfterMidnight;
          this.IsTuesdayEndTimeAfterMidnight = odataObject.IsTuesdayEndTimeAfterMidnight;
          this.IsWednesdayEndTimeAfterMidnight = odataObject.IsWednesdayEndTimeAfterMidnight;
          this.IsThursdayEndTimeAfterMidnight = odataObject.IsThursdayEndTimeAfterMidnight;
          this.IsFridayEndTimeAfterMidnight = odataObject.IsFridayEndTimeAfterMidnight;
          this.IsSaturdayEndTimeAfterMidnight = odataObject.IsSaturdayEndTimeAfterMidnight;
          this.IsSundayEndTimeAfterMidnight = odataObject.IsSundayEndTimeAfterMidnight;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ClientBookChange entity class.
     */
    export class ClientBookChangeClass implements ClientBookChange {
        public FromStaffId: string;
        public ToStaffId: string;
        public CustomerId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FromStaffId = odataObject.FromStaffId;
          this.ToStaffId = odataObject.ToStaffId;
          this.CustomerId = odataObject.CustomerId;
        }
    }
    
    /**
     * RetailSharedConfigurationParameter entity class.
     */
    export class RetailSharedConfigurationParameterClass implements RetailSharedConfigurationParameter {
        public RecordId: number;
        public Name: string;
        public Value: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RecordId = (odataObject.RecordId != null) ? parseInt(odataObject.RecordId, 10) : undefined;
          this.Name = odataObject.Name;
          this.Value = odataObject.Value;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CDXDataStore entity class.
     */
    export class CDXDataStoreClass implements CDXDataStore {
        public Name: string;
        public RecId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Name = odataObject.Name;
          this.RecId = (odataObject.RecId != null) ? parseInt(odataObject.RecId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * UploadJobPackageRequest entity class.
     */
    export class UploadJobPackageRequestClass implements UploadJobPackageRequest {
        public JobId: string;
        public RerunUploadSessionId: number;
        public TargetStorage: string;
        public UploadJobDefintion: string;
        public UploadUrl: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.JobId = odataObject.JobId;
          this.RerunUploadSessionId = (odataObject.RerunUploadSessionId != null) ? parseInt(odataObject.RerunUploadSessionId, 10) : undefined;
          this.TargetStorage = odataObject.TargetStorage;
          this.UploadJobDefintion = odataObject.UploadJobDefintion;
          this.UploadUrl = odataObject.UploadUrl;
        }
    }
    
    /**
     * ExtensibleAuditEventType entity class.
     */
    export class ExtensibleAuditEventTypeClass extends ExtensibleEnumerationClass implements ExtensibleAuditEventType {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataModel.ExtensibleAuditEventType";
            
        }
    }
    
    /**
     * AuditEventFiscalTransaction entity class.
     */
    export class AuditEventFiscalTransactionClass implements AuditEventFiscalTransaction {
        public EventId: number;
        public LineNumber: number;
        public RegisterResponse: string;
        public Store: string;
        public TransDateTime: Date;
        public Terminal: string;
        public UploadType: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EventId = (odataObject.EventId != null) ? parseInt(odataObject.EventId, 10) : undefined;
          this.LineNumber = (odataObject.LineNumber != null) ? parseFloat(odataObject.LineNumber) : undefined;
          this.RegisterResponse = odataObject.RegisterResponse;
          this.Store = odataObject.Store;
          this.TransDateTime = (odataObject.TransDateTime instanceof Date) ? odataObject.TransDateTime
            : (odataObject.TransDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TransDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.Terminal = odataObject.Terminal;
          this.UploadType = odataObject.UploadType;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AuditEventFiscalRegistrationLine entity class.
     */
    export class AuditEventFiscalRegistrationLineClass implements AuditEventFiscalRegistrationLine {
        public EventId: number;
        public RegisterResponse: string;
        public StoreId: string;
        public TransactionDateTime: Date;
        public TerminalId: string;
        public UploadType: string;
        public UploadTypeValue: number;
        public StaffId: string;
        public RecordGuid: string;
        public RegistrationStatusValue: number;
        public RegistrationProcessId: string;
        public ConnectorGroup: string;
        public ConnectorName: string;
        public ConnectorFunctionalityProfileId: string;
        public RegisterInfo: string;
        public CreatedDateTime: Date;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.EventId = (odataObject.EventId != null) ? parseInt(odataObject.EventId, 10) : undefined;
          this.RegisterResponse = odataObject.RegisterResponse;
          this.StoreId = odataObject.StoreId;
          this.TransactionDateTime = (odataObject.TransactionDateTime instanceof Date) ? odataObject.TransactionDateTime
            : (odataObject.TransactionDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.TransactionDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.TerminalId = odataObject.TerminalId;
          this.UploadType = odataObject.UploadType;
          this.UploadTypeValue = odataObject.UploadTypeValue;
          this.StaffId = odataObject.StaffId;
          this.RecordGuid = odataObject.RecordGuid;
          this.RegistrationStatusValue = odataObject.RegistrationStatusValue;
          this.RegistrationProcessId = odataObject.RegistrationProcessId;
          this.ConnectorGroup = odataObject.ConnectorGroup;
          this.ConnectorName = odataObject.ConnectorName;
          this.ConnectorFunctionalityProfileId = odataObject.ConnectorFunctionalityProfileId;
          this.RegisterInfo = odataObject.RegisterInfo;
          this.CreatedDateTime = (odataObject.CreatedDateTime instanceof Date) ? odataObject.CreatedDateTime
            : (odataObject.CreatedDateTime != null) ? OData.jsonLightReadStringPropertyValue(odataObject.CreatedDateTime, "Edm.DateTimeOffset", false) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * NotificationDetail entity class.
     */
    export class NotificationDetailClass implements NotificationDetail {
        public ActionProperty: string;
        public ItemCount: number;
        public DisplayText: string;
        public IsNew: boolean;
        public LastUpdatedDateTimeStr: string;
        public IsSuccess: boolean;
        public IsLiveContentOnly: boolean;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ActionProperty = odataObject.ActionProperty;
          this.ItemCount = (odataObject.ItemCount != null) ? parseInt(odataObject.ItemCount, 10) : undefined;
          this.DisplayText = odataObject.DisplayText;
          this.IsNew = odataObject.IsNew;
          this.LastUpdatedDateTimeStr = odataObject.LastUpdatedDateTimeStr;
          this.IsSuccess = odataObject.IsSuccess;
          this.IsLiveContentOnly = odataObject.IsLiveContentOnly;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationDocumentContext entity class.
     */
    export class FiscalIntegrationDocumentContextClass implements FiscalIntegrationDocumentContext {
        public AuditEvent: Entities.AuditEvent;
        public SignatureData: Entities.FiscalIntegrationSequentialSignatureData[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.AuditEvent == null) {
              this.AuditEvent = undefined;
          } else if (odataObject.AuditEvent['@odata.type'] == null) {
              this.AuditEvent = new AuditEventClass(odataObject.AuditEvent);
          } else {
              var className: string = odataObject.AuditEvent['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.AuditEvent = new Commerce.Proxy.Entities[className](odataObject.AuditEvent)
              }
          }

    
          this.SignatureData = undefined;
          if (odataObject.SignatureData) {
              this.SignatureData = [];
              for (var i = 0; i < odataObject.SignatureData.length; i++) {
                  if (odataObject.SignatureData[i] != null) {
                      if (odataObject.SignatureData[i]['@odata.type'] != null) {
                          var className: string = odataObject.SignatureData[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SignatureData[i] = new Commerce.Proxy.Entities[className](odataObject.SignatureData[i])
                          }
                      } else {
                          this.SignatureData[i] = new FiscalIntegrationSequentialSignatureDataClass(odataObject.SignatureData[i]);
                      }
                  } else {
                      this.SignatureData[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationDocumentAdjustment entity class.
     */
    export class FiscalIntegrationDocumentAdjustmentClass implements FiscalIntegrationDocumentAdjustment {
        public TenderLineAdjustments: Entities.FiscalTransactionTenderLineAdjustment[];
        public SalesLineAdjustments: Entities.FiscalTransactionSalesLineAdjustment[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.TenderLineAdjustments = undefined;
          if (odataObject.TenderLineAdjustments) {
              this.TenderLineAdjustments = [];
              for (var i = 0; i < odataObject.TenderLineAdjustments.length; i++) {
                  if (odataObject.TenderLineAdjustments[i] != null) {
                      if (odataObject.TenderLineAdjustments[i]['@odata.type'] != null) {
                          var className: string = odataObject.TenderLineAdjustments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.TenderLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.TenderLineAdjustments[i])
                          }
                      } else {
                          this.TenderLineAdjustments[i] = new FiscalTransactionTenderLineAdjustmentClass(odataObject.TenderLineAdjustments[i]);
                      }
                  } else {
                      this.TenderLineAdjustments[i] = undefined;
                  }
              }
          }
          this.SalesLineAdjustments = undefined;
          if (odataObject.SalesLineAdjustments) {
              this.SalesLineAdjustments = [];
              for (var i = 0; i < odataObject.SalesLineAdjustments.length; i++) {
                  if (odataObject.SalesLineAdjustments[i] != null) {
                      if (odataObject.SalesLineAdjustments[i]['@odata.type'] != null) {
                          var className: string = odataObject.SalesLineAdjustments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.SalesLineAdjustments[i] = new Commerce.Proxy.Entities[className](odataObject.SalesLineAdjustments[i])
                          }
                      } else {
                          this.SalesLineAdjustments[i] = new FiscalTransactionSalesLineAdjustmentClass(odataObject.SalesLineAdjustments[i]);
                      }
                  } else {
                      this.SalesLineAdjustments[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationSignatureDataContext entity class.
     */
    export class FiscalIntegrationSignatureDataContextClass implements FiscalIntegrationSignatureDataContext {
        public SequentialSignatureKey: string;
        public SequentialNumber: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SequentialSignatureKey = odataObject.SequentialSignatureKey;
          this.SequentialNumber = (odataObject.SequentialNumber != null) ? parseInt(odataObject.SequentialNumber, 10) : undefined;
        }
    }
    
    /**
     * FiscalIntegrationRegistrationProcessLine entity class.
     */
    export class FiscalIntegrationRegistrationProcessLineClass implements FiscalIntegrationRegistrationProcessLine {
        public RegistrationProcessId: string;
        public SequenceNumber: number;
        public Priority: number;
        public ConnectorTypeValue: number;
        public FunctionalityProfileGroupId: string;
        public AllowSkip: boolean;
        public AllowMarkAsRegistered: boolean;
        public Optional: boolean;
        public RegistrationSettings: Entities.FiscalIntegrationRegistrationSettings;
        public SupportedFiscalEventTypes: number[];
        public SupportedNonFiscalEventTypes: number[];
        public SequentialKeys: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.RegistrationProcessId = odataObject.RegistrationProcessId;
          this.SequenceNumber = odataObject.SequenceNumber;
          this.Priority = odataObject.Priority;
          this.ConnectorTypeValue = odataObject.ConnectorTypeValue;
          this.FunctionalityProfileGroupId = odataObject.FunctionalityProfileGroupId;
          this.AllowSkip = odataObject.AllowSkip;
          this.AllowMarkAsRegistered = odataObject.AllowMarkAsRegistered;
          this.Optional = odataObject.Optional;
          if (odataObject.RegistrationSettings == null) {
              this.RegistrationSettings = undefined;
          } else if (odataObject.RegistrationSettings['@odata.type'] == null) {
              this.RegistrationSettings = new FiscalIntegrationRegistrationSettingsClass(odataObject.RegistrationSettings);
          } else {
              var className: string = odataObject.RegistrationSettings['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.RegistrationSettings = new Commerce.Proxy.Entities[className](odataObject.RegistrationSettings)
              }
          }

    
          this.SupportedFiscalEventTypes = undefined;
          if (odataObject.SupportedFiscalEventTypes) {
              this.SupportedFiscalEventTypes = [];
              for (var i = 0; i < odataObject.SupportedFiscalEventTypes.length; i++) {
                  if (odataObject.SupportedFiscalEventTypes[i] != null) {
                      this.SupportedFiscalEventTypes[i] = odataObject.SupportedFiscalEventTypes[i];              } else {
                      this.SupportedFiscalEventTypes[i] = undefined;
                  }
              }
          }
          this.SupportedNonFiscalEventTypes = undefined;
          if (odataObject.SupportedNonFiscalEventTypes) {
              this.SupportedNonFiscalEventTypes = [];
              for (var i = 0; i < odataObject.SupportedNonFiscalEventTypes.length; i++) {
                  if (odataObject.SupportedNonFiscalEventTypes[i] != null) {
                      this.SupportedNonFiscalEventTypes[i] = odataObject.SupportedNonFiscalEventTypes[i];              } else {
                      this.SupportedNonFiscalEventTypes[i] = undefined;
                  }
              }
          }
          this.SequentialKeys = undefined;
          if (odataObject.SequentialKeys) {
              this.SequentialKeys = [];
              for (var i = 0; i < odataObject.SequentialKeys.length; i++) {
                  if (odataObject.SequentialKeys[i] != null) {
                      this.SequentialKeys[i] = odataObject.SequentialKeys[i];              } else {
                      this.SequentialKeys[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * FiscalIntegrationRegistrationSettings entity class.
     */
    export class FiscalIntegrationRegistrationSettingsClass implements FiscalIntegrationRegistrationSettings {
        public SkipReasonCode: string;
        public MarkAsRegisteredReasonCode: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.SkipReasonCode = odataObject.SkipReasonCode;
          this.MarkAsRegisteredReasonCode = odataObject.MarkAsRegisteredReasonCode;
        }
    }
    
    /**
     * FiscalIntegrationServiceFailureDetails entity class.
     */
    export class FiscalIntegrationServiceFailureDetailsClass implements FiscalIntegrationServiceFailureDetails {
        public FailureTypeValue: number;
        public IsRetryAllowed: boolean;
        public ErrorCode: string;
        public ErrorMessage: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.FailureTypeValue = odataObject.FailureTypeValue;
          this.IsRetryAllowed = odataObject.IsRetryAllowed;
          this.ErrorCode = odataObject.ErrorCode;
          this.ErrorMessage = odataObject.ErrorMessage;
        }
    }
    
    /**
     * CategoryPath entity class.
     */
    export class CategoryPathClass implements CategoryPath {
        public Segments: Entities.CategoryPathSegment[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Segments = undefined;
          if (odataObject.Segments) {
              this.Segments = [];
              for (var i = 0; i < odataObject.Segments.length; i++) {
                  if (odataObject.Segments[i] != null) {
                      if (odataObject.Segments[i]['@odata.type'] != null) {
                          var className: string = odataObject.Segments[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.Segments[i] = new Commerce.Proxy.Entities[className](odataObject.Segments[i])
                          }
                      } else {
                          this.Segments[i] = new CategoryPathSegmentClass(odataObject.Segments[i]);
                      }
                  } else {
                      this.Segments[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CategoryPathSegment entity class.
     */
    export class CategoryPathSegmentClass implements CategoryPathSegment {
        public CategoryName: string;
        public CategoryId: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.CategoryName = odataObject.CategoryName;
          this.CategoryId = (odataObject.CategoryId != null) ? parseInt(odataObject.CategoryId, 10) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * AttachedService entity class.
     */
    export class AttachedServiceClass implements AttachedService {
        public BaseUrl: string;
        public ServiceId: string;
        public StatusValue: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.BaseUrl = odataObject.BaseUrl;
          this.ServiceId = odataObject.ServiceId;
          this.StatusValue = odataObject.StatusValue;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CustomerTimelineItemType entity class.
     */
    export class CustomerTimelineItemTypeClass implements CustomerTimelineItemType {
        public Description: string;
        public TypeId: string;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.Description = odataObject.Description;
          this.TypeId = odataObject.TypeId;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ProductWarehouseInventoryAvailability entity class.
     */
    export class ProductWarehouseInventoryAvailabilityClass implements ProductWarehouseInventoryAvailability {
        public ProductId: number;
        public InventLocationId: string;
        public DataAreaId: string;
        public PhysicalInventory: number;
        public PhysicalReserved: number;
        public TotalAvailable: number;
        public TotalAvailableInventoryLevelLabel: string;
        public TotalAvailableInventoryLevelCode: string;
        public OrderedInTotal: number;
        public PhysicalAvailable: number;
        public PhysicalAvailableInventoryLevelLabel: string;
        public PhysicalAvailableInventoryLevelCode: string;
        public LastInventoryTransactionId: number;
        public UnpostedOnlineOrderedQuantity: number;
        public IsInventoryAvailabilityQuantityReturned: boolean;
        public SumUncountedTransactions: number;
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ProductId = (odataObject.ProductId != null) ? parseInt(odataObject.ProductId, 10) : undefined;
          this.InventLocationId = odataObject.InventLocationId;
          this.DataAreaId = odataObject.DataAreaId;
          this.PhysicalInventory = (odataObject.PhysicalInventory != null) ? parseFloat(odataObject.PhysicalInventory) : undefined;
          this.PhysicalReserved = (odataObject.PhysicalReserved != null) ? parseFloat(odataObject.PhysicalReserved) : undefined;
          this.TotalAvailable = (odataObject.TotalAvailable != null) ? parseFloat(odataObject.TotalAvailable) : undefined;
          this.TotalAvailableInventoryLevelLabel = odataObject.TotalAvailableInventoryLevelLabel;
          this.TotalAvailableInventoryLevelCode = odataObject.TotalAvailableInventoryLevelCode;
          this.OrderedInTotal = (odataObject.OrderedInTotal != null) ? parseFloat(odataObject.OrderedInTotal) : undefined;
          this.PhysicalAvailable = (odataObject.PhysicalAvailable != null) ? parseFloat(odataObject.PhysicalAvailable) : undefined;
          this.PhysicalAvailableInventoryLevelLabel = odataObject.PhysicalAvailableInventoryLevelLabel;
          this.PhysicalAvailableInventoryLevelCode = odataObject.PhysicalAvailableInventoryLevelCode;
          this.LastInventoryTransactionId = (odataObject.LastInventoryTransactionId != null) ? parseInt(odataObject.LastInventoryTransactionId, 10) : undefined;
          this.UnpostedOnlineOrderedQuantity = (odataObject.UnpostedOnlineOrderedQuantity != null) ? parseFloat(odataObject.UnpostedOnlineOrderedQuantity) : undefined;
          this.IsInventoryAvailabilityQuantityReturned = odataObject.IsInventoryAvailabilityQuantityReturned;
          this.SumUncountedTransactions = (odataObject.SumUncountedTransactions != null) ? parseFloat(odataObject.SumUncountedTransactions) : undefined;
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * ParameterSet entity class.
     */
    export class ParameterSetClass implements ParameterSet {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
        }
    }
    
    /**
     * CartLineValidationResults entity class.
     */
    export class CartLineValidationResultsClass implements CartLineValidationResults {
        public ValidationFailuresByCartLines: Entities.LineDataValidationFailure[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ValidationFailuresByCartLines = undefined;
          if (odataObject.ValidationFailuresByCartLines) {
              this.ValidationFailuresByCartLines = [];
              for (var i = 0; i < odataObject.ValidationFailuresByCartLines.length; i++) {
                  if (odataObject.ValidationFailuresByCartLines[i] != null) {
                      if (odataObject.ValidationFailuresByCartLines[i]['@odata.type'] != null) {
                          var className: string = odataObject.ValidationFailuresByCartLines[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ValidationFailuresByCartLines[i] = new Commerce.Proxy.Entities[className](odataObject.ValidationFailuresByCartLines[i])
                          }
                      } else {
                          this.ValidationFailuresByCartLines[i] = new LineDataValidationFailureClass(odataObject.ValidationFailuresByCartLines[i]);
                      }
                  } else {
                      this.ValidationFailuresByCartLines[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * CommerceException entity class.
     */
    export class CommerceExceptionClass implements CommerceException {
        public LocalizedMessage: string;
        public ErrorResourceId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.LocalizedMessage = odataObject.LocalizedMessage;
          this.ErrorResourceId = odataObject.ErrorResourceId;
        }
    }
    
    /**
     * DataValidationException entity class.
     */
    export class DataValidationExceptionClass extends CommerceExceptionClass implements DataValidationException {
        public ValidationResults: Entities.DataValidationFailure[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ValidationResults = undefined;
          if (odataObject.ValidationResults) {
              this.ValidationResults = [];
              for (var i = 0; i < odataObject.ValidationResults.length; i++) {
                  if (odataObject.ValidationResults[i] != null) {
                      if (odataObject.ValidationResults[i]['@odata.type'] != null) {
                          var className: string = odataObject.ValidationResults[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ValidationResults[i] = new Commerce.Proxy.Entities[className](odataObject.ValidationResults[i])
                          }
                      } else {
                          this.ValidationResults[i] = new DataValidationFailureClass(odataObject.ValidationResults[i]);
                      }
                  } else {
                      this.ValidationResults[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DataValidationException";
            
        }
    }
    
    /**
     * MissingRequiredReasonCodeException entity class.
     */
    export class MissingRequiredReasonCodeExceptionClass extends DataValidationExceptionClass implements MissingRequiredReasonCodeException {
        public RequiredReasonCodes: Entities.ReasonCode[];
        public TransactionRequiredReasonCodeIds: string[];
        public ReasonCodeRequirements: Entities.ReasonCodeRequirement[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RequiredReasonCodes = undefined;
          if (odataObject.RequiredReasonCodes) {
              this.RequiredReasonCodes = [];
              for (var i = 0; i < odataObject.RequiredReasonCodes.length; i++) {
                  if (odataObject.RequiredReasonCodes[i] != null) {
                      if (odataObject.RequiredReasonCodes[i]['@odata.type'] != null) {
                          var className: string = odataObject.RequiredReasonCodes[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.RequiredReasonCodes[i] = new Commerce.Proxy.Entities[className](odataObject.RequiredReasonCodes[i])
                          }
                      } else {
                          this.RequiredReasonCodes[i] = new ReasonCodeClass(odataObject.RequiredReasonCodes[i]);
                      }
                  } else {
                      this.RequiredReasonCodes[i] = undefined;
                  }
              }
          }
          this.TransactionRequiredReasonCodeIds = undefined;
          if (odataObject.TransactionRequiredReasonCodeIds) {
              this.TransactionRequiredReasonCodeIds = [];
              for (var i = 0; i < odataObject.TransactionRequiredReasonCodeIds.length; i++) {
                  if (odataObject.TransactionRequiredReasonCodeIds[i] != null) {
                      this.TransactionRequiredReasonCodeIds[i] = odataObject.TransactionRequiredReasonCodeIds[i];              } else {
                      this.TransactionRequiredReasonCodeIds[i] = undefined;
                  }
              }
          }
          this.ReasonCodeRequirements = undefined;
          if (odataObject.ReasonCodeRequirements) {
              this.ReasonCodeRequirements = [];
              for (var i = 0; i < odataObject.ReasonCodeRequirements.length; i++) {
                  if (odataObject.ReasonCodeRequirements[i] != null) {
                      if (odataObject.ReasonCodeRequirements[i]['@odata.type'] != null) {
                          var className: string = odataObject.ReasonCodeRequirements[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ReasonCodeRequirements[i] = new Commerce.Proxy.Entities[className](odataObject.ReasonCodeRequirements[i])
                          }
                      } else {
                          this.ReasonCodeRequirements[i] = new ReasonCodeRequirementClass(odataObject.ReasonCodeRequirements[i]);
                      }
                  } else {
                      this.ReasonCodeRequirements[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.MissingRequiredReasonCodeException";
            
        }
    }
    
    /**
     * SecurityException entity class.
     */
    export class SecurityExceptionClass extends CommerceExceptionClass implements SecurityException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.SecurityException";
            
        }
    }
    
    /**
     * DeviceAuthenticationException entity class.
     */
    export class DeviceAuthenticationExceptionClass extends SecurityExceptionClass implements DeviceAuthenticationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.DeviceAuthenticationException";
            
        }
    }
    
    /**
     * HeadquarterTransactionServiceException entity class.
     */
    export class HeadquarterTransactionServiceExceptionClass extends CommerceExceptionClass implements HeadquarterTransactionServiceException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.HeadquarterTransactionServiceException";
            
        }
    }
    
    /**
     * UserAuthenticationException entity class.
     */
    export class UserAuthenticationExceptionClass extends SecurityExceptionClass implements UserAuthenticationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.UserAuthenticationException";
            
        }
    }
    
    /**
     * UserAuthorizationException entity class.
     */
    export class UserAuthorizationExceptionClass extends SecurityExceptionClass implements UserAuthorizationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.UserAuthorizationException";
            
        }
    }
    
    /**
     * FeatureNotSupportedException entity class.
     */
    export class FeatureNotSupportedExceptionClass extends CommerceExceptionClass implements FeatureNotSupportedException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.FeatureNotSupportedException";
            
        }
    }
    
    /**
     * CartValidationException entity class.
     */
    export class CartValidationExceptionClass extends DataValidationExceptionClass implements CartValidationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.CartValidationException";
            
        }
    }
    
    /**
     * TenderValidationException entity class.
     */
    export class TenderValidationExceptionClass extends DataValidationExceptionClass implements TenderValidationException {
        public TenderTypeId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.TenderTypeId = odataObject.TenderTypeId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.TenderValidationException";
            
        }
    }
    
    /**
     * PaymentException entity class.
     */
    export class PaymentExceptionClass extends CommerceExceptionClass implements PaymentException {
        public PaymentSdkErrors: Entities.PaymentError[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.PaymentSdkErrors = undefined;
          if (odataObject.PaymentSdkErrors) {
              this.PaymentSdkErrors = [];
              for (var i = 0; i < odataObject.PaymentSdkErrors.length; i++) {
                  if (odataObject.PaymentSdkErrors[i] != null) {
                      if (odataObject.PaymentSdkErrors[i]['@odata.type'] != null) {
                          var className: string = odataObject.PaymentSdkErrors[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.PaymentSdkErrors[i] = new Commerce.Proxy.Entities[className](odataObject.PaymentSdkErrors[i])
                          }
                      } else {
                          this.PaymentSdkErrors[i] = new PaymentErrorClass(odataObject.PaymentSdkErrors[i]);
                      }
                  } else {
                      this.PaymentSdkErrors[i] = undefined;
                  }
              }
          } 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.PaymentException";
            
        }
    }
    
    /**
     * CommerceDataExchangeException entity class.
     */
    export class CommerceDataExchangeExceptionClass extends CommerceExceptionClass implements CommerceDataExchangeException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.CommerceDataExchangeException";
            
        }
    }
    
    /**
     * ExtensibleEnumerationException entity class.
     */
    export class ExtensibleEnumerationExceptionClass extends CommerceExceptionClass implements ExtensibleEnumerationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ExtensibleEnumerationException";
            
        }
    }
    
    /**
     * DataValidationFailure entity class.
     */
    export class DataValidationFailureClass implements DataValidationFailure {
        public ErrorContext: string;
        public ErrorResourceId: string;
        public MemberNames: string[];
        public LocalizedMessage: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.ErrorContext = odataObject.ErrorContext;
          this.ErrorResourceId = odataObject.ErrorResourceId;
          this.MemberNames = undefined;
          if (odataObject.MemberNames) {
              this.MemberNames = [];
              for (var i = 0; i < odataObject.MemberNames.length; i++) {
                  if (odataObject.MemberNames[i] != null) {
                      this.MemberNames[i] = odataObject.MemberNames[i];              } else {
                      this.MemberNames[i] = undefined;
                  }
              }
          }
          this.LocalizedMessage = odataObject.LocalizedMessage;
        }
    }
    
    /**
     * ItemDiscontinuedException entity class.
     */
    export class ItemDiscontinuedExceptionClass extends CommerceExceptionClass implements ItemDiscontinuedException {
        public RemovedUnavailableItemIds: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RemovedUnavailableItemIds = odataObject.RemovedUnavailableItemIds; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ItemDiscontinuedException";
            
        }
    }
    
    /**
     * InventoryDocumentLockedByOtherTerminalException entity class.
     */
    export class InventoryDocumentLockedByOtherTerminalExceptionClass extends DataValidationExceptionClass implements InventoryDocumentLockedByOtherTerminalException {
        public WorkingTerminalId: string;
        public CurrentTerminalId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.WorkingTerminalId = odataObject.WorkingTerminalId;
          this.CurrentTerminalId = odataObject.CurrentTerminalId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.InventoryDocumentLockedByOtherTerminalException";
            
        }
    }
    
    /**
     * InventoryDocumentExceedMaximumQuantityException entity class.
     */
    export class InventoryDocumentExceedMaximumQuantityExceptionClass extends DataValidationExceptionClass implements InventoryDocumentExceedMaximumQuantityException {
        public MaximumQuantity: number;
        public AllowOverDelivery: boolean;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.MaximumQuantity = (odataObject.MaximumQuantity != null) ? parseFloat(odataObject.MaximumQuantity) : undefined;
          this.AllowOverDelivery = odataObject.AllowOverDelivery; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.InventoryDocumentExceedMaximumQuantityException";
            
        }
    }
    
    /**
     * CommerceRuntimeCompositionException entity class.
     */
    export class CommerceRuntimeCompositionExceptionClass extends CommerceExceptionClass implements CommerceRuntimeCompositionException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.CommerceRuntimeCompositionException";
            
        }
    }
    
    /**
     * ChecklistTaskValidationException entity class.
     */
    export class ChecklistTaskValidationExceptionClass extends DataValidationExceptionClass implements ChecklistTaskValidationException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ChecklistTaskValidationException";
            
        }
    }
    
    /**
     * InsufficientCredentialLengthException entity class.
     */
    export class InsufficientCredentialLengthExceptionClass extends DataValidationExceptionClass implements InsufficientCredentialLengthException {
        public ActualLength: number;
        public MinLength: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.ActualLength = odataObject.ActualLength;
          this.MinLength = odataObject.MinLength; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.InsufficientCredentialLengthException";
            
        }
    }
    
    /**
     * ExtensibleEnumerationCacheException entity class.
     */
    export class ExtensibleEnumerationCacheExceptionClass extends CommerceExceptionClass implements ExtensibleEnumerationCacheException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.ExtensibleEnumerationCacheException";
            
        }
    }
    
    /**
     * StaffPasswordExpiredException entity class.
     */
    export class StaffPasswordExpiredExceptionClass extends UserAuthenticationExceptionClass implements StaffPasswordExpiredException {
        public StaffId: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.StaffId = odataObject.StaffId; 
            this["@odata.type"] = "#Microsoft.Dynamics.Commerce.Runtime.StaffPasswordExpiredException";
            
        }
    }
    
    /**
     * TenderTypePolicy entity class.
     */
    export class TenderTypePolicyClass implements TenderTypePolicy {
        public OriginalTenderType: string;
        public AllowedReturnTenderTypes: string[];
        public ExtensionProperties: Entities.CommerceProperty[];
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          this.OriginalTenderType = odataObject.OriginalTenderType;
          this.AllowedReturnTenderTypes = undefined;
          if (odataObject.AllowedReturnTenderTypes) {
              this.AllowedReturnTenderTypes = [];
              for (var i = 0; i < odataObject.AllowedReturnTenderTypes.length; i++) {
                  if (odataObject.AllowedReturnTenderTypes[i] != null) {
                      this.AllowedReturnTenderTypes[i] = odataObject.AllowedReturnTenderTypes[i];              } else {
                      this.AllowedReturnTenderTypes[i] = undefined;
                  }
              }
          }
          this.ExtensionProperties = undefined;
          if (odataObject.ExtensionProperties) {
              this.ExtensionProperties = [];
              for (var i = 0; i < odataObject.ExtensionProperties.length; i++) {
                  if (odataObject.ExtensionProperties[i] != null) {
                      if (odataObject.ExtensionProperties[i]['@odata.type'] != null) {
                          var className: string = odataObject.ExtensionProperties[i]['@odata.type'];
                          className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
                          if (Commerce.Proxy.Entities[className]) {
                              this.ExtensionProperties[i] = new Commerce.Proxy.Entities[className](odataObject.ExtensionProperties[i])
                          }
                      } else {
                          this.ExtensionProperties[i] = new CommercePropertyClass(odataObject.ExtensionProperties[i]);
                      }
                  } else {
                      this.ExtensionProperties[i] = undefined;
                  }
              }
          }
        }
    }
    
    /**
     * LineDataValidationFailure entity class.
     */
    export class LineDataValidationFailureClass implements LineDataValidationFailure {
        public DataValidationFailure: Entities.DataValidationFailure;
        public LineIndex: number;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            odataObject = odataObject || {};
          if (odataObject.DataValidationFailure == null) {
              this.DataValidationFailure = undefined;
          } else if (odataObject.DataValidationFailure['@odata.type'] == null) {
              this.DataValidationFailure = new DataValidationFailureClass(odataObject.DataValidationFailure);
          } else {
              var className: string = odataObject.DataValidationFailure['@odata.type'];
              className = className.substr(className.lastIndexOf('.') + 1).concat("Class");
              if (Commerce.Proxy.Entities[className]) {
                  this.DataValidationFailure = new Commerce.Proxy.Entities[className](odataObject.DataValidationFailure)
              }
          }

    
          this.LineIndex = odataObject.LineIndex;
        }
    }
    
    /**
     * WrongEndpointException entity class.
     */
    export class WrongEndpointExceptionClass extends CommerceExceptionClass implements WrongEndpointException {
        public RedirectUri: string;
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {};
          this.RedirectUri = odataObject.RedirectUri; 
            this["@odata.type"] = "#Microsoft.Dynamics.Retail.RetailServerLibrary.WrongEndpointException";
            
        }
    }
    
    /**
     * BadRequestException entity class.
     */
    export class BadRequestExceptionClass extends CommerceExceptionClass implements BadRequestException {
        
        // Navigation properties names
        
        /**
         * Construct an object from odata response.
         *
         * @param {any} odataObject The odata result object.
         */
        constructor(odataObject?: any) {
            super(odataObject);odataObject = odataObject || {}; 
            this["@odata.type"] = "#Microsoft.Dynamics.Retail.RetailServerLibrary.BadRequestException";
            
        }
    }
    
}
